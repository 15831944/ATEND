using System;
using System.Collections.Generic;
using System.Text;

using System.Data;
using System.Data.SqlClient;

using Autodesk.AutoCAD.EditorInput;
using Autodesk.AutoCAD.ApplicationServices;
using Autodesk.AutoCAD.Geometry;
using System.Data.OleDb;
namespace Atend.Base.Equipment
{
    public class EContainerPackage
    {

        private int code;
        public int Code
        {
            get { return code; }
            set { code = value; }
        }

        //فقط در اکسس و سرور استفاده میشود
        private int containerCode;
        public int ContainerCode
        {
            get { return containerCode; }
            set { containerCode = value; }
        }


        private int type;
        public int Type
        {
            get { return type; }
            set { type = value; }
        }


        private Guid xcode;
        public Guid XCode
        {
            get { return xcode; }
            set { xcode = value; }
        }


        public bool Insert(SqlTransaction sqlTransaction, SqlConnection sqlConnection)
        {
            Editor ed = Application.DocumentManager.MdiActiveDocument.Editor;
            SqlConnection _connection = sqlConnection;
            SqlCommand _command = new SqlCommand("E_ContainerPackage_Insert", _connection);
            _command.CommandType = CommandType.StoredProcedure;
            _command.Transaction = sqlTransaction;
            _command.Parameters.Add(new SqlParameter("iContainerCode", ContainerCode));
            _command.Parameters.Add(new SqlParameter("iXCode", XCode));
            _command.Parameters.Add(new SqlParameter("iType", Type));

            try
            {
                Code = Convert.ToInt32(_command.ExecuteScalar());
                ed.WriteMessage("Selected Container.Code={0}\n", Code);
            }
            catch (System.Exception ex1)
            {
                ed.WriteMessage(string.Format("Error ContainerPackage.Insert : {0} \n", ex1.Message));
                return false;
            }
            return true;
        }

        public static bool Delete(SqlTransaction sqlTransaction, SqlConnection sqlConnection, int _ContainerCode, int _Type)
        {
            Editor ed = Autodesk.AutoCAD.ApplicationServices.Application.DocumentManager.MdiActiveDocument.Editor;
            SqlConnection _connection = sqlConnection;
            SqlCommand _command = new SqlCommand("E_ContainerPackage_Delete", _connection);
            _command.CommandType = CommandType.StoredProcedure;
            _command.Transaction = sqlTransaction;

            _command.Parameters.Add(new SqlParameter("iContainerCode", _ContainerCode));
            _command.Parameters.Add(new SqlParameter("iType", _Type));

            try
            {
                _command.ExecuteNonQuery();
            }
            catch (System.Exception ex1)
            {
                ed.WriteMessage(string.Format(" E_ContainerPackage.Delete : {0}", ex1.Message));
                return false;
            }
            return true;
        }

        public static EContainerPackage selectByContainerCodeAndType(int containerCode, int type)
        {
            Editor ed = Autodesk.AutoCAD.ApplicationServices.Application.DocumentManager.MdiActiveDocument.Editor;

            SqlConnection Connection = new SqlConnection(Atend.Control.ConnectionString.ServercnString);
            SqlCommand sqlCommand = new SqlCommand("E_ContainerPackage_SelectByContainerCodeAndType", Connection);
            sqlCommand.CommandType = CommandType.StoredProcedure;
            sqlCommand.Parameters.Add(new SqlParameter("iContainerCode", containerCode));
            sqlCommand.Parameters.Add(new SqlParameter("iType", type));

            //ed.writeMessage(string.Format("ContainerCode:{0},Type:{1}\n", containerCode, type));
            Connection.Open();
            SqlDataReader reader = sqlCommand.ExecuteReader();
            EContainerPackage ContainerPackage = new EContainerPackage();
            if (reader.Read())
            {
                ContainerPackage.Type = Convert.ToInt32(reader["Type"].ToString());
                ContainerPackage.Code = Convert.ToInt32(reader["Code"].ToString());
                //ContainerPackage.ContainerCode = Convert.ToInt32(reader["ContainerCode"].ToString());
                //ed.writeMessage("SelectContainerCode:" + ContainerPackage.Code.ToString()+"\n");
            }
            reader.Close();
            Connection.Close();
            return ContainerPackage;

        }

        public static EContainerPackage selectByContainerCodeAndType(SqlTransaction sqlTransaction, SqlConnection sqlConnection, int containerCode, int type)
        {
            Editor ed = Autodesk.AutoCAD.ApplicationServices.Application.DocumentManager.MdiActiveDocument.Editor;

            SqlConnection Connection = sqlConnection;// new SqlConnection(Atend.Control.ConnectionString.ServercnString);
            SqlCommand sqlCommand = new SqlCommand("E_ContainerPackage_SelectByContainerCodeAndType", Connection);
            sqlCommand.CommandType = CommandType.StoredProcedure;
            sqlCommand.Parameters.Add(new SqlParameter("iContainerCode", containerCode));
            sqlCommand.Parameters.Add(new SqlParameter("iType", type));
            sqlCommand.Transaction = sqlTransaction;
            //ed.writeMessage(string.Format("ContainerCode:{0},Type:{1}\n", containerCode, type));
            //Connection.Open();
            SqlDataReader reader = sqlCommand.ExecuteReader();
            EContainerPackage ContainerPackage = new EContainerPackage();
            if (reader.Read())
            {
                ContainerPackage.Type = Convert.ToInt32(reader["Type"].ToString());
                ContainerPackage.Code = Convert.ToInt32(reader["Code"].ToString());
                ContainerPackage.ContainerCode = Convert.ToInt32(reader["ContainerCode"].ToString());
                //ed.writeMessage("SelectContainerCode:" + ContainerPackage.Code.ToString()+"\n");
            }
            else
            {
                ContainerPackage.Code = 0;
            }
            reader.Close();
            return ContainerPackage;

        }

        //public static bool SentFromLocalToAccess(Guid XCode, int Type, int ContainerCode, OleDbTransaction _transaction, OleDbConnection _connection)
        //{
        //    Editor ed = Application.DocumentManager.MdiActiveDocument.Editor;
        //    try
        //    {
        //        Atend.Base.Equipment.EContainerPackage SelectedContainer = Atend.Base.Equipment.EContainerPackage.selectByContainerXCodeAndType(XCode, Type);
        //        if (SelectedContainer.ContainerCode != -1)
        //        {
        //            int LastContainerPackageCode = SelectedContainer.Code;
        //            SelectedContainer.ContainerCode = ContainerCode;
        //            if (!SelectedContainer.AccessInsert(_transaction, _connection))
        //            {
        //                DataTable Products = Atend.Base.Equipment.EProductPackage.SelectByContainerPackageCodeForLocal(LastContainerPackageCode);
        //                foreach (DataRow dr in Products.Rows)
        //                {
        //                    //Atend.Base.Equipment.EProductPackage SelectedProduct=Atend.Base.Equipment.EProductPackage.
        //                }

        //            }
        //        }
        //        else
        //        {
        //            ed.WriteMessage("No container Package was found\n");
        //            //No container Package was found
        //        }
        //    }
        //    catch (System.Exception ex)
        //    {
        //        ed.WriteMessage("ERROR EContainerPackage.SentFromLocalToAccess :{0} \n", ex.Message);
        //        return false;
        //    }

        //    return true;
        //}


        public static DataTable selectByContainerCodeAndTypeAndTAbleType(int containerCode, int type, int tableType)
        {
            Editor ed = Autodesk.AutoCAD.ApplicationServices.Application.DocumentManager.MdiActiveDocument.Editor;

            SqlConnection Connection = new SqlConnection(Atend.Control.ConnectionString.ServercnString);
            SqlDataAdapter adapter = new SqlDataAdapter("E_ContainerPackage_SelectByContainerCodeAndTypeAndTableType", Connection);
            adapter.SelectCommand.CommandType = CommandType.StoredProcedure;
            adapter.SelectCommand.Parameters.Add(new SqlParameter("iContainercode", containerCode));
            adapter.SelectCommand.Parameters.Add(new SqlParameter("iType", type));
            adapter.SelectCommand.Parameters.Add(new SqlParameter("iTableType", tableType));

            //ed.writeMessage(string.Format("ContainerCode:{0},Type:{1},TableType{2}\n", containerCode, type, tableType));
            Connection.Open();
            DataSet dsContainerPackage = new DataSet();
            adapter.Fill(dsContainerPackage);

            Connection.Close();
            return dsContainerPackage.Tables[0];
        }

        public static DataTable SelectByType(int Type)
        {
            SqlConnection Connection = new SqlConnection(Atend.Control.ConnectionString.ServercnString);
            SqlDataAdapter adapter = new SqlDataAdapter("E_ContainerPackage_SelectByType", Connection);
            adapter.SelectCommand.CommandType = System.Data.CommandType.StoredProcedure;
            adapter.SelectCommand.Parameters.Add(new SqlParameter("iType", Type));

            Connection.Open();
            DataSet dsContainerPackage = new DataSet();
            adapter.Fill(dsContainerPackage);

            Connection.Close();
            return dsContainerPackage.Tables[0];
        }

        public static DataTable SelectAll()
        {
            SqlConnection connection = new SqlConnection(Atend.Control.ConnectionString.ServercnString);
            SqlDataAdapter adapter = new SqlDataAdapter("E_containerPackage_Select", connection);
            adapter.SelectCommand.CommandType = CommandType.StoredProcedure;

            adapter.SelectCommand.Parameters.Add(new SqlParameter("iCode", -1));
            DataSet dsPackage = new DataSet();
            adapter.Fill(dsPackage);
            return dsPackage.Tables[0];
        }

        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~Local Part~~~~~~~~~~~~~~~~~~~~~//
        //GroundPost
        public bool InsertX(SqlTransaction sqlTransaction, SqlConnection sqlConnection)
        {
            Editor ed = Application.DocumentManager.MdiActiveDocument.Editor;
            SqlConnection _connection = sqlConnection;
            SqlCommand _command = new SqlCommand("E_ContainerPackage_InsertX", _connection);
            _command.CommandType = CommandType.StoredProcedure;

            _command.Transaction = sqlTransaction;
            //_command.Parameters.Add(new SqlParameter("iContainerCode", ContainerCode));
            _command.Parameters.Add(new SqlParameter("iType", Type));
            //XCode = Guid.NewGuid();
            //ed.WriteMessage("\n" + XCode + "\n");
            _command.Parameters.Add(new SqlParameter("iXCode", XCode));


            try
            {
                Code = Convert.ToInt32(_command.ExecuteScalar());
                //ed.writeMessage("ContainerPackage Insert Done Success. \n");
            }
            catch (System.Exception ex1)
            {
                ed.WriteMessage(string.Format("Error ContainerPackage.InsertX : {0} \n", ex1.Message));
                return false;
            }
            return true;
        }

        //frmGroundPost For Local
        public static bool DeleteX(SqlTransaction sqlTransaction, SqlConnection sqlConnection, Guid _XCode, int _Type)
        {
            Editor ed = Autodesk.AutoCAD.ApplicationServices.Application.DocumentManager.MdiActiveDocument.Editor;
            SqlConnection _connection = sqlConnection;
            SqlCommand _command = new SqlCommand("E_ContainerPackage_DeleteX", _connection);
            _command.CommandType = CommandType.StoredProcedure;
            _command.Transaction = sqlTransaction;

            _command.Parameters.Add(new SqlParameter("iXCode", _XCode));
            _command.Parameters.Add(new SqlParameter("iType", _Type));

            try
            {
                _command.ExecuteNonQuery();
            }
            catch (System.Exception ex1)
            {
                ed.WriteMessage(string.Format(" E_ContainerPackage.DeleteX : {0}", ex1.Message));
                return false;
            }
            return true;
        }

        //MOUSAVI //frmGroundPost // SendFromLocalToAccess //findLoopNode
        public static EContainerPackage selectByContainerXCodeAndType(Guid containerXCode, int type)
        {
            Editor ed = Autodesk.AutoCAD.ApplicationServices.Application.DocumentManager.MdiActiveDocument.Editor;
            //ed.WriteMessage("XCODE :{0} Type:{1} \n", containerXCode, type);
            SqlConnection Connection = new SqlConnection(Atend.Control.ConnectionString.LocalcnString);
            SqlCommand sqlCommand = new SqlCommand("E_ContainerPackage_SelectByContainerXCodeAndType", Connection);
            sqlCommand.CommandType = CommandType.StoredProcedure;

            sqlCommand.Parameters.Add(new SqlParameter("iContainerXcode", containerXCode));
            sqlCommand.Parameters.Add(new SqlParameter("iType", type));

            //ed.writeMessage(string.Format("ContainerCode:{0},Type:{1}\n", containerCode, type));
            Connection.Open();
            SqlDataReader reader = sqlCommand.ExecuteReader();
            EContainerPackage ContainerPackage = new EContainerPackage();
            if (reader.Read())
            {
                ContainerPackage.Type = Convert.ToInt32(reader["Type"].ToString());
                ContainerPackage.Code = Convert.ToInt32(reader["Code"].ToString());
                ContainerPackage.XCode = new Guid(reader["XCode"].ToString());
                //ContainerPackage.ContainerCode = Convert.ToInt32(reader["ContainerCode"].ToString());
                //ed.WriteMessage("SelectContainerCode:" + ContainerPackage.Code.ToString() + "\n");
            }
            else
            {
                ContainerPackage.ContainerCode = -1;
            }
            reader.Close();
            Connection.Close();
            return ContainerPackage;

        }

        public static EContainerPackage SelectByContainerXCodeAndType(SqlTransaction _transaction, SqlConnection _connection, Guid containerXCode, int type)
        {
            Editor ed = Autodesk.AutoCAD.ApplicationServices.Application.DocumentManager.MdiActiveDocument.Editor;

            SqlConnection Connection = _connection;//new SqlConnection(Atend.Control.ConnectionString.cnString);
            SqlCommand sqlCommand = new SqlCommand("E_ContainerPackage_SelectByContainerXCodeAndType", _connection);
            sqlCommand.CommandType = CommandType.StoredProcedure;
            sqlCommand.Transaction = _transaction;
            sqlCommand.Parameters.Add(new SqlParameter("iContainerXcode", containerXCode));
            sqlCommand.Parameters.Add(new SqlParameter("iType", type));

            //ed.writeMessage(string.Format("ContainerCode:{0},Type:{1}\n", containerCode, type));
            //Connection.Open();
            SqlDataReader reader = sqlCommand.ExecuteReader();
            EContainerPackage ContainerPackage = new EContainerPackage();
            if (reader.Read())
            {
                ContainerPackage.Type = Convert.ToInt32(reader["Type"].ToString());
                ContainerPackage.Code = Convert.ToInt32(reader["Code"].ToString());
                ContainerPackage.XCode = new Guid(reader["XCode"].ToString());
                //ContainerPackage.ContainerCode = Convert.ToInt32(reader["ContainerCode"].ToString());
                //ed.writeMessage("SelectContainerCode:" + ContainerPackage.Code.ToString()+"\n");
            }
            else
            {
                ContainerPackage.Type = -1;
                ContainerPackage.Code = 0;
            }
            reader.Close();
            return ContainerPackage;

        }

        //FindLoopNode
        public static EContainerPackage selectByCode(int code)
        {
            Editor ed = Autodesk.AutoCAD.ApplicationServices.Application.DocumentManager.MdiActiveDocument.Editor;

            SqlConnection Connection = new SqlConnection(Atend.Control.ConnectionString.LocalcnString);
            SqlCommand sqlCommand = new SqlCommand("E_ContainerPackage_SelectByCode", Connection);
            sqlCommand.CommandType = CommandType.StoredProcedure;
            sqlCommand.Parameters.Add(new SqlParameter("iCode", code));

            Connection.Open();
            SqlDataReader reader = sqlCommand.ExecuteReader();
            EContainerPackage ContainerPackage = new EContainerPackage();
            if (reader.Read())
            {
                ContainerPackage.Type = Convert.ToInt32(reader["Type"].ToString());
                ContainerPackage.XCode = new Guid(reader["XCode"].ToString());
            }
            reader.Close();
            Connection.Close();
            return ContainerPackage;

        }

        public static DataTable selectByContainerXCodeAndTypeAndTAbleType(Guid containerXCode, int type, int tableType)
        {
            Editor ed = Autodesk.AutoCAD.ApplicationServices.Application.DocumentManager.MdiActiveDocument.Editor;

            SqlConnection Connection = new SqlConnection(Atend.Control.ConnectionString.LocalcnString);
            SqlDataAdapter adapter = new SqlDataAdapter("E_ContainerPackage_SelectByContainerXCodeAndTypeAndTableType", Connection);
            adapter.SelectCommand.CommandType = CommandType.StoredProcedure;
            adapter.SelectCommand.Parameters.Add(new SqlParameter("iContainerXcode", containerXCode));
            adapter.SelectCommand.Parameters.Add(new SqlParameter("iType", type));
            adapter.SelectCommand.Parameters.Add(new SqlParameter("iTableType", tableType));

            //ed.writeMessage(string.Format("ContainerCode:{0},Type:{1},TableType{2}\n", containerCode, type, tableType));
            Connection.Open();
            DataSet dsContainerPackage = new DataSet();
            adapter.Fill(dsContainerPackage);

            Connection.Close();
            return dsContainerPackage.Tables[0];
        }

        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Access Part~~~~~~~~~~~~~~~~~~~//

        public bool AccessInsert()
        {
            Editor ed = Application.DocumentManager.MdiActiveDocument.Editor;
            OleDbConnection con = new OleDbConnection(Atend.Control.ConnectionString.AccessCnString);
            OleDbCommand insertCommand = new OleDbCommand("E_ContainerPackage_Insert", con);
            insertCommand.CommandType = CommandType.StoredProcedure;

            insertCommand.Parameters.Add(new OleDbParameter("iXCode", XCode));
            insertCommand.Parameters.Add(new OleDbParameter("iType", Type));

            try
            {
                //if (con.State == ConnectionState.Closed)
                //{
                //    con.Open();
                //}

                con.Open();
                Code = Convert.ToInt32(insertCommand.ExecuteScalar());
                return true;
            }
            catch (OleDbException ex)
            {
                ed.WriteMessage(string.Format("Error EContainerPackage.AccessInsert : {0} \n", ex.Message));
                con.Close();
                return false;
            }
        }

        //MOUSAVI
        public bool AccessInsert(OleDbTransaction _transaction, OleDbConnection _connection)
        {
            Editor ed = Application.DocumentManager.MdiActiveDocument.Editor;
            OleDbConnection con = _connection;
            OleDbCommand insertCommand = new OleDbCommand("E_ContainerPackage_Insert", con);
            insertCommand.CommandType = CommandType.StoredProcedure;
            insertCommand.Transaction = _transaction;

            insertCommand.Parameters.Add(new OleDbParameter("iContainerCode", ContainerCode));
            //ed.WriteMessage("ContainerCode:{0} \n", ContainerCode);
            insertCommand.Parameters.Add(new OleDbParameter("iType", Type));
            //ed.WriteMessage("Type:{0} \n", Type);
            try
            {
                insertCommand.ExecuteNonQuery();
                insertCommand.Parameters.Clear();
                insertCommand.CommandType = CommandType.Text;
                insertCommand.CommandText = "SELECT @@IDENTITY";
                Code = Convert.ToInt32(insertCommand.ExecuteScalar());
                return true;
            }
            catch (OleDbException ex)
            {
                ed.WriteMessage(string.Format("Error EContainerPackage.AccessInsert : {0} \n", ex.Message));
                return false;
            }
        }

        //drawGroundPost
        public static EContainerPackage AccessSelectByContainerCodeAndType(int containerCode, int type, OleDbTransaction _Transaction, OleDbConnection _Connection)
        {
            Editor ed = Autodesk.AutoCAD.ApplicationServices.Application.DocumentManager.MdiActiveDocument.Editor;

            OleDbConnection Connection = _Connection;
            OleDbCommand sqlCommand = new OleDbCommand("E_ContainerPackage_SelectByContainerCodeAndType", Connection);
            sqlCommand.CommandType = CommandType.StoredProcedure;
            sqlCommand.Parameters.Add(new OleDbParameter("iContainercode", containerCode));
            sqlCommand.Parameters.Add(new OleDbParameter("iType", type));
            sqlCommand.Transaction = _Transaction;

            //ed.writeMessage(string.Format("ContainerCode:{0},Type:{1}\n", containerCode, type));
            //Connection.Open();
            OleDbDataReader reader = sqlCommand.ExecuteReader();
            EContainerPackage ContainerPackage = new EContainerPackage();
            if (reader.Read())
            {
                ContainerPackage.Type = Convert.ToInt32(reader["Type"].ToString());
                ContainerPackage.Code = Convert.ToInt32(reader["Code"].ToString());
                //ContainerPackage.ContainerCode = Convert.ToInt32(reader["ContainerCode"].ToString());
                //ed.writeMessage("SelectContainerCode:" + ContainerPackage.Code.ToString() + "\n");
            }
            else
            {
                ContainerPackage.Code = -1;
            }
            reader.Close();
            return ContainerPackage;
        }

        public static EContainerPackage AccessSelectByContainerCodeAndType(int containerCode, int type)
        {
            Editor ed = Autodesk.AutoCAD.ApplicationServices.Application.DocumentManager.MdiActiveDocument.Editor;

            OleDbConnection Connection = new OleDbConnection(Atend.Control.ConnectionString.AccessCnString);
            OleDbCommand sqlCommand = new OleDbCommand("E_ContainerPackage_SelectByContainerCodeAndType", Connection);
            sqlCommand.CommandType = CommandType.StoredProcedure;
            sqlCommand.Parameters.Add(new OleDbParameter("iContainercode", containerCode));
            sqlCommand.Parameters.Add(new OleDbParameter("iType", type));

            //ed.writeMessage(string.Format("ContainerCode:{0},Type:{1}\n", containerCode, type));
            Connection.Open();
            OleDbDataReader reader = sqlCommand.ExecuteReader();
            EContainerPackage ContainerPackage = new EContainerPackage();
            if (reader.Read())
            {
                ContainerPackage.Type = Convert.ToInt32(reader["Type"].ToString());
                ContainerPackage.Code = Convert.ToInt32(reader["Code"].ToString());
                //ContainerPackage.ContainerCode = Convert.ToInt32(reader["ContainerCode"].ToString());
                //ed.writeMessage("SelectContainerCode:" + ContainerPackage.Code.ToString() + "\n");
            }
            else
            {
                ContainerPackage.Code = -1;
            }
            reader.Close();
            Connection.Close();
            return ContainerPackage;
        }

        public static DataTable AccessSelectByContainerCodeAndTypeDT(int containerCode, int type)
        {
            OleDbConnection Connection = new OleDbConnection(Atend.Control.ConnectionString.AccessCnString);
            OleDbDataAdapter adapter = new OleDbDataAdapter("E_ContainerPackage_SelectByContainerCodeAndType", Connection);
            adapter.SelectCommand.CommandType = System.Data.CommandType.StoredProcedure;
            adapter.SelectCommand.Parameters.Add(new OleDbParameter("iContainercode", containerCode));
            adapter.SelectCommand.Parameters.Add(new OleDbParameter("iType", type));

            Connection.Open();
            DataSet dsContainerPackage = new DataSet();
            adapter.Fill(dsContainerPackage);

            Connection.Close();
            return dsContainerPackage.Tables[0];
        }

        //status report
        public static DataTable AccessSelectByContainerCodeAndTypeDT(int containerCode, int type, OleDbConnection _connection)
        {
            OleDbConnection Connection = _connection; ;
            OleDbDataAdapter adapter = new OleDbDataAdapter("E_ContainerPackage_SelectByContainerCodeAndType", Connection);
            adapter.SelectCommand.CommandType = System.Data.CommandType.StoredProcedure;
            adapter.SelectCommand.Parameters.Add(new OleDbParameter("iContainercode", containerCode));
            adapter.SelectCommand.Parameters.Add(new OleDbParameter("iType", type));

            //Connection.Open();
            DataSet dsContainerPackage = new DataSet();
            adapter.Fill(dsContainerPackage);

            //Connection.Close();
            return dsContainerPackage.Tables[0];
        }


        public static DataTable AccessSelectByType(int Type)
        {
            OleDbConnection Connection = new OleDbConnection(Atend.Control.ConnectionString.AccessCnString);
            OleDbDataAdapter adapter = new OleDbDataAdapter("E_ContainerPackage_SelectByType", Connection);
            adapter.SelectCommand.CommandType = System.Data.CommandType.StoredProcedure;
            adapter.SelectCommand.Parameters.Add(new OleDbParameter("iType", Type));

            Connection.Open();
            DataSet dsContainerPackage = new DataSet();
            adapter.Fill(dsContainerPackage);

            Connection.Close();
            return dsContainerPackage.Tables[0];
        }

        public static DataTable AccessSelectAll()
        {
            OleDbConnection connection = new OleDbConnection(Atend.Control.ConnectionString.AccessCnString);
            OleDbDataAdapter adapter = new OleDbDataAdapter("E_containerPackage_Select", connection);
            adapter.SelectCommand.CommandType = CommandType.StoredProcedure;

            adapter.SelectCommand.Parameters.Add(new OleDbParameter("iCode", -1));
            DataSet dsPackage = new DataSet();
            adapter.Fill(dsPackage);
            return dsPackage.Tables[0];
        }

        //public static DataTable SelectAllAndMerge()
        //{

        //    DataTable AccTbl = AccessSelectAll();
        //    DataTable SqlTbl = SelectAll();

        //    DataTable MergeTbl = SqlTbl.Copy();
        //    DataColumn IsSql = new DataColumn("IsSql", typeof(bool));
        //    IsSql.DefaultValue = true;
        //    MergeTbl.Columns.Add(IsSql);

        //    foreach (DataRow Dr in AccTbl.Rows)
        //    {
        //        DataRow MergeRow = MergeTbl.NewRow();

        //        foreach (DataColumn Dc in AccTbl.Columns)
        //        {
        //            MergeRow[Dc.ColumnName] = Dr[Dc.ColumnName];
        //        }

        //        MergeRow["IsSql"] = false;
        //        MergeRow["XCode"] = new Guid("00000000-0000-0000-0000-000000000000");
        //        MergeTbl.Rows.Add(MergeRow);
        //    }


        //    return MergeTbl;

        //}

        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//

        public static bool SentFromLocalToAccess(Guid XCode, int Type, int ContainerCode, OleDbTransaction _transaction, OleDbConnection _connection)
        {
            Editor ed = Application.DocumentManager.MdiActiveDocument.Editor;
            //ed.WriteMessage("parent is : {0} \n", Type);
            try
            {
                Atend.Base.Equipment.EContainerPackage SelectedContainer = Atend.Base.Equipment.EContainerPackage.selectByContainerXCodeAndType(XCode, Type);
                if (SelectedContainer.ContainerCode != -1)
                {
                    //ed.WriteMessage("container was found \n ");
                    int LastContainerPackageCode = SelectedContainer.Code;
                    SelectedContainer.ContainerCode = ContainerCode;
                    if (SelectedContainer.AccessInsert(_transaction, _connection))
                    {
                        DataTable Products = Atend.Base.Equipment.EProductPackage.SelectByContainerPackageCodeForLocal(LastContainerPackageCode);
                        //ed.WriteMessage("SubProductsCount:{0}\n", Products.Rows.Count);
                        foreach (DataRow dr in Products.Rows)
                        {
                            //switch access insert
                            int NewCode = 0;
                            //ed.WriteMessage("~~~~~ P T : {0} ~~~~~~\n", Convert.ToInt32(dr["TableType"]));
                            switch ((Atend.Control.Enum.ProductType)Convert.ToInt32(dr["TableType"]))
                            {
                                case Atend.Control.Enum.ProductType.AirPost:
                                    ed.WriteMessage("Sub Is : AirPost \n");
                                    Atend.Base.Equipment.EAirPost SelectedEquipEAirPost = Atend.Base.Equipment.EAirPost.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEAirPost.Code != -1)
                                    {
                                        if (SelectedEquipEAirPost.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEAirPost.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                    }
                                    break;

                                case Atend.Control.Enum.ProductType.Arm:
                                    ed.WriteMessage("Sub Is : Arm \n");
                                    Atend.Base.Equipment.EArm SelectedEquipEArm = Atend.Base.Equipment.EArm.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEArm.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EProp answer = Atend.Base.Equipment.EProp.AccessSelectByXCode(SelectedEquipEProp.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEArm.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEArm.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("container error in AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;

                                case Atend.Control.Enum.ProductType.AuoKey3p:
                                    ed.WriteMessage("Sub Is : AuoKey3p \n");

                                    Atend.Base.Equipment.EAutoKey_3p SelectedEquipEAutoKey_3p = Atend.Base.Equipment.EAutoKey_3p.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEAutoKey_3p.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EAutoKey_3p answer = Atend.Base.Equipment.EAutoKey_3p.AccessSelectByXCode(SelectedEquipEAutoKey_3p.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEAutoKey_3p.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEAutoKey_3p.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.Breaker:
                                    ed.WriteMessage("Sub Is : Breaker \n");
                                    Atend.Base.Equipment.EBreaker SelectedEquipEBreaker = Atend.Base.Equipment.EBreaker.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEBreaker.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EBreaker answer = Atend.Base.Equipment.EBreaker.AccessSelectByXCode(SelectedEquipEBreaker.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEBreaker.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEBreaker.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.Bus:
                                    ed.WriteMessage("Sub Is : Bus \n");
                                    Atend.Base.Equipment.EBus SelectedEquipEBus = Atend.Base.Equipment.EBus.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEBus.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EBus answer = Atend.Base.Equipment.EBus.AccessSelectByXCode(SelectedEquipEBus.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEBus.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEBus.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.CatOut:
                                    ed.WriteMessage("Sub Is : CatOut \n");
                                    Atend.Base.Equipment.ECatOut SelectedEquipECatOut = Atend.Base.Equipment.ECatOut.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipECatOut.Code != -1)
                                    {
                                        //Atend.Base.Equipment.ECatOut answer = Atend.Base.Equipment.ECatOut.AccessSelectByXCode(SelectedEquipECatOut.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipECatOut.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipECatOut.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.Cell:
                                    ed.WriteMessage("Sub Is : Cell \n");
                                    Atend.Base.Equipment.ECell SelectedEquipECell = Atend.Base.Equipment.ECell.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipECell.Code != -1)
                                    {
                                        //Atend.Base.Equipment.ECell answer = Atend.Base.Equipment.ECell.AccessSelectByXCode(SelectedEquipECell.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipECell.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipECell.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.Conductor:
                                    ed.WriteMessage("Sub Is : Conductor \n");
                                    Atend.Base.Equipment.EConductor SelectedEquipEConductor = Atend.Base.Equipment.EConductor.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEConductor.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EConductor answer = Atend.Base.Equipment.EConductor.AccessSelectByXCode(SelectedEquipEConductor.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEConductor.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEConductor.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.Consol:
                                    ed.WriteMessage("Sub Is : Consol \n");
                                    //ed.WriteMessage("**XCODE={0}\n", dr["XCode"].ToString());
                                    Atend.Base.Equipment.EConsol SelectedEquipEConsol = Atend.Base.Equipment.EConsol.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEConsol.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EConsol answer = Atend.Base.Equipment.EConsol.AccessSelectByXCode(SelectedEquipEConsol.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEConsol.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEConsol.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        // }
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.Countor:
                                    ed.WriteMessage("Sub Is : Countor \n");
                                    Atend.Base.Equipment.ECountor SelectedEquipECountor = Atend.Base.Equipment.ECountor.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipECountor.Code != -1)
                                    {
                                        //Atend.Base.Equipment.ECountor answer = Atend.Base.Equipment.ECountor.AccessSelectByXCode(SelectedEquipECountor.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{

                                        if (SelectedEquipECountor.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipECountor.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }


                                        // }
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.CT:
                                    ed.WriteMessage("Sub Is : CT \n");
                                    Atend.Base.Equipment.ECT SelectedEquipECT = Atend.Base.Equipment.ECT.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipECT.Code != -1)
                                    {
                                        //Atend.Base.Equipment.ECT answer = Atend.Base.Equipment.ECT.AccessSelectByXCode(SelectedEquipECT.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipECT.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipECT.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.DB:
                                    ed.WriteMessage("Sub Is : DB 4\n");
                                    Atend.Base.Equipment.EDB SelectedEquipEDB = Atend.Base.Equipment.EDB.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEDB.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EDB answer = Atend.Base.Equipment.EDB.AccessSelectByXCode(SelectedEquipEDB.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEDB.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEDB.Code;
                                            DataTable DBPhuses = Atend.Base.Equipment.EDBPhuse.SelectByDBXCode(new Guid(dr["XCode"].ToString()));
                                            foreach (DataRow DBPhuse in DBPhuses.Rows)
                                            {
                                                Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.SelectByXCode(new Guid(DBPhuse["PhuseXcode"].ToString()));
                                                if (_EPhuse.Code != -1)
                                                {
                                                    if (!_EPhuse.AccessInsert(_transaction, _connection, true, true))
                                                    {
                                                        throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                                                    }

                                                    Atend.Base.Equipment.EDBPhuse _edbPhuse = Atend.Base.Equipment.EDBPhuse.SelectByXCode(new Guid(DBPhuse["XCode"].ToString()));
                                                    if (_edbPhuse.Code != -1)
                                                    {
                                                        _edbPhuse.DBCode = SelectedEquipEDB.Code;
                                                        _edbPhuse.PhuseCode = _EPhuse.Code;
                                                        if (!_edbPhuse.AccessInsert(_transaction, _connection, false, false))
                                                        {
                                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":DBPhuse");
                                                        }
                                                    }
                                                    else
                                                    {
                                                        throw new System.Exception("Lack of data in DB:DBPhuse");
                                                    }
                                                }
                                                else
                                                {
                                                    throw new System.Exception("Lack of data in DB:Phuse");
                                                }
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.Disconnector:
                                    ed.WriteMessage("Sub Is : Disconnector \n");
                                    Atend.Base.Equipment.EDisconnector SelectedEquipEDisconnector = Atend.Base.Equipment.EDisconnector.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEDisconnector.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EDisconnector answer = Atend.Base.Equipment.EDisconnector.AccessSelectByXCode(SelectedEquipEDisconnector.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEDisconnector.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEDisconnector.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;

                                case Atend.Control.Enum.ProductType.Floor:
                                    ed.WriteMessage("Sub Is : Floor \n");
                                    Atend.Base.Equipment.EFloor SelectedEquipEFloor = Atend.Base.Equipment.EFloor.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEFloor.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EFloor answer = Atend.Base.Equipment.EFloor.AccessSelectByXCode(SelectedEquipEFloor.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEFloor.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEFloor.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;


                                case Atend.Control.Enum.ProductType.Ground:
                                    ed.WriteMessage("Sub Is : Ground \n");
                                    Atend.Base.Equipment.EGround SelectedEquipEGround = Atend.Base.Equipment.EGround.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEGround.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EGround answer = Atend.Base.Equipment.EGround.AccessSelectByXCode(SelectedEquipEGround.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEGround.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEGround.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;


                                case Atend.Control.Enum.ProductType.GroundCabel:
                                    ed.WriteMessage("Sub Is : MiddleCabel :={0}\n", dr["XCode"].ToString());
                                    Atend.Base.Equipment.EGroundCabel SelectedEquipEMiddleGroundCabel = Atend.Base.Equipment.EGroundCabel.SelectByXCodeForDeign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEMiddleGroundCabel.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EGroundCabel answer = Atend.Base.Equipment.EGroundCabel.AccessSelectByXCode(SelectedEquipEMiddleGroundCabel.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEMiddleGroundCabel.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEMiddleGroundCabel.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;

                                case Atend.Control.Enum.ProductType.GroundPost:
                                    ed.WriteMessage("Sub Is : GroundPost \n");
                                    Atend.Base.Equipment.EGroundPost SelectedEquipEGroundPost = Atend.Base.Equipment.EGroundPost.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEGroundPost.Code != -1)
                                    {
                                        if (SelectedEquipEGroundPost.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEGroundPost.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    break;



                                case Atend.Control.Enum.ProductType.Halter:
                                    ed.WriteMessage("Sub Is : Halter \n");
                                    Atend.Base.Equipment.EHalter SelectedEquipEHalter = Atend.Base.Equipment.EHalter.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEHalter.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EHalter answer = Atend.Base.Equipment.EHalter.AccessSelectByXCode(SelectedEquipEHalter.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEHalter.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEHalter.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;

                                //case Atend.Control.Enum.ProductType.Halter:
                                //    Atend.Base.Equipment. SelectedEquip = Atend.Base.Equipment.EBreaker.SelectByXCode(XCode);
                                //    if (SelectedEquip.Code != -1)
                                //    {
                                //        if (SelectedEquip.AccessInsert(_transaction, _connection))
                                //        {
                                //            NewCode = SelectedEquip.Code;
                                //        }
                                //        else
                                //        {
                                //            throw new Exception("{0}.AccessInsert failed", ((Atend.Control.Enum.ProductType)Convert.ToInt32(dr["TableType"])).ToString());
                                //        }
                                //    }
                                //    break;
                                case Atend.Control.Enum.ProductType.HeaderCabel:
                                    ed.WriteMessage("Sub Is : HeaderCabel \n");
                                    Atend.Base.Equipment.EHeaderCabel SelectedEquipEHeaderCabel = Atend.Base.Equipment.EHeaderCabel.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEHeaderCabel.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EHeaderCabel answer = Atend.Base.Equipment.EHeaderCabel.AccessSelectByXCode(SelectedEquipEHeaderCabel.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEHeaderCabel.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEHeaderCabel.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.Insulator:
                                    ed.WriteMessage("Sub Is : Insulator \n");
                                    Atend.Base.Equipment.EInsulator SelectedEquipEInsulator = Atend.Base.Equipment.EInsulator.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEInsulator.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EInsulator answer = Atend.Base.Equipment.EInsulator.AccessSelectByXCode(SelectedEquipEInsulator.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEInsulator.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEInsulator.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;


                                case Atend.Control.Enum.ProductType.InsulatorChain:
                                    ed.WriteMessage("Sub Is : InsulatorChain \n");
                                    Atend.Base.Equipment.EInsulatorChain SelectedEquipEInsulatorChain = Atend.Base.Equipment.EInsulatorChain.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEInsulatorChain.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EInsulatorChain answer = Atend.Base.Equipment.EInsulatorChain.AccessSelectByXCode(SelectedEquipEInsulatorChain.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEInsulatorChain.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEInsulatorChain.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;

                                case Atend.Control.Enum.ProductType.InsulatorPipe:
                                    ed.WriteMessage("Sub Is : InsulatorPipe \n");
                                    Atend.Base.Equipment.EInsulatorPipe SelectedEquipEInsulatorPipe = Atend.Base.Equipment.EInsulatorPipe.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEInsulatorPipe.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EInsulatorPipe answer = Atend.Base.Equipment.EInsulatorPipe.AccessSelectByXCode(SelectedEquipEInsulatorPipe.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEInsulatorPipe.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEInsulatorPipe.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;


                                case Atend.Control.Enum.ProductType.MiddleJackPanel:
                                    ////ed.WriteMessage("AAA : {0} \n", new Guid(dr["XCode"].ToString()));
                                    ed.WriteMessage("Sub Is : MiddleJackPanel \n");
                                    Atend.Base.Equipment.EJAckPanel SelectedEquipEJAckPanel = Atend.Base.Equipment.EJAckPanel.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEJAckPanel.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EJAckPanel answer = Atend.Base.Equipment.EJAckPanel.AccessSelectByXCode(SelectedEquipEJAckPanel.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{

                                        Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.SelectByXCode(SelectedEquipEJAckPanel.MasterProductXCode);
                                        if (_eBus.Code != -1)
                                        {
                                            if (!_eBus.AccessInsert(_transaction, _connection, true, true))
                                            {
                                                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in MiddleJackPanel:Bus");
                                        }

                                        SelectedEquipEJAckPanel.MasterProductCode = _eBus.Code;
                                        if (SelectedEquipEJAckPanel.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEJAckPanel.Code;
                                            DataTable _JPS = Atend.Base.Equipment.EJackPanelCell.SelectByJackPanelXCode(SelectedEquipEJAckPanel.XCode);
                                            foreach (DataRow _JPSdr in _JPS.Rows)
                                            {
                                                Atend.Base.Equipment.ECell _eCell = Atend.Base.Equipment.ECell.SelectByXCode(new Guid(_JPSdr["ProductXCode"].ToString()));
                                                if (_eCell.Code != -1)
                                                {
                                                    if (!_eCell.AccessInsert(_transaction, _connection, true, true))
                                                    {
                                                        throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Cell");
                                                    }
                                                }
                                                else
                                                {
                                                    throw new System.Exception("Lack of data in MiddleJackPanel:Cell");
                                                }
                                                Atend.Base.Equipment.EJackPanelCell _EJC = Atend.Base.Equipment.EJackPanelCell.SelectByXCode(new Guid(_JPSdr["XCode"].ToString()));
                                                if (_EJC.Code != -1)
                                                {
                                                    _EJC.ProductCode = _eCell.Code;
                                                    _EJC.JackPanelCode = SelectedEquipEJAckPanel.Code;
                                                    if (!_EJC.AccessInsert(_transaction, _connection, false, false))
                                                    {
                                                        throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":JackPanelCell");
                                                    }
                                                }
                                                else
                                                {
                                                    throw new System.Exception("Lack of data in MiddleJackPanel:JackPanelCell");
                                                }
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;


                                case Atend.Control.Enum.ProductType.WeekJackPanel:
                                    ed.WriteMessage("Sub Is : WeekJackPanel \n");
                                    Atend.Base.Equipment.EJackPanelWeek SelectedEquipWeekJackPanel = Atend.Base.Equipment.EJackPanelWeek.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipWeekJackPanel.Code != -1)
                                    {
                                        Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.SelectByXCode(SelectedEquipWeekJackPanel.BusXCode);
                                        if (_eBus.Code != -1)
                                        {
                                            if (!_eBus.AccessInsert(_transaction, _connection, true, true))
                                            {
                                                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in WeekJackPanel:Bus");
                                        }
                                        SelectedEquipWeekJackPanel.BusCode = _eBus.Code;

                                        Atend.Base.Equipment.EAutoKey_3p _Key = Atend.Base.Equipment.EAutoKey_3p.SelectByXCodeForDesign(SelectedEquipWeekJackPanel.AutoKey3pXCode);

                                        if (_Key.Code != -1)
                                        {
                                            if (!_Key.AccessInsert(_transaction, _connection, true, true))
                                            {
                                                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":EAutoKey_3p");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in WeekJackPanel:EAutoKey_3p");
                                        }
                                        //ed.WriteMessage("insert passed \n");
                                        SelectedEquipWeekJackPanel.AutoKey3pCode = _Key.Code;
                                        if (SelectedEquipWeekJackPanel.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipWeekJackPanel.Code;

                                            DataTable _WJS = Atend.Base.Equipment.EJackPanelWeekCell.SelectByJackPanelWeekXCode(SelectedEquipWeekJackPanel.XCode);
                                            foreach (DataRow _WJSdr in _WJS.Rows)
                                            {
                                                //ed.WriteMessage("go for cells \n");
                                                Atend.Base.Equipment.EJackPanelWeekCell _WJC = Atend.Base.Equipment.EJackPanelWeekCell.SelectByXCode(new Guid(_WJSdr["XCode"].ToString()));
                                                if (_WJC.Code != -1)
                                                {
                                                    _WJC.JackPanelWeekCode = SelectedEquipWeekJackPanel.Code;
                                                    if (!_WJC.AccessInsert(_transaction, _connection, true, true))
                                                    {
                                                        throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":WeekJackPanelCell");
                                                    }
                                                }
                                                else
                                                {
                                                    throw new System.Exception("Lack of data in WeekJackPanel:WeekJackPanelCell");
                                                }
                                            }

                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("WeekJack panel was not found in local");
                                    }
                                    break;


                                case Atend.Control.Enum.ProductType.KablSho:
                                    ed.WriteMessage("Sub Is : KablSho \n");
                                    Atend.Base.Equipment.EKablsho SelectedEquipEKablsho = Atend.Base.Equipment.EKablsho.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEKablsho.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EKablsho answer = Atend.Base.Equipment.EKablsho.AccessSelectByXCode(SelectedEquipEKablsho.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEKablsho.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEKablsho.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.Kalamp:
                                    ed.WriteMessage("Sub Is : Kalamp \n");
                                    Atend.Base.Equipment.EClamp SelectedEquipEClamp = Atend.Base.Equipment.EClamp.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEClamp.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EClamp answer = Atend.Base.Equipment.EClamp.AccessSelectByXCode(SelectedEquipEClamp.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEClamp.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEClamp.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.Khazan:
                                    ed.WriteMessage("Sub Is : Khazan \n");
                                    Atend.Base.Equipment.EKhazan SelectedEquipEKhazan = Atend.Base.Equipment.EKhazan.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEKhazan.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EKhazan answer = Atend.Base.Equipment.EKhazan.AccessSelectByXCode(SelectedEquipEKhazan.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEKhazan.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEKhazan.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;

                                case Atend.Control.Enum.ProductType.Light:
                                    ed.WriteMessage("Sub Is : Light \n");
                                    Atend.Base.Equipment.ELight SelectedEquipELight = Atend.Base.Equipment.ELight.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipELight.Code != -1)
                                    {
                                        //Atend.Base.Equipment.ELight answer = Atend.Base.Equipment.ELight.AccessSelectByXCode(SelectedEquipELight.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipELight.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipELight.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;

                                case Atend.Control.Enum.ProductType.Mafsal:
                                    ed.WriteMessage("Sub Is : Mafsal \n");
                                    Atend.Base.Equipment.EMafsal SelectedEquipEMafsal = Atend.Base.Equipment.EMafsal.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEMafsal.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EMafsal answer = Atend.Base.Equipment.EMafsal.AccessSelectByXCode(SelectedEquipEMafsal.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEMafsal.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEMafsal.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;

                                case Atend.Control.Enum.ProductType.MeasuredJackPanel:
                                    ed.WriteMessage("Sub Is : MeasuredJackPanel \n");
                                    Atend.Base.Equipment.EMeasuredJackPanel SelectedEquipEMeasuredJackPanel = Atend.Base.Equipment.EMeasuredJackPanel.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEMeasuredJackPanel.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EMeasuredJackPanel answer = Atend.Base.Equipment.EMeasuredJackPanel.AccessSelectByXCode(SelectedEquipEMeasuredJackPanel.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEMeasuredJackPanel.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEMeasuredJackPanel.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;


                                case Atend.Control.Enum.ProductType.MiniatureKey:
                                    ed.WriteMessage("Sub Is : MiniatureKey \n");
                                    Atend.Base.Equipment.EMiniatorKey SelectedEquipEMiniatorKey = Atend.Base.Equipment.EMiniatorKey.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEMiniatorKey.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EMiniatorKey answer = Atend.Base.Equipment.EMiniatorKey.AccessSelectByXCode(SelectedEquipEMiniatorKey.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEMiniatorKey.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEMiniatorKey.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.PhotoCell:
                                    ed.WriteMessage("Sub Is : PhotoCell \n");
                                    Atend.Base.Equipment.EPhotoCell SelectedEquipEPhotoCell = Atend.Base.Equipment.EPhotoCell.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEPhotoCell.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EPhotoCell answer = Atend.Base.Equipment.EPhotoCell.AccessSelectByXCode(SelectedEquipEPhotoCell.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEPhotoCell.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEPhotoCell.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.Phuse:
                                    ed.WriteMessage("Sub Is : Phuse \n");
                                    Atend.Base.Equipment.EPhuse SelectedEquipEPhuse = Atend.Base.Equipment.EPhuse.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEPhuse.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EPhuse answer = Atend.Base.Equipment.EPhuse.AccessSelectByXCode(SelectedEquipEPhuse.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCode(SelectedEquipEPhuse.PhusePoleXCode);
                                        if (_EPhusePole.Code != -1)
                                        {
                                            if (!_EPhusePole.AccessInsert(_transaction, _connection, true, true))
                                            {
                                                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":PhusePole");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in Phuse:PhusePole");
                                        }
                                        ed.WriteMessage("PhusePoleCode:{0}\n", _EPhusePole.Code);
                                        SelectedEquipEPhuse.PhusePoleCode = _EPhusePole.Code;
                                        if (SelectedEquipEPhuse.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEPhuse.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }


                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.PhuseKey:
                                    ed.WriteMessage("Sub Is : PhuseKey \n");
                                    Atend.Base.Equipment.EPhuseKey SelectedEquipEPhuseKey = Atend.Base.Equipment.EPhuseKey.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEPhuseKey.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EPhuseKey answer = Atend.Base.Equipment.EPhuseKey.AccessSelectByXCode(SelectedEquipEPhuseKey.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEPhuseKey.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEPhuseKey.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.PhusePole:
                                    ed.WriteMessage("Sub Is : PhusePole \n");
                                    Atend.Base.Equipment.EPhusePole SelectedEquipEPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEPhusePole.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EPhusePole answer = Atend.Base.Equipment.EPhusePole.AccessSelectByXCode(SelectedEquipEPhusePole.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEPhusePole.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEPhusePole.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.Pole:
                                    ed.WriteMessage("Sub Is : Pole \n");
                                    Atend.Base.Equipment.EPole SelectedEquipEPole = Atend.Base.Equipment.EPole.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEPole.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EPole answer = Atend.Base.Equipment.EPole.AccessSelectByXCode(SelectedEquipEPole.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEPole.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEPole.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;







                                ////case Atend.Control.Enum.ProductType.PoleTip:
                                ////    ed.WriteMessage("Sub Is : PoleTip \n");
                                ////    Atend.Base.Equipment.EPoleTip SelectedEquipEPoleTip = Atend.Base.Equipment.EPoleTip.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                ////    if (SelectedEquipEPoleTip.Code != -1)
                                ////    {
                                ////        //Atend.Base.Equipment.EPoleTip answer = Atend.Base.Equipment.EPoleTip.AccessSelectByXCode(SelectedEquipEPoleTip.XCode, _transaction, _connection);
                                ////        //if (answer.Code != -1)
                                ////        //{
                                ////        //    NewCode = answer.Code;
                                ////        //}
                                ////        //else
                                ////        //{

                                ////        Atend.Base.Equipment.EPole _ePole = Atend.Base.Equipment.EPole.SelectByXCode(SelectedEquipEPoleTip.PoleXCode);
                                ////        if (_ePole.Code != -1)
                                ////        {
                                ////            if (!_ePole.AccessInsert(_transaction, _connection, true, true))
                                ////            {
                                ////                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":POle");
                                ////            }
                                ////        }
                                ////        else
                                ////        {
                                ////            throw new System.Exception("Lack of data in poleTip:Pole");
                                ////        }

                                ////        Atend.Base.Equipment.EHalter _eHalter = Atend.Base.Equipment.EHalter.SelectByXCode(SelectedEquipEPoleTip.HalterXID);
                                ////        if (_eHalter.Code != -1)
                                ////        {
                                ////            if (!_eHalter.AccessInsert(_transaction, _connection, true, true))
                                ////            {
                                ////                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Halter");
                                ////            }
                                ////        }
                                ////        else
                                ////        {
                                ////            throw new System.Exception("Lack of data in poleTip:Halter");
                                ////        }

                                ////        SelectedEquipEPoleTip.PoleCode = _ePole.Code;
                                ////        SelectedEquipEPoleTip.HalterID = _eHalter.Code;
                                ////        if (SelectedEquipEPoleTip.AccessInsert(_transaction, _connection, true, false))
                                ////        {
                                ////            NewCode = SelectedEquipEPoleTip.Code;
                                ////        }
                                ////        else
                                ////        {
                                ////            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                ////        }



                                ////        //}
                                ////    }
                                ////    break;
                                case Atend.Control.Enum.ProductType.Prop:
                                    ed.WriteMessage("Sub Is : Prop \n");
                                    Atend.Base.Equipment.EProp SelectedEquipEProp = Atend.Base.Equipment.EProp.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEProp.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EProp answer = Atend.Base.Equipment.EProp.AccessSelectByXCode(SelectedEquipEProp.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEProp.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEProp.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("container error in AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;

                                case Atend.Control.Enum.ProductType.PT:
                                    ed.WriteMessage("Sub Is : PT \n");
                                    Atend.Base.Equipment.EPT SelectedEquipEPT = Atend.Base.Equipment.EPT.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEPT.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EPT answer = Atend.Base.Equipment.EPT.AccessSelectByXCode(SelectedEquipEPT.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEPT.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEPT.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;



                                case Atend.Control.Enum.ProductType.Ramp:
                                    ed.WriteMessage("Sub Is : Ramp \n");
                                    Atend.Base.Equipment.ERamp SelectedEquipERamp = Atend.Base.Equipment.ERamp.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipERamp.Code != -1)
                                    {
                                        //Atend.Base.Equipment.ERamp answer = Atend.Base.Equipment.ERamp.AccessSelectByXCode(SelectedEquipERamp.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipERamp.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipERamp.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;


                                case Atend.Control.Enum.ProductType.ReCloser:
                                    ed.WriteMessage("Sub Is : ReCloser \n");
                                    Atend.Base.Equipment.EReCloser SelectedEquipEReCloser = Atend.Base.Equipment.EReCloser.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEReCloser.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EReCloser answer = Atend.Base.Equipment.EReCloser.AccessSelectByXCode(SelectedEquipEReCloser.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEReCloser.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEReCloser.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;

                                case Atend.Control.Enum.ProductType.Rod:
                                    ed.WriteMessage("Sub Is : Rod \n");
                                    Atend.Base.Equipment.ERod SelectedEquipERod = Atend.Base.Equipment.ERod.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipERod.Code != -1)
                                    {
                                        //Atend.Base.Equipment.ERod answer = Atend.Base.Equipment.ERod.AccessSelectByXCode(SelectedEquipERod.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipERod.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipERod.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;

                                case Atend.Control.Enum.ProductType.SectionLizer:
                                    ed.WriteMessage("Sub Is : SectionLizer \n");
                                    Atend.Base.Equipment.ESectionLizer SelectedEquipESectionLizer = Atend.Base.Equipment.ESectionLizer.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipESectionLizer.Code != -1)
                                    {
                                        //Atend.Base.Equipment.ESectionLizer answer = Atend.Base.Equipment.ESectionLizer.AccessSelectByXCode(SelectedEquipESectionLizer.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipESectionLizer.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipESectionLizer.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;

                                case Atend.Control.Enum.ProductType.SelfKeeper:
                                    ed.WriteMessage("Sub Is : SelfKeeper \n");
                                    Atend.Base.Equipment.ESelfKeeper SelectedEquipESelfKeeper = Atend.Base.Equipment.ESelfKeeper.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipESelfKeeper.Code != -1)
                                    {
                                        //Atend.Base.Equipment.ESelfKeeper answer = Atend.Base.Equipment.ESelfKeeper.AccessSelectByXCode(SelectedEquipESelfKeeper.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipESelfKeeper.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipESelfKeeper.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;
                                //case Atend.Control.Enum.ProductType.SelfKeeperTip:
                                //    ed.WriteMessage("Sub Is : SelfKeeperTip \n");
                                //    Atend.Base.Equipment.ESelfKeeperTip SelectedEquipESelfKeeperTip = Atend.Base.Equipment.ESelfKeeperTip.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                //    if (SelectedEquipESelfKeeperTip.Code != -1)
                                //    {
                                //        //Atend.Base.Equipment.ESelfKeeperTip answer = Atend.Base.Equipment.ESelfKeeperTip.AccessSelectByXCode(SelectedEquipESelfKeeperTip.XCode, _transaction, _connection);
                                //        //if (answer.Code != -1)
                                //        //{
                                //        //    NewCode = answer.Code;
                                //        //}
                                //        //else
                                //        //{
                                //        if (SelectedEquipESelfKeeperTip.AccessInsert(_transaction, _connection))
                                //        {
                                //            NewCode = SelectedEquipESelfKeeperTip.Code;
                                //        }
                                //        else
                                //        {
                                //            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                //        }
                                //        //}
                                //    }
                                //    break;

                                case Atend.Control.Enum.ProductType.StreetBox:
                                    ed.WriteMessage("Sub Is : StreetBox \n");
                                    Atend.Base.Equipment.EStreetBox SelectedEquipEStreetBox = Atend.Base.Equipment.EStreetBox.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipEStreetBox.Code != -1)
                                    {
                                        //Atend.Base.Equipment.EStreetBox answer = Atend.Base.Equipment.EStreetBox.AccessSelectByXCode(SelectedEquipEStreetBox.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipEStreetBox.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipEStreetBox.Code;
                                            DataTable StreetBoxPhuses = Atend.Base.Equipment.EStreetBoxPhuse.SelectByStreetBoxXCode(new Guid(dr["XCode"].ToString()));
                                            foreach (DataRow StreetBoxPhuse in StreetBoxPhuses.Rows)
                                            {
                                                //ed.WriteMessage("110\n");
                                                Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.SelectByXCode(new Guid(StreetBoxPhuse["PhuseXCode"].ToString()));
                                                if (_EPhuse.Code != -1)
                                                {
                                                    //ed.WriteMessage("111\n");
                                                    Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCode(_EPhuse.PhusePoleXCode);
                                                    if (_EPhusePole.Code != -1)
                                                    {
                                                        //ed.WriteMessage("112\n");
                                                        if (!_EPhusePole.AccessInsert(_transaction, _connection, true, true))
                                                        {
                                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":PhusePole");
                                                        }
                                                    }
                                                    else
                                                    {
                                                        throw new System.Exception("Lack of data in StreetBox:Phuse:PhusePole");
                                                    }
                                                    //ed.WriteMessage("streetbox was :{0} \n", _EPhusePole.Code);
                                                    _EPhuse.PhusePoleCode = _EPhusePole.Code;
                                                    if (!_EPhuse.AccessInsert(_transaction, _connection, true, true))
                                                    {
                                                        throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                                                    }

                                                    Atend.Base.Equipment.EStreetBoxPhuse _EStreetBoxPhuse = Atend.Base.Equipment.EStreetBoxPhuse.SelectByXCode(new Guid(StreetBoxPhuse["Xcode"].ToString()));
                                                    if (_EStreetBoxPhuse.Code != -1)
                                                    {
                                                        _EStreetBoxPhuse.PhuseCode = _EPhuse.Code;
                                                        _EStreetBoxPhuse.StreetBoxCode = SelectedEquipEStreetBox.Code;
                                                        if (!_EStreetBoxPhuse.AccessInsert(_transaction, _connection, true, false))
                                                        {
                                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":StreetBoxPhuse");
                                                        }
                                                    }
                                                    else
                                                    {
                                                        throw new System.Exception("Lack of data in StreetBox:StreetBoxPhuse");
                                                    }
                                                }
                                                else
                                                {
                                                    throw new System.Exception("Lack of data in StreetBox:Phuse");
                                                }
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    break;
                                case Atend.Control.Enum.ProductType.Transformer:
                                    ed.WriteMessage("Sub Is : Transformer \n");
                                    Atend.Base.Equipment.ETransformer SelectedEquipETransformer = Atend.Base.Equipment.ETransformer.SelectByXCode(new Guid(dr["XCode"].ToString()));
                                    if (SelectedEquipETransformer.Code != -1)
                                    {
                                        //Atend.Base.Equipment.ETransformer answer = Atend.Base.Equipment.ETransformer.AccessSelectByXCode(SelectedEquipETransformer.XCode, _transaction, _connection);
                                        //if (answer.Code != -1)
                                        //{
                                        //    NewCode = answer.Code;
                                        //}
                                        //else
                                        //{
                                        if (SelectedEquipETransformer.AccessInsert(_transaction, _connection, true, false))
                                        {
                                            NewCode = SelectedEquipETransformer.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                        //}
                                    }
                                    break;

                            }
                            if (NewCode != 0)
                            {
                                //ed.WriteMessage("NewCode:{0}\n", NewCode);
                                Atend.Base.Equipment.EProductPackage _EProductPackage = new EProductPackage();
                                _EProductPackage.ContainerPackageCode = SelectedContainer.code;
                                _EProductPackage.ProductCode = NewCode;
                                _EProductPackage.Count = Convert.ToInt32(dr["Count"]);
                                _EProductPackage.TableType = Convert.ToInt16(dr["TableType"]);
                                if (!_EProductPackage.AccessInsert(_transaction, _connection))
                                {
                                    throw new System.Exception("_EProductPackage.AccessInsert failed");
                                }

                                if (!SentFromLocalToAccess(new Guid(dr["XCode"].ToString()), Convert.ToInt32(dr["TableType"]), NewCode, _transaction, _connection))
                                {
                                    throw new System.Exception("SentFromLocalToAccess inside failed");
                                }
                            }
                            else
                            {
                                //throw new System.Exception("Pro was not inserted or Pro was not in switch");
                            }
                        }
                    }
                    else
                    {
                        throw new System.Exception("SelectedContainer.AccessInsert failed");
                    }
                }
                else
                {
                    ed.WriteMessage("No container Package was found\n");
                    //No container Package was found
                }
            }
            catch (System.Exception ex)
            {
                ed.WriteMessage("ERROR EContainerPackage.SentFromLocalToAccess :{0} \n", ex.Message);
                return false;
            }

            return true;
        }


        public static bool SentFromLocalToServer(Guid XCode, int Type, int ContainerCode, SqlTransaction _transaction, SqlConnection _connection, SqlTransaction LocalTransaction, SqlConnection LocalConnection)
        {
            Editor ed = Application.DocumentManager.MdiActiveDocument.Editor;
            ed.WriteMessage("SEND FROM LOCAL SERVER parent is : {0} \n", Type);
            try
            {
                ed.WriteMessage("******XCODE={0}\n", XCode);
                Atend.Base.Equipment.EContainerPackage SelectedContainer = Atend.Base.Equipment.EContainerPackage.SelectByContainerXCodeAndType(LocalTransaction, LocalConnection, XCode, Type);
                Atend.Base.Equipment.EContainerPackage ServerContainer = Atend.Base.Equipment.EContainerPackage.selectByContainerCodeAndType(_transaction, _connection, ContainerCode, Type);
                ed.WriteMessage("@@@@@@@@@@@@@SelectedContainer={0}\n", SelectedContainer.Code);
                if (SelectedContainer.ContainerCode != -1)
                {
                    //ed.WriteMessage("container was found \n ");

                    int LastContainerPackageCode = SelectedContainer.Code;
                    //SelectedContainer.ContainerCode = ContainerCode;
                    ServerContainer.ContainerCode = ContainerCode;
                    ServerContainer.Type = SelectedContainer.Type;
                    ed.WriteMessage("***ServerContainer.Code={0}\n", ServerContainer.Code);
                    if (ServerContainer.Code == 0)
                    {
                        if (!ServerContainer.Insert(_transaction, _connection))
                            throw new System.Exception("SelectedContainer.ServerInsert failed");
                    }
                    else
                    {
                        if (!Atend.Base.Equipment.EProductPackage.Delete(_transaction, _connection, ServerContainer.Code))
                            throw new System.Exception("Delete ProductPackage Failed");
                    }
                    //if (SelectedContainer.Insert(_transaction, _connection))
                    //{
                    DataTable Products = Atend.Base.Equipment.EProductPackage.SelectByContainerPackageCodeForLocal(LastContainerPackageCode, LocalTransaction, LocalConnection);
                    ed.WriteMessage("SubProductsCount:{0}\n", Products.Rows.Count);

                    foreach (DataRow dr in Products.Rows)
                    {
                        //switch access insert
                        int NewCode = 0;
                        //ed.WriteMessage("~~~~~ P T : {0} ~~~~~~\n", Convert.ToInt32(dr["TableType"]));
                        #region Switch
                        switch ((Atend.Control.Enum.ProductType)Convert.ToInt32(dr["TableType"]))
                        {
                            case Atend.Control.Enum.ProductType.AirPost:
                                ed.WriteMessage("Sub Is : AirPost \n");
                                Atend.Base.Equipment.EAirPost SelectedEquipEAirPost = Atend.Base.Equipment.EAirPost.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEAirPost.Code != -1)
                                {
                                    if (SelectedEquipEAirPost.Code == 0)
                                    {
                                        if (SelectedEquipEAirPost.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEAirPost.Code;
                                            if (!SelectedEquipEAirPost.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX Airpost Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EAirPost ServerSelectedEquipAirPost = Atend.Base.Equipment.EAirPost.ServerSelectByCode(SelectedEquipEAirPost.Code, _connection, _transaction);
                                        if (ServerSelectedEquipAirPost.Code != -1)
                                        {
                                            if (SelectedEquipEAirPost.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEAirPost.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*AirPost:There Is No Row On Server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;

                            case Atend.Control.Enum.ProductType.Arm:
                                ed.WriteMessage("Sub Is : Arm \n");

                                Atend.Base.Equipment.EArm SelectedEquipEArm = Atend.Base.Equipment.EArm.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEArm.Code != -1)
                                {
                                    //Atend.Base.Equipment.EProp answer = Atend.Base.Equipment.EProp.AccessSelectByXCode(SelectedEquipEProp.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEArm.Code == 0)
                                    {
                                        if (SelectedEquipEArm.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEArm.Code;
                                            if (!SelectedEquipEArm.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("Error in Updatex in Arm");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("container error in ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EArm ServerSelectedArm = Atend.Base.Equipment.EArm.ServerSelectByCode(SelectedEquipEArm.Code, _connection, _transaction);
                                        if (ServerSelectedArm.Code != -1)
                                        {
                                            if (SelectedEquipEArm.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEArm.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("container error in ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Arm:There Is No Row On Server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;

                            case Atend.Control.Enum.ProductType.AuoKey3p:
                                ed.WriteMessage("Sub Is : AuoKey3p \n");

                                Atend.Base.Equipment.EAutoKey_3p SelectedEquipEAutoKey_3p = Atend.Base.Equipment.EAutoKey_3p.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEAutoKey_3p.Code != -1)
                                {
                                    //Atend.Base.Equipment.EAutoKey_3p answer = Atend.Base.Equipment.EAutoKey_3p.AccessSelectByXCode(SelectedEquipEAutoKey_3p.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEAutoKey_3p.Code == 0)
                                    {
                                        if (SelectedEquipEAutoKey_3p.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEAutoKey_3p.Code;
                                            if (!SelectedEquipEAutoKey_3p.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX AuoKey3p Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EAutoKey_3p ServerSelectedAutoKey3p = Atend.Base.Equipment.EAutoKey_3p.ServerSelectByCode(SelectedEquipEAutoKey_3p.Code, _connection, _transaction);
                                        if (ServerSelectedAutoKey3p.Code != -1)
                                        {
                                            if (SelectedEquipEAutoKey_3p.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEAutoKey_3p.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            ed.WriteMessage("##\n");
                                            throw new System.Exception("*AuoKey3p:There Is No Row On Server For Update " + dr["TableType"].ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Breaker:
                                ed.WriteMessage("Sub Is : Breaker \n");
                                Atend.Base.Equipment.EBreaker SelectedEquipEBreaker = Atend.Base.Equipment.EBreaker.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEBreaker.Code != -1)
                                {
                                    //Atend.Base.Equipment.EBreaker answer = Atend.Base.Equipment.EBreaker.AccessSelectByXCode(SelectedEquipEBreaker.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEBreaker.Code == 0)
                                    {
                                        if (SelectedEquipEBreaker.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEBreaker.Code;
                                            if (!SelectedEquipEBreaker.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX Breaker Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EBreaker ServerSelectedBreaker = Atend.Base.Equipment.EBreaker.ServerSelectByCode(SelectedEquipEBreaker.Code, _connection, _transaction);
                                        if (ServerSelectedBreaker.Code != -1)
                                        {
                                            if (SelectedEquipEBreaker.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEBreaker.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Breaker:There Is No Row On Server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Bus:
                                ed.WriteMessage("Sub Is : Bus \n");
                                Atend.Base.Equipment.EBus SelectedEquipEBus = Atend.Base.Equipment.EBus.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEBus.Code != -1)
                                {
                                    //Atend.Base.Equipment.EBus answer = Atend.Base.Equipment.EBus.AccessSelectByXCode(SelectedEquipEBus.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEBus.Code == 0)
                                    {
                                        if (SelectedEquipEBus.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEBus.Code;
                                            if (!SelectedEquipEBus.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX Bus Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EBus ServerSelectedBus = Atend.Base.Equipment.EBus.ServerSelectByCode(SelectedEquipEBus.Code, _connection, _transaction);
                                        if (ServerSelectedBus.Code != -1)
                                        {
                                            if (SelectedEquipEBus.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEBus.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Bus:There Is No Row On Server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.CatOut:
                                ed.WriteMessage("Sub Is : CatOut \n");
                                Atend.Base.Equipment.ECatOut SelectedEquipECatOut = Atend.Base.Equipment.ECatOut.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipECatOut.Code != -1)
                                {
                                    //Atend.Base.Equipment.ECatOut answer = Atend.Base.Equipment.ECatOut.AccessSelectByXCode(SelectedEquipECatOut.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipECatOut.Code == 0)
                                    {
                                        if (SelectedEquipECatOut.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipECatOut.Code;
                                            if (!SelectedEquipECatOut.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateXCatOut Failed ");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.ECatOut ServerSelectedCatout = Atend.Base.Equipment.ECatOut.ServerSelectByCode(SelectedEquipECatOut.Code, _connection, _transaction);
                                        if (ServerSelectedCatout.Code != -1)
                                        {
                                            if (SelectedEquipECatOut.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipECatOut.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*CatOut:There Is No Row On Server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Cell:
                                ed.WriteMessage("Sub Is : Cell \n");
                                Atend.Base.Equipment.ECell SelectedEquipECell = Atend.Base.Equipment.ECell.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipECell.Code != -1)
                                {
                                    //Atend.Base.Equipment.ECell answer = Atend.Base.Equipment.ECell.AccessSelectByXCode(SelectedEquipECell.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipECell.Code == 0)
                                    {
                                        if (SelectedEquipECell.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipECell.Code;
                                            if (!SelectedEquipECell.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX   Cell Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.ECell serverSelectedCell = Atend.Base.Equipment.ECell.ServerSelectByCode(SelectedEquipECell.Code, _connection, _transaction);
                                        if (serverSelectedCell.Code != -1)
                                        {
                                            if (SelectedEquipECell.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipECell.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Cell:There Is No Row On Server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Conductor:
                                ed.WriteMessage("Sub Is : Conductor \n");
                                Atend.Base.Equipment.EConductor SelectedEquipEConductor = Atend.Base.Equipment.EConductor.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEConductor.Code != -1)
                                {
                                    //Atend.Base.Equipment.EConductor answer = Atend.Base.Equipment.EConductor.AccessSelectByXCode(SelectedEquipEConductor.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEConductor.Code == 0)
                                    {
                                        if (SelectedEquipEConductor.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEConductor.Code;
                                            if (!SelectedEquipEConductor.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX    Conductor     Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EConductor ServerSelectedConductor = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedEquipEConductor.Code, _connection, _transaction);
                                        if (ServerSelectedConductor.Code != -1)
                                        {
                                            if (SelectedEquipEConductor.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEConductor.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Conductor:There Is No Row On Server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;


                            //case Atend.Control.Enum.ProductType.ConductorTip:
                            //    ed.WriteMessage("Sub Is : ConductorTip \n");

                            //    Atend.Base.Equipment.EConductorTip SelectedequipEConductorTip = Atend.Base.Equipment.EConductorTip.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);




                            //    if (SelectedequipEConductorTip.Code != -1)
                            //    {

                            //        Atend.Base.Equipment.EConductor SelectedPhaseConductor = Atend.Base.Equipment.EConductor.SelectByXCodeForDesign(SelectedequipEConductorTip.PhaseProductXCode, LocalConnection, LocalTransaction);
                            //        Atend.Base.Equipment.EConductor SelectedNeutralConductor = Atend.Base.Equipment.EConductor.SelectByXCodeForDesign(SelectedequipEConductorTip.NeutralProductXCode, LocalConnection, LocalTransaction);
                            //        Atend.Base.Equipment.EConductor SelectedNightConductor = Atend.Base.Equipment.EConductor.SelectByXCodeForDesign(SelectedequipEConductorTip.NightProductXCode, LocalConnection, LocalTransaction);

                            //        if (SelectedPhaseConductor.Code != -1)
                            //        {
                            //            if (SelectedPhaseConductor.Code == 0)
                            //            {
                            //                if (SelectedPhaseConductor.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = SelectedPhaseConductor.Code;
                            //                    if (!SelectedPhaseConductor.UpdateX(LocalTransaction, LocalConnection))
                            //                        throw new System.Exception("SelectedPhaseConductor Updatex failed");
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Conductor ServerInsert failed in CondTip");
                            //                }
                            //            }
                            //            else
                            //            {
                            //                Atend.Base.Equipment.EConductor ServerCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedPhaseConductor.Code, _connection, _transaction);
                            //                if (ServerCond.Code != -1)
                            //                {
                            //                    if (SelectedPhaseConductor.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                    {
                            //                        NewCode = SelectedPhaseConductor.Code;
                            //                    }
                            //                    else
                            //                    {
                            //                        throw new System.Exception("PhaseCond ServerUpdate Failed in CondTip");
                            //                    }
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("There Is No Row On Server in CondPhase in CondTip");
                            //                }
                            //            }

                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of data In Phase Conductor in Conductor Tip");
                            //        }




                            //        if (SelectedNightConductor.Code != -1)
                            //        {
                            //            if (SelectedNightConductor.Code == 0)
                            //            {
                            //                if (SelectedNightConductor.ServerInsert(_transaction , _connection, true, false, LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = SelectedNightConductor.Code;
                            //                    if (!SelectedNightConductor.UpdateX(LocalTransaction, LocalConnection))
                            //                        throw new System.Exception("SelectedNightConductor Updatex failed");
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("NightConductor ServerInsert failed in CondTip");
                            //                }
                            //            }
                            //            else
                            //            {
                            //                Atend.Base.Equipment.EConductor ServerNightCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedNightConductor.Code, _connection, _transaction);
                            //                if (ServerNightCond.Code != -1)
                            //                {
                            //                    if (ServerNightCond.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                    {
                            //                        NewCode = ServerNightCond.Code;
                            //                    }
                            //                    else
                            //                    {
                            //                        throw new System.Exception("NightCond ServerUpdate Failed in CondTip");
                            //                    }
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("There Is No Row On Server in CondNight in CondTip");
                            //                }
                            //            }

                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of data In Night Conductor in Conductor Tip");
                            //        }




                            //        if (SelectedNeutralConductor.Code != -1)
                            //        {
                            //            if (SelectedNeutralConductor.Code == 0)
                            //            {
                            //                if (SelectedNeutralConductor.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = SelectedNeutralConductor.Code;
                            //                    if (!SelectedNeutralConductor.UpdateX(LocalTransaction, LocalConnection))
                            //                        throw new System.Exception("SelectedNeutralConductor Updatex failed");
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("NeutralConductor ServerInsert failed in CondTip");
                            //                }
                            //            }
                            //            else
                            //            {
                            //                Atend.Base.Equipment.EConductor ServerNeutralCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedNeutralConductor.Code, _connection, _transaction);
                            //                if (ServerNeutralCond.Code != -1)
                            //                {
                            //                    if (SelectedNeutralConductor.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                    {
                            //                        NewCode = SelectedNeutralConductor.Code;
                            //                    }
                            //                    else
                            //                    {
                            //                        throw new System.Exception("NeutralCond ServerUpdate Failed in CondTip");
                            //                    }
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("There Is No Row On Server in CondNeutral in CondTip");
                            //                }
                            //            }

                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of data In PNetral Conductor in Conductor Tip");
                            //        }


                            //        SelectedequipEConductorTip.PhaseProductCode = SelectedPhaseConductor.Code;
                            //        SelectedequipEConductorTip.NeutralProductCode = SelectedNeutralConductor.Code;
                            //        SelectedequipEConductorTip.NightProductCode = SelectedNightConductor.Code;
                            //        if (SelectedequipEConductorTip.Code == 0)
                            //        {
                            //            if (SelectedequipEConductorTip.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //            {
                            //                NewCode = SelectedequipEConductorTip.Code;
                            //                if (!SelectedequipEConductorTip.UpdateX(LocalTransaction, LocalConnection))
                            //                {
                            //                    throw new System.Exception("UpdateX    ConductorTip     Failed");
                            //                }
                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("ServerInsert failed" + Type.ToString());
                            //            }
                            //        }
                            //        else
                            //        {
                            //            Atend.Base.Equipment.EConductor ServerSelectedConductor = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedequipEConductorTip.Code, _connection, _transaction);
                            //            if (ServerSelectedConductor.Code != -1)
                            //            {
                            //                if (SelectedequipEConductorTip.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = SelectedequipEConductorTip.Code;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("ServerUpdate failed" + Type.ToString());
                            //                }
                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("Conductor:There Is No Row On Server For Update " + Type.ToString());
                            //            }
                            //        }
                            //        //}
                            //    }
                            //    else
                            //    {
                            //        ed.WriteMessage(Type.ToString() + " does not exist \n");
                            //    }
                            //    break;

                            case Atend.Control.Enum.ProductType.Consol:
                                ed.WriteMessage("Sub Is : Consol \n");
                                //ed.WriteMessage("**XCODE={0}\n", dr["XCode"].ToString());
                                Atend.Base.Equipment.EConsol SelectedEquipEConsol = Atend.Base.Equipment.EConsol.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEConsol.Code != -1)
                                {
                                    //Atend.Base.Equipment.EConsol answer = Atend.Base.Equipment.EConsol.AccessSelectByXCode(SelectedEquipEConsol.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEConsol.Code == 0)
                                    {
                                        if (SelectedEquipEConsol.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEConsol.Code;
                                            if (!SelectedEquipEConsol.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX   Consol      Failed");
                                            }

                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EConsol ServerSelectedConsol = Atend.Base.Equipment.EConsol.ServerSelectByCode(SelectedEquipEConsol.Code, _connection, _transaction);
                                        if (ServerSelectedConsol.Code != -1)
                                        {
                                            if (SelectedEquipEConsol.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEConsol.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Consol:There Is No Row On Server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    // }
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Countor:
                                ed.WriteMessage("Sub Is : Countor \n");
                                Atend.Base.Equipment.ECountor SelectedEquipECountor = Atend.Base.Equipment.ECountor.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipECountor.Code != -1)
                                {
                                    //Atend.Base.Equipment.ECountor answer = Atend.Base.Equipment.ECountor.AccessSelectByXCode(SelectedEquipECountor.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipECountor.Code == 0)
                                    {
                                        if (SelectedEquipECountor.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipECountor.Code;
                                            if (!SelectedEquipECountor.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX  Countor  Failed");
                                            }

                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.ECountor ServerSelectedCountor = Atend.Base.Equipment.ECountor.ServerSelectByCode(SelectedEquipECountor.Code, _connection, _transaction);
                                        if (ServerSelectedCountor.Code != -1)
                                        {
                                            if (SelectedEquipECountor.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipECountor.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Countor:There Is No Row On Server For Update " + dr["TableType"].ToString());
                                        }
                                    }


                                    // }
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.CT:
                                ed.WriteMessage("Sub Is : CT \n");
                                Atend.Base.Equipment.ECT SelectedEquipECT = Atend.Base.Equipment.ECT.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipECT.Code != -1)
                                {
                                    //Atend.Base.Equipment.ECT answer = Atend.Base.Equipment.ECT.AccessSelectByXCode(SelectedEquipECT.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipECT.Code == 0)
                                    {
                                        if (SelectedEquipECT.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipECT.Code;
                                            if (!SelectedEquipECT.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX  CT  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.ECT ServerSelectedCT = Atend.Base.Equipment.ECT.ServerSelectByCode(SelectedEquipECT.Code, _connection, _transaction);
                                        if (ServerSelectedCT.Code != -1)
                                        {
                                            if (SelectedEquipECT.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipECT.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*CT:There Is No Row On Server For Update " + dr["TableType"].ToString());
                                        }
                                    }

                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.DB:
                                ed.WriteMessage("Sub Is : DB 1\n");
                                Atend.Base.Equipment.EDB SelectedEquipEDB = Atend.Base.Equipment.EDB.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEDB.Code != -1)
                                {
                                    //Atend.Base.Equipment.EDB answer = Atend.Base.Equipment.EDB.AccessSelectByXCode(SelectedEquipEDB.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEDB.Code == 0)
                                    {
                                        if (SelectedEquipEDB.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEDB.Code;
                                            if (!SelectedEquipEDB.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX  DB  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());

                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EDB ServerSelectedDB = Atend.Base.Equipment.EDB.ServerSelectByCode(SelectedEquipEDB.Code, _connection, _transaction);
                                        if (ServerSelectedDB.Code != -1)
                                        {
                                            if (SelectedEquipEDB.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEDB.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());

                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*DB:There Is No Row On Server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    DataTable DBPhuses = Atend.Base.Equipment.EDBPhuse.SelectByDBXCode(new Guid(dr["XCode"].ToString()), LocalTransaction, LocalConnection);

                                    if (!Atend.Base.Equipment.EDBPhuse.Delete(_transaction, _connection, SelectedEquipEDB.Code))
                                    {
                                        throw new System.Exception("Error In Delete DBphuse in sEnd");
                                    }

                                    foreach (DataRow DBPhuse in DBPhuses.Rows)
                                    {
                                        Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.SelectByXCodeForDesign(new Guid(DBPhuse["PhuseXcode"].ToString()), LocalConnection, LocalTransaction);
                                        Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCodeForDesign(_EPhuse.PhusePoleXCode, LocalConnection, LocalTransaction);

                                        if (_EPhusePole.Code != -1)
                                        {

                                            if (_EPhusePole.Code == 0)
                                            {
                                                if (!_EPhusePole.ServerInsert(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                                                }
                                                else
                                                {

                                                    if (!_EPhusePole.UpdateX(LocalTransaction, LocalConnection))
                                                    {
                                                        throw new System.Exception(" UpdateX  EPhuse  Failed");
                                                    }

                                                }
                                            }
                                            else
                                            {
                                                Atend.Base.Equipment.EPhusePole ServerSelectedPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(_EPhusePole.Code, _connection, _transaction);
                                                if (ServerSelectedPhusePole.Code != -1)
                                                {
                                                    if (!_EPhusePole.ServerUpdate(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                                    {
                                                        throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                                                    }
                                                }
                                                else
                                                {
                                                    throw new System.Exception("*PhuseINDB:There Is No Row on Server For update " + dr["tableType"].ToString());
                                                }
                                            }

                                        }
                                        else
                                        {
                                            throw new System.Exception("EPhusePole Lack Of Data");
                                        }

                                        _EPhuse.PhusePoleCode = _EPhusePole.Code;
                                        if (_EPhuse.Code != -1)
                                        {
                                            if (_EPhuse.Code == 0)
                                            {
                                                if (!_EPhuse.ServerInsert(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                                                }
                                                else
                                                {

                                                    if (!_EPhuse.UpdateX(LocalTransaction, LocalConnection))
                                                    {
                                                        throw new System.Exception(" UpdateX  EPhuse  Failed");
                                                    }

                                                }
                                            }
                                            else
                                            {
                                                Atend.Base.Equipment.EPhuse ServerSelectedPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(_EPhuse.Code, _connection, _transaction);
                                                if (ServerSelectedPhuse.Code != -1)
                                                {
                                                    if (!_EPhuse.ServerUpdate(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                                    {
                                                        throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                                                    }
                                                }
                                                else
                                                {
                                                    throw new System.Exception("*PhuseINDB:There Is No Row on Server For update " + dr["tableType"].ToString());
                                                }
                                            }

                                            Atend.Base.Equipment.EDBPhuse _edbPhuse = Atend.Base.Equipment.EDBPhuse.SelectByXCodeForDesign(new Guid(DBPhuse["XCode"].ToString()), LocalConnection, LocalTransaction);
                                            if (_edbPhuse.Code != -1)
                                            {
                                                _edbPhuse.DBCode = SelectedEquipEDB.Code;
                                                _edbPhuse.PhuseCode = _EPhuse.Code;
                                                //if (_edbPhuse.Code == 0)
                                                //{
                                                if (!_edbPhuse.ServerInsert(_transaction, _connection, false, false, LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":DBPhuse");
                                                }
                                                else
                                                {

                                                    if (!_edbPhuse.UpdateX(LocalTransaction, LocalConnection))
                                                    {
                                                        throw new System.Exception(" UpdateX  dbPhuse  Failed");
                                                    }
                                                }
                                                //}
                                                //else
                                                //{
                                                //    Atend.Base.Equipment.EDBPhuse ServerSelectedDBPhuse = Atend.Base.Equipment.EDBPhuse.ServerSelectByCode(_edbPhuse.Code, _connection, _transaction);
                                                //    if (ServerSelectedDBPhuse.Code != -1)
                                                //    {
                                                //        if (!_edbPhuse.ServerUpdate(_transaction, _connection, false, false, LocalTransaction, LocalConnection))
                                                //        {
                                                //            throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":DBPhuse");
                                                //        }
                                                //    }
                                                //    else
                                                //    {
                                                //        throw new System.Exception("*DBPhuseINDB:There Is No Row on Server For update " + dr["tableType"].ToString());
                                                //    }
                                                //}
                                            }
                                            else
                                            {
                                                throw new System.Exception("Lack of Data in edbPhuse");
                                            }

                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack Of Data in DBPhuse");
                                        }

                                    }
                                }
                                else
                                {
                                    throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                }


                                break;
                            case Atend.Control.Enum.ProductType.Disconnector:
                                ed.WriteMessage("Sub Is : Disconnector \n");
                                Atend.Base.Equipment.EDisconnector SelectedEquipEDisconnector = Atend.Base.Equipment.EDisconnector.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEDisconnector.Code != -1)
                                {
                                    //Atend.Base.Equipment.EDisconnector answer = Atend.Base.Equipment.EDisconnector.AccessSelectByXCode(SelectedEquipEDisconnector.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEDisconnector.Code == 0)
                                    {
                                        if (SelectedEquipEDisconnector.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEDisconnector.Code;
                                            if (!SelectedEquipEDisconnector.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX Disconnector   Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EDisconnector ServerSelectedDisconnector = Atend.Base.Equipment.EDisconnector.ServerSelectByCode(SelectedEquipEDisconnector.Code, _connection, _transaction);
                                        if (ServerSelectedDisconnector.Code != -1)
                                        {
                                            if (SelectedEquipEDisconnector.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEDisconnector.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Disconnector:There Is No Row on Server For update " + dr["tableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }

                                break;

                            case Atend.Control.Enum.ProductType.Floor:
                                ed.WriteMessage("Sub Is : Floor \n");
                                Atend.Base.Equipment.EFloor SelectedEquipEFloor = Atend.Base.Equipment.EFloor.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEFloor.Code != -1)
                                {
                                    //Atend.Base.Equipment.EFloor answer = Atend.Base.Equipment.EFloor.AccessSelectByXCode(SelectedEquipEFloor.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEFloor.Code == 0)
                                    {
                                        if (SelectedEquipEFloor.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEFloor.Code;
                                            if (!SelectedEquipEFloor.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX   Floor Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EFloor ServerSelectedFloor = Atend.Base.Equipment.EFloor.ServerSelectByCode(SelectedEquipEFloor.Code, _connection, _transaction);
                                        if (ServerSelectedFloor.Code != -1)
                                        {
                                            if (SelectedEquipEFloor.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEFloor.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Floor:There Is No Row on Server For update " + dr["tableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;


                            case Atend.Control.Enum.ProductType.Ground:
                                ed.WriteMessage("Sub Is : Ground \n");
                                Atend.Base.Equipment.EGround SelectedEquipEGround = Atend.Base.Equipment.EGround.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEGround.Code != -1)
                                {
                                    //Atend.Base.Equipment.EGround answer = Atend.Base.Equipment.EGround.AccessSelectByXCode(SelectedEquipEGround.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEGround.Code == 0)
                                    {
                                        if (SelectedEquipEGround.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEGround.Code;
                                            if (!SelectedEquipEGround.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX  Ground  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {

                                        Atend.Base.Equipment.EGround ServerSelectedGround = Atend.Base.Equipment.EGround.ServerSelectByCode(SelectedEquipEGround.Code, _connection, _transaction);
                                        if (ServerSelectedGround.Code != -1)
                                        {
                                            if (SelectedEquipEGround.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEGround.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Ground:There Is No Row on Server For update " + dr["tableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;


                            case Atend.Control.Enum.ProductType.GroundCabel:
                                ed.WriteMessage("Sub Is : MiddleCabel :={0}\n", dr["XCode"].ToString());
                                Atend.Base.Equipment.EGroundCabel SelectedEquipEMiddleGroundCabel = Atend.Base.Equipment.EGroundCabel.SelectByXCodeForDeign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEMiddleGroundCabel.Code != -1)
                                {
                                    //Atend.Base.Equipment.EGroundCabel answer = Atend.Base.Equipment.EGroundCabel.AccessSelectByXCode(SelectedEquipEMiddleGroundCabel.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEMiddleGroundCabel.Code == 0)
                                    {
                                        if (SelectedEquipEMiddleGroundCabel.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEMiddleGroundCabel.Code;
                                            if (!SelectedEquipEMiddleGroundCabel.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX  GroundCabel  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EGroundCabel ServerSelectedGroundCabel = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(SelectedEquipEMiddleGroundCabel.Code, _connection, _transaction);
                                        if (ServerSelectedGroundCabel.Code != -1)
                                        {
                                            if (SelectedEquipEMiddleGroundCabel.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEMiddleGroundCabel.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpDate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*GroundCabel:There Is No Row on Server For update " + dr["tableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;



                            //case Atend.Control.Enum.ProductType.GroundCabelTip:
                            //    ed.WriteMessage("Sub Is : MiddleCabel :={0}\n", dr["XCode"].ToString());
                            //    Atend.Base.Equipment.EGroundCabelTip SelectedEquipEMiddleGroundCabelTip = Atend.Base.Equipment.EGroundCabelTip.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                            //    if (SelectedEquipEMiddleGroundCabelTip.Code != -1)
                            //    {

                            //        Atend.Base.Equipment.EGroundCabel SelectedMidGroundPhase = Atend.Base.Equipment.EGroundCabel.SelectByXCode(LocalTransaction, LocalConnection, SelectedEquipEMiddleGroundCabelTip.PhaseProductXCode);
                            //        Atend.Base.Equipment.EGroundCabel SeletedMidGroundNeutral = Atend.Base.Equipment.EGroundCabel.SelectByXCode(LocalTransaction, LocalConnection, SelectedEquipEMiddleGroundCabelTip.NeutralProductXCode);
                            //        if (SelectedMidGroundPhase.Code != -1)
                            //        {
                            //            if (SelectedMidGroundPhase.Code == 0)
                            //            {
                            //                if (SelectedMidGroundPhase.ServerInsert(_transaction, _connection, true, false , LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = SelectedMidGroundPhase.Code;
                            //                    if (!SelectedMidGroundPhase.UpdateX(LocalTransaction, LocalConnection))
                            //                        throw new System.Exception("SelectedMidGroundPhase Updatex Failed");
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("SelectedMidGroundPhase ServerInser Failed");
                            //                }
                            //            }
                            //            else
                            //            {
                            //                Atend.Base.Equipment.EGroundCabel ServerMidGroundPhase = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(SelectedMidGroundPhase.Code, _connection, _transaction);
                            //                if (ServerMidGroundPhase.Code != -1)
                            //                {
                            //                    if (SelectedMidGroundPhase.ServerUpdate(_transaction, _connection, true, false , LocalTransaction, LocalConnection))
                            //                    {
                            //                        NewCode = SelectedMidGroundPhase.Code;
                            //                    }
                            //                    else
                            //                    {
                            //                        throw new System.Exception("SelectedMidGroundPhase Server Update Failed");
                            //                    }
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("There Is No Row On Server For Update SelectedMidGroundPhase");
                            //                }
                            //            }
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of Data SelectedMidGroundPhase");
                            //        }





                            //        if (SeletedMidGroundNeutral.Code != -1)
                            //        {
                            //            if (SeletedMidGroundNeutral.Code == 0)
                            //            {
                            //                if (SeletedMidGroundNeutral.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = SeletedMidGroundNeutral.Code;
                            //                    if (!SeletedMidGroundNeutral.UpdateX(LocalTransaction, LocalConnection))
                            //                        throw new System.Exception("SeletedMidGroundNeutral Updatex Failed");
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("SeletedMidGroundNeutral ServerInser Failed");
                            //                }
                            //            }
                            //            else
                            //            {
                            //                Atend.Base.Equipment.EGroundCabel ServerMidGroundNeutral = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(SeletedMidGroundNeutral.Code, _connection, _transaction);
                            //                if (ServerMidGroundNeutral.Code != -1)
                            //                {
                            //                    if (SeletedMidGroundNeutral.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                    {
                            //                        NewCode = SeletedMidGroundNeutral.Code;
                            //                    }
                            //                    else
                            //                    {
                            //                        throw new System.Exception("SeletedMidGroundNeutral Server Update Failed");
                            //                    }
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("There Is No Row On Server For Update SeletedMidGroundNeutral");
                            //                }
                            //            }
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of Data SeletedMidGroundNeutral");
                            //        }



                            //        SelectedEquipEMiddleGroundCabelTip.PhaseProductCode = SelectedMidGroundPhase.Code;
                            //        SelectedEquipEMiddleGroundCabelTip.NeutralProductCode = SeletedMidGroundNeutral.Code;

                            //        if (SelectedEquipEMiddleGroundCabelTip.Code == 0)
                            //        {//confirm
                            //            if (SelectedEquipEMiddleGroundCabelTip.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //            {
                            //                NewCode = SelectedEquipEMiddleGroundCabelTip.Code;
                            //                if (!SelectedEquipEMiddleGroundCabelTip.UpdateX(LocalTransaction, LocalConnection))
                            //                {
                            //                    throw new System.Exception(" UpdateX  GroundCabel  Failed");
                            //                }
                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("ServerInsert failed" + Type.ToString());
                            //            }
                            //        }
                            //        else
                            //        {
                            //            Atend.Base.Equipment.EGroundCabel ServerSelectedGroundCabel = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(SelectedEquipEMiddleGroundCabelTip.Code, _connection, _transaction);
                            //            if (ServerSelectedGroundCabel.Code != -1)
                            //            {
                            //                if (SelectedEquipEMiddleGroundCabelTip.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = SelectedEquipEMiddleGroundCabelTip.Code;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("ServerUpDate failed" + Type.ToString());
                            //                }
                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("GroundCabel:There Is No Row on Server For update " + Type.ToString());
                            //            }
                            //        }
                            //        //}
                            //    }
                            //    else
                            //    {
                            //        ed.WriteMessage(Type.ToString() + " does not exist \n");
                            //    }
                            //    break;


                            case Atend.Control.Enum.ProductType.GroundPost:
                                ed.WriteMessage("Sub Is : GroundPost \n");
                                Atend.Base.Equipment.EGroundPost SelectedEquipEGroundPost = Atend.Base.Equipment.EGroundPost.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEGroundPost.Code != -1)
                                {
                                    if (SelectedEquipEGroundPost.Code == 0)
                                    {
                                        if (SelectedEquipEGroundPost.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEGroundPost.Code;
                                            if (!SelectedEquipEGroundPost.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX  GroundPost  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EGroundPost SereverSelectedGroundPost = Atend.Base.Equipment.EGroundPost.ServerSelectByCode(SelectedEquipEGroundPost.Code, _connection, _transaction);
                                        if (SereverSelectedGroundPost.Code != -1)
                                        {
                                            if (SelectedEquipEGroundPost.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEGroundPost.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*GroundPost:There Is No Row on Server For update " + dr["tableType"].ToString());
                                        }
                                    }
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;



                            case Atend.Control.Enum.ProductType.Halter:
                                ed.WriteMessage("Sub Is : Halter \n");
                                Atend.Base.Equipment.EHalter SelectedEquipEHalter = Atend.Base.Equipment.EHalter.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEHalter.Code != -1)
                                {
                                    //Atend.Base.Equipment.EHalter answer = Atend.Base.Equipment.EHalter.AccessSelectByXCode(SelectedEquipEHalter.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEHalter.Code == 0)
                                    {
                                        if (SelectedEquipEHalter.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEHalter.Code;
                                            if (!SelectedEquipEHalter.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX  Halter  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EHalter ServerSelectedHalter = Atend.Base.Equipment.EHalter.ServerSelectByCode(SelectedEquipEHalter.Code, _connection, _transaction);
                                        if (ServerSelectedHalter.Code != -1)
                                        {
                                            if (SelectedEquipEHalter.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEHalter.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Halter:There Is No Row on Server For update " + dr["tableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;

                            //case Atend.Control.Enum.ProductType.Halter:
                            //    Atend.Base.Equipment. SelectedEquip = Atend.Base.Equipment.EBreaker.SelectByXCode(XCode);
                            //    if (SelectedEquip.Code != -1)
                            //    {
                            //        if (SelectedEquip.AccessInsert(_transaction, _connection))
                            //        {
                            //            NewCode = SelectedEquip.Code;
                            //        }
                            //        else
                            //        {
                            //            throw new Exception("{0}.AccessInsert failed", ((Atend.Control.Enum.ProductType)Convert.ToInt32(dr["TableType"])).ToString());
                            //        }
                            //    }
                            //    break;
                            case Atend.Control.Enum.ProductType.HeaderCabel:
                                ed.WriteMessage("Sub Is : HeaderCabel \n");
                                Atend.Base.Equipment.EHeaderCabel SelectedEquipEHeaderCabel = Atend.Base.Equipment.EHeaderCabel.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEHeaderCabel.Code != -1)
                                {
                                    //Atend.Base.Equipment.EHeaderCabel answer = Atend.Base.Equipment.EHeaderCabel.AccessSelectByXCode(SelectedEquipEHeaderCabel.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEHeaderCabel.Code == 0)
                                    {
                                        if (SelectedEquipEHeaderCabel.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEHeaderCabel.Code;
                                            if (!SelectedEquipEHeaderCabel.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX  HeaderCabel  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EHeaderCabel ServerSelectedHeaderCabel = Atend.Base.Equipment.EHeaderCabel.ServerSelectByCode(SelectedEquipEHeaderCabel.Code, _connection, _transaction);
                                        if (ServerSelectedHeaderCabel.Code != -1)
                                        {
                                            if (SelectedEquipEHeaderCabel.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEHeaderCabel.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*HeaderCabel:There Is No Row on Server For update " + dr["tableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Insulator:
                                ed.WriteMessage("Sub Is : Insulator \n");
                                Atend.Base.Equipment.EInsulator SelectedEquipEInsulator = Atend.Base.Equipment.EInsulator.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEInsulator.Code != -1)
                                {
                                    //Atend.Base.Equipment.EInsulator answer = Atend.Base.Equipment.EInsulator.AccessSelectByXCode(SelectedEquipEInsulator.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEInsulator.Code == 0)
                                    {
                                        if (SelectedEquipEInsulator.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEInsulator.Code;
                                            if (!SelectedEquipEInsulator.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX    Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EInsulator ServerSelectedInsulator = Atend.Base.Equipment.EInsulator.ServerSelectByCode(SelectedEquipEInsulator.Code, _connection, _transaction);
                                        if (ServerSelectedInsulator.Code != -1)
                                        {
                                            if (SelectedEquipEInsulator.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEInsulator.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Insulator:There Is No Row on Server For update " + dr["tableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;


                            case Atend.Control.Enum.ProductType.InsulatorChain:
                                ed.WriteMessage("Sub Is : InsulatorChain \n");
                                Atend.Base.Equipment.EInsulatorChain SelectedEquipEInsulatorChain = Atend.Base.Equipment.EInsulatorChain.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEInsulatorChain.Code != -1)
                                {
                                    //Atend.Base.Equipment.EInsulatorChain answer = Atend.Base.Equipment.EInsulatorChain.AccessSelectByXCode(SelectedEquipEInsulatorChain.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEInsulatorChain.Code == 0)
                                    {
                                        if (SelectedEquipEInsulatorChain.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEInsulatorChain.Code;
                                            if (!SelectedEquipEInsulatorChain.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX  InsulatorChain  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EInsulatorChain ServerSelectedInsulatorChain = Atend.Base.Equipment.EInsulatorChain.ServerSelectByCode(SelectedEquipEInsulatorChain.Code, _connection, _transaction);
                                        if (ServerSelectedInsulatorChain.Code != -1)
                                        {

                                            if (SelectedEquipEInsulatorChain.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEInsulatorChain.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*InsulatorChain:There Is No Row on Server For update " + dr["tableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;

                            case Atend.Control.Enum.ProductType.InsulatorPipe:
                                ed.WriteMessage("Sub Is : InsulatorPipe \n");
                                Atend.Base.Equipment.EInsulatorPipe SelectedEquipEInsulatorPipe = Atend.Base.Equipment.EInsulatorPipe.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEInsulatorPipe.Code != -1)
                                {
                                    //Atend.Base.Equipment.EInsulatorPipe answer = Atend.Base.Equipment.EInsulatorPipe.AccessSelectByXCode(SelectedEquipEInsulatorPipe.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEInsulatorPipe.Code == 0)
                                    {
                                        if (SelectedEquipEInsulatorPipe.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEInsulatorPipe.Code;
                                            if (!SelectedEquipEInsulatorPipe.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX  InsulatorPipe  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EInsulatorPipe ServerSelectedInsulatorPipe = Atend.Base.Equipment.EInsulatorPipe.ServerSelectByCode(SelectedEquipEInsulatorPipe.Code, _connection, _transaction);
                                        if (ServerSelectedInsulatorPipe.Code != 0)
                                        {
                                            if (SelectedEquipEInsulatorPipe.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEInsulatorPipe.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*InsulatorPipe:There Is No Row OnServer For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;


                            case Atend.Control.Enum.ProductType.MiddleJackPanel:
                                ////ed.WriteMessage("AAA : {0} \n", new Guid(dr["XCode"].ToString()));
                                ed.WriteMessage("Sub Is : MiddleJackPanel \n");
                                Atend.Base.Equipment.EJAckPanel SelectedEquipEJAckPanel = Atend.Base.Equipment.EJAckPanel.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEJAckPanel.Code != -1)
                                {
                                    //Atend.Base.Equipment.EJAckPanel answer = Atend.Base.Equipment.EJAckPanel.AccessSelectByXCode(SelectedEquipEJAckPanel.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{

                                    Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.SelectByXCodeForDesign(SelectedEquipEJAckPanel.MasterProductXCode, LocalConnection, LocalTransaction);
                                    if (_eBus.Code != -1)
                                    {
                                        if (_eBus.Code == 0)
                                        {
                                            if (!_eBus.ServerInsert(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
                                            }
                                            else
                                            {

                                                if (!_eBus.UpdateX(LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception(" UpdateX  eBus  Failed");
                                                }



                                            }
                                        }
                                        else
                                        {
                                            ed.WriteMessage("Bus in middle jackpanel \n");
                                            Atend.Base.Equipment.EBus SeverSelectedBus = Atend.Base.Equipment.EBus.ServerSelectByCode(_eBus.Code, _connection, _transaction);
                                            if (SeverSelectedBus.Code != -1)
                                            {
                                                if (!_eBus.ServerUpdate(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
                                                }
                                            }
                                            else
                                            {
                                                throw new System.Exception("*BusINMiddleJackPanel:There is No row On server For Update " + dr["TableType"].ToString());
                                            }
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in MiddleJackPanel:Bus");
                                    }

                                    SelectedEquipEJAckPanel.MasterProductCode = _eBus.Code;
                                    if (SelectedEquipEJAckPanel.Code == 0)
                                    {

                                        if (SelectedEquipEJAckPanel.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEJAckPanel.Code;

                                            if (!SelectedEquipEJAckPanel.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX    Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Serevr Insert Failed in MJackPanel");
                                        }
                                    }
                                    else
                                    {
                                        ed.WriteMessage("main in middle jackpanel \n");
                                        Atend.Base.Equipment.EJAckPanel ServerSelectedJackPanel = Atend.Base.Equipment.EJAckPanel.ServerSelectByCode(SelectedEquipEJAckPanel.Code, _connection, _transaction);
                                        if (ServerSelectedJackPanel.Code != -1)
                                        {
                                            if (SelectedEquipEJAckPanel.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEJAckPanel.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Serevr Update Failed in MJackPanel");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*MiddleJackPanel:There is No row On server For Update " + dr["TableType"].ToString());
                                        }
                                    }

                                    //if (SelectedEquipEJAckPanel.ServerInsert(_transaction, _connection, true, false))
                                    //{
                                    //    NewCode = SelectedEquipEJAckPanel.Code;
                                    DataTable _JPS = Atend.Base.Equipment.EJackPanelCell.SelectByJackPanelXCode(LocalConnection, LocalTransaction, SelectedEquipEJAckPanel.XCode);

                                    if (!Atend.Base.Equipment.EJackPanelCell.Delete(_transaction, _connection, SelectedEquipEJAckPanel.Code))
                                    {
                                        throw new System.Exception("Error Delete in JackPanelCell in SendFromLocalToServer");
                                    }

                                    foreach (DataRow _JPSdr in _JPS.Rows)
                                    {
                                        Atend.Base.Equipment.ECell _eCell = Atend.Base.Equipment.ECell.SelectByXCodeForDesign(new Guid(_JPSdr["ProductXCode"].ToString()), LocalConnection, LocalTransaction);
                                        if (_eCell.Code != -1)
                                        {
                                            if (_eCell.Code == 0)
                                            {
                                                if (!_eCell.ServerInsert(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Cell");
                                                }
                                                else
                                                {

                                                    if (!_eCell.UpdateX(LocalTransaction, LocalConnection))
                                                    {
                                                        throw new System.Exception(" UpdateX Cell   Failed");
                                                    }

                                                }
                                            }
                                            else
                                            {
                                                Atend.Base.Equipment.ECell ServerSelectedCell = Atend.Base.Equipment.ECell.ServerSelectByCode(_eCell.Code, _connection, _transaction);
                                                if (ServerSelectedCell.Code != -1)
                                                {
                                                    if (!_eCell.ServerUpdate(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                                    {
                                                        throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Cell");
                                                    }
                                                }
                                                else
                                                {
                                                    throw new System.Exception("*CellINMiddleJackPanel:There is No row On server For Update " + dr["TableType"].ToString());
                                                }
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in MiddleJackPanel:Cell");
                                        }
                                        Atend.Base.Equipment.EJackPanelCell _EJC = Atend.Base.Equipment.EJackPanelCell.SelectByXCode(new Guid(_JPSdr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                        if (_EJC.Code != -1)
                                        {
                                            _EJC.ProductCode = _eCell.Code;
                                            _EJC.JackPanelCode = SelectedEquipEJAckPanel.Code;
                                            //if (_EJC.Code == 0)
                                            //{
                                            if (!_EJC.ServerInsert(_transaction, _connection, false, false, LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":JackPanelCell");
                                            }
                                            else
                                            {
                                                if (!_EJC.UpdateX(LocalConnection, LocalTransaction))
                                                {
                                                    throw new System.Exception(" UpdateX    Failed");
                                                }
                                            }
                                            //}
                                            //else
                                            //{
                                            //    Atend.Base.Equipment.EJackPanelCell ServerSelectedJackPanelCell = Atend.Base.Equipment.EJackPanelCell.ServerSelectByCode(_EJC.Code, _connection, _transaction);
                                            //    if (ServerSelectedJackPanelCell.Code != -1)
                                            //    {
                                            //        if (!_EJC.ServerUpdate(_transaction, _connection, false, false, LocalTransaction, LocalConnection))
                                            //        {
                                            //            throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":JackPanelCell");
                                            //        }
                                            //    }
                                            //    else
                                            //    {
                                            //        throw new System.Exception("*JackPanelCellINMiddleJackPanel:There Is no Row On server For Update " + dr["TableType"].ToString());
                                            //    }
                                            //}
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in MiddleJackPanel:JackPanelCell");
                                        }
                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of DAta in MidJackPanel");
                                }
                                //}
                                //}
                                break;


                            case Atend.Control.Enum.ProductType.WeekJackPanel:
                                ed.WriteMessage("Sub Is : WeekJackPanel \n");
                                Atend.Base.Equipment.EJackPanelWeek SelectedEquipWeekJackPanel = Atend.Base.Equipment.EJackPanelWeek.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipWeekJackPanel.Code != -1)
                                {
                                    //Atend.Base.Equipment.EJackPanelWeek answer = Atend.Base.Equipment.EJackPanelWeek.AccessSelectByXCode(SelectedEquipWeekJackPanel.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{

                                    Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.SelectByXCodeForDesign(SelectedEquipWeekJackPanel.BusXCode, LocalConnection, LocalTransaction);
                                    if (_eBus.Code != -1)
                                    {
                                        if (_eBus.Code == 0)
                                        {
                                            if (!_eBus.ServerInsert(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
                                            }
                                            else
                                            {
                                                if (!_eBus.UpdateX(LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception(" UpdateX  Bus  Failed");
                                                }
                                            }
                                        }
                                        else
                                        {
                                            Atend.Base.Equipment.EBus ServerSelectedBus = Atend.Base.Equipment.EBus.ServerSelectByCode(_eBus.Code, _connection, _transaction);
                                            ed.WriteMessage("Bus.Code={0}\n", ServerSelectedBus.Code);
                                            if (ServerSelectedBus.Code != -1)
                                            {
                                                if (!_eBus.ServerUpdate(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
                                                }
                                            }
                                            else
                                            {
                                                throw new System.Exception("*BusINWeekJackPanel:There is No row On server For Update " + dr["TableType"].ToString());
                                            }
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in WeekJackPanel:Bus");
                                    }
                                    SelectedEquipWeekJackPanel.BusCode = _eBus.Code;

                                    Atend.Base.Equipment.EAutoKey_3p _Key = Atend.Base.Equipment.EAutoKey_3p.SelectByXCodeForDesign(SelectedEquipWeekJackPanel.AutoKey3pXCode, LocalConnection, LocalTransaction);
                                    //ed.WriteMessage("1\n");

                                    if (_Key.Code != -1)
                                    {
                                        //ed.WriteMessage("2\n");
                                        if (_Key.Code == 0)
                                        {
                                            if (!_Key.ServerInsert(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                //ed.WriteMessage("3\n");
                                                throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":EAutoKey_3p");
                                            }
                                            else
                                            {
                                                if (!_Key.UpdateX(LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception(" UpdateX  Key  Failed");
                                                }
                                            }
                                        }
                                        else
                                        {
                                            Atend.Base.Equipment.EAutoKey_3p ServerSelectedAutokeyAuto3p = Atend.Base.Equipment.EAutoKey_3p.ServerSelectByCode(_Key.Code, _connection, _transaction);
                                            if (ServerSelectedAutokeyAuto3p.Code != -1)
                                            {
                                                if (!_Key.ServerUpdate(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                                {
                                                    //ed.WriteMessage("3\n");
                                                    throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":EAutoKey_3p");
                                                }
                                            }

                                            else
                                            {
                                                throw new System.Exception("*AutoKey_3pINWeekJackPanel:There is No row On server For Update " + dr["TableType"].ToString());
                                            }
                                        }
                                        //ed.WriteMessage("4\n");
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in WeekJackPanel:EAutoKey_3p");
                                    }
                                    //ed.WriteMessage("insert passed \n");
                                    SelectedEquipWeekJackPanel.AutoKey3pCode = _Key.Code;
                                    if (SelectedEquipWeekJackPanel.Code == 0)
                                    {
                                        if (SelectedEquipWeekJackPanel.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipWeekJackPanel.Code;
                                            if (!SelectedEquipWeekJackPanel.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX  WeekJackPanel  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert Failed " + dr["TableType"].ToString());
                                        }
                                    }
                                    else
                                    {
                                        //Atend.Base.Equipment.EJackPanelWeek ServerSelectedWeekJackPanel=Atend.Base.Equipment.EJackPanelWeek.ServerSelectByXCode
                                        if (SelectedEquipWeekJackPanel.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipWeekJackPanel.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed " + dr["TableType"].ToString());
                                        }
                                    }
                                    //if (SelectedEquipWeekJackPanel.ServerInsert(_transaction, _connection, true, false))
                                    //{
                                    //    NewCode = SelectedEquipWeekJackPanel.Code;

                                    DataTable _WJS = Atend.Base.Equipment.EJackPanelWeekCell.SelectByJackPanelWeekXCode(LocalTransaction, LocalConnection, SelectedEquipWeekJackPanel.XCode);
                                    if (!Atend.Base.Equipment.EJackPanelWeekCell.Delete(_transaction, _connection, SelectedEquipWeekJackPanel.Code))
                                    {
                                        throw new System.Exception("Error In Delete EJackPanelWeekCell sendToServer");
                                    }

                                    foreach (DataRow _WJSdr in _WJS.Rows)
                                    {
                                        //ed.WriteMessage("go for cells \n");
                                        Atend.Base.Equipment.EJackPanelWeekCell _WJC = Atend.Base.Equipment.EJackPanelWeekCell.SelectByXCodeForDesign(new Guid(_WJSdr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                        if (_WJC.Code != -1)
                                        {
                                            _WJC.JackPanelWeekCode = SelectedEquipWeekJackPanel.Code;
                                            //if (_WJC.Code == 0)
                                            //{
                                            if (!_WJC.ServerInsert(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":WeekJackPanelCell");
                                            }
                                            else
                                            {
                                                //if (!)
                                                //{
                                                //    throw new System.Exception("UpdateX      Failed");
                                                //}
                                            }
                                            //}
                                            //else
                                            //{
                                            //    Atend.Base.Equipment.EJackPanelWeekCell ServerSelectedJackPanelWeekCell = Atend.Base.Equipment.EJackPanelWeekCell.ServerSelectByCode(_WJC.Code, _connection, _transaction);
                                            //    if (ServerSelectedJackPanelWeekCell.Code != -1)
                                            //    {
                                            //        if (!_WJC.ServerUpdate(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                            //        {
                                            //            throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":WeekJackPanelCell");
                                            //        }
                                            //    }
                                            //    else
                                            //    {
                                            //        throw new System.Exception("*WeekJackPanelCellINWeekJackPanel:There is No row On server For Update " + dr["TableType"].ToString());
                                            //    }
                                            //}
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in WeekJackPanel:WeekJackPanelCell");
                                        }
                                    }

                                }
                                else
                                {
                                    throw new System.Exception("Lack Of Data In Week JackPanel");
                                }
                                //}
                                break;


                            case Atend.Control.Enum.ProductType.KablSho:
                                ed.WriteMessage("Sub Is : KablSho \n");
                                Atend.Base.Equipment.EKablsho SelectedEquipEKablsho = Atend.Base.Equipment.EKablsho.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEKablsho.Code != -1)
                                {
                                    //Atend.Base.Equipment.EKablsho answer = Atend.Base.Equipment.EKablsho.AccessSelectByXCode(SelectedEquipEKablsho.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEKablsho.Code == 0)
                                    {
                                        if (SelectedEquipEKablsho.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEKablsho.Code;
                                            if (!SelectedEquipEKablsho.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX   Kablsho   Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EKablsho ServerSelectedKablsho = Atend.Base.Equipment.EKablsho.ServerSelectByCode(SelectedEquipEKablsho.Code, _connection, _transaction);
                                        if (ServerSelectedKablsho.Code != -1)
                                        {
                                            if (SelectedEquipEKablsho.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEKablsho.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*KablSho:There is No row On server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Kalamp:
                                ed.WriteMessage("Sub Is : Kalamp \n");
                                Atend.Base.Equipment.EClamp SelectedEquipEClamp = Atend.Base.Equipment.EClamp.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEClamp.Code != -1)
                                {
                                    //Atend.Base.Equipment.EClamp answer = Atend.Base.Equipment.EClamp.AccessSelectByXCode(SelectedEquipEClamp.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEClamp.Code == 0)
                                    {
                                        if (SelectedEquipEClamp.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEClamp.Code;
                                            if (!SelectedEquipEClamp.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX   Calamp   Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EClamp ServerSelectedCalamp = Atend.Base.Equipment.EClamp.ServerSelectByCode(SelectedEquipEClamp.Code, _connection, _transaction);
                                        if (ServerSelectedCalamp.Code != -1)
                                        {
                                            if (SelectedEquipEClamp.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEClamp.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Kalamp:There is No row On server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Khazan:
                                ed.WriteMessage("Sub Is : Khazan \n");
                                Atend.Base.Equipment.EKhazan SelectedEquipEKhazan = Atend.Base.Equipment.EKhazan.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEKhazan.Code != -1)
                                {
                                    //Atend.Base.Equipment.EKhazan answer = Atend.Base.Equipment.EKhazan.AccessSelectByXCode(SelectedEquipEKhazan.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEKhazan.Code == 0)
                                    {
                                        if (SelectedEquipEKhazan.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEKhazan.Code;
                                            if (!SelectedEquipEKhazan.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX  Khazan    Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EKhazan ServerSelectedKhazan = Atend.Base.Equipment.EKhazan.ServerSelectByCode(SelectedEquipEKhazan.Code, _connection, _transaction);
                                        if (ServerSelectedKhazan.Code != -1)
                                        {
                                            if (SelectedEquipEKhazan.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEKhazan.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Khazan:There is No row On server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;

                            case Atend.Control.Enum.ProductType.Light:
                                ed.WriteMessage("Sub Is : Light \n");
                                Atend.Base.Equipment.ELight SelectedEquipELight = Atend.Base.Equipment.ELight.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipELight.Code != -1)
                                {
                                    //Atend.Base.Equipment.ELight answer = Atend.Base.Equipment.ELight.AccessSelectByXCode(SelectedEquipELight.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipELight.Code == 0)
                                    {
                                        if (SelectedEquipELight.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipELight.Code;
                                            if (!SelectedEquipELight.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX  Light  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.ELight ServerSelectedLight = Atend.Base.Equipment.ELight.ServerSelectByCode(SelectedEquipELight.Code, _connection, _transaction);
                                        if (ServerSelectedLight.Code != -1)
                                        {
                                            if (SelectedEquipELight.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipELight.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Light:There is No row On server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;

                            case Atend.Control.Enum.ProductType.Mafsal:
                                ed.WriteMessage("Sub Is : Mafsal \n");
                                Atend.Base.Equipment.EMafsal SelectedEquipEMafsal = Atend.Base.Equipment.EMafsal.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEMafsal.Code != -1)
                                {
                                    //Atend.Base.Equipment.EMafsal answer = Atend.Base.Equipment.EMafsal.AccessSelectByXCode(SelectedEquipEMafsal.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEMafsal.Code == 0)
                                    {
                                        if (SelectedEquipEMafsal.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEMafsal.Code;
                                            if (!SelectedEquipEMafsal.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX  Mafsal Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EMafsal ServerSelectedMafsal = Atend.Base.Equipment.EMafsal.ServerSelectByCode(SelectedEquipEMafsal.Code, _connection, _transaction);
                                        if (ServerSelectedMafsal.Code != -1)
                                        {
                                            if (SelectedEquipEMafsal.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEMafsal.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Mafsal:There is No row On server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;

                            case Atend.Control.Enum.ProductType.MeasuredJackPanel:
                                ed.WriteMessage("Sub Is : MeasuredJackPanel \n");
                                Atend.Base.Equipment.EMeasuredJackPanel SelectedEquipEMeasuredJackPanel = Atend.Base.Equipment.EMeasuredJackPanel.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEMeasuredJackPanel.Code != -1)
                                {
                                    //Atend.Base.Equipment.EMeasuredJackPanel answer = Atend.Base.Equipment.EMeasuredJackPanel.AccessSelectByXCode(SelectedEquipEMeasuredJackPanel.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEMeasuredJackPanel.Code == 0)
                                    {
                                        if (SelectedEquipEMeasuredJackPanel.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEMeasuredJackPanel.Code;
                                            if (!SelectedEquipEMeasuredJackPanel.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX MeasureJackPAnel  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EMeasuredJackPanel ServerSelectedMeasureJackpanel = Atend.Base.Equipment.EMeasuredJackPanel.ServerSelectByCode(SelectedEquipEMeasuredJackPanel.Code, _connection, _transaction);
                                        if (ServerSelectedMeasureJackpanel.Code != -1)
                                        {
                                            if (SelectedEquipEMeasuredJackPanel.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEMeasuredJackPanel.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*MeasuredJackPanel:There is No row On server For Update " + dr["TableType"].ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;


                            case Atend.Control.Enum.ProductType.MiniatureKey:
                                ed.WriteMessage("Sub Is : MiniatureKey \n");
                                Atend.Base.Equipment.EMiniatorKey SelectedEquipEMiniatorKey = Atend.Base.Equipment.EMiniatorKey.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEMiniatorKey.Code != -1)
                                {
                                    //Atend.Base.Equipment.EMiniatorKey answer = Atend.Base.Equipment.EMiniatorKey.AccessSelectByXCode(SelectedEquipEMiniatorKey.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEMiniatorKey.Code == 0)
                                    {
                                        if (SelectedEquipEMiniatorKey.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEMiniatorKey.Code;
                                            if (!SelectedEquipEMiniatorKey.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX  MiniatorKey Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EMiniatorKey ServerSelectedMiniatorKey = Atend.Base.Equipment.EMiniatorKey.ServerSelectByCode(SelectedEquipEMiniatorKey.Code, _connection, _transaction);
                                        if (ServerSelectedMiniatorKey.Code != -1)
                                        {
                                            if (SelectedEquipEMiniatorKey.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEMiniatorKey.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*MiniatureKey:There is No row On server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.PhotoCell:
                                ed.WriteMessage("Sub Is : PhotoCell \n");
                                Atend.Base.Equipment.EPhotoCell SelectedEquipEPhotoCell = Atend.Base.Equipment.EPhotoCell.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEPhotoCell.Code != -1)
                                {
                                    //Atend.Base.Equipment.EPhotoCell answer = Atend.Base.Equipment.EPhotoCell.AccessSelectByXCode(SelectedEquipEPhotoCell.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEPhotoCell.Code == 0)
                                    {
                                        if (SelectedEquipEPhotoCell.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEPhotoCell.Code;
                                            if (!SelectedEquipEPhotoCell.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX  PhotoCell Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EPhotoCell ServerSelectedPhotoCell = Atend.Base.Equipment.EPhotoCell.ServerSelectByCode(SelectedEquipEPhotoCell.Code, _connection, _transaction);
                                        if (ServerSelectedPhotoCell.Code != -1)
                                        {
                                            if (SelectedEquipEPhotoCell.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEPhotoCell.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*PhotoCell:There is No row On server For Update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Phuse:
                                ed.WriteMessage("Sub Is : Phuse \n");
                                Atend.Base.Equipment.EPhuse SelectedEquipEPhuse = Atend.Base.Equipment.EPhuse.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEPhuse.Code != -1)
                                {
                                    //Atend.Base.Equipment.EPhuse answer = Atend.Base.Equipment.EPhuse.AccessSelectByXCode(SelectedEquipEPhuse.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCodeForDesign(SelectedEquipEPhuse.PhusePoleXCode, LocalConnection, LocalTransaction);
                                    if (_EPhusePole.Code != -1)
                                    {
                                        if (_EPhusePole.Code == 0)
                                        {
                                            if (!_EPhusePole.ServerInsert(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":PhusePole");
                                            }
                                            else
                                            {
                                                if (!_EPhusePole.UpdateX(LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("UpdateX  PhusePole Failed");
                                                }
                                            }
                                        }
                                        else
                                        {
                                            Atend.Base.Equipment.EPhusePole ServerSelectedPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(_EPhusePole.Code, _connection, _transaction);
                                            if (ServerSelectedPhusePole.Code != -1)
                                            {
                                                if (!_EPhusePole.ServerUpdate(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("Server Update phusePole Failed");
                                                }
                                            }
                                            else
                                            {
                                                throw new System.Exception("*PhusePoleINPhuse:There is No row On server For Update " + dr["TableType"].ToString());
                                            }
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in Phuse:PhusePole");
                                    }
                                    ed.WriteMessage("PhusePoleCode:{0}\n", _EPhusePole.Code);
                                    SelectedEquipEPhuse.PhusePoleCode = _EPhusePole.Code;
                                    if (SelectedEquipEPhuse.Code == 0)
                                    {
                                        if (SelectedEquipEPhuse.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEPhuse.Code;
                                            if (!SelectedEquipEPhuse.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX Phuse  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EPhuse ServerSelectedPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(SelectedEquipEPhuse.Code, _connection, _transaction);
                                        if (ServerSelectedPhuse.Code != -1)
                                        {
                                            if (SelectedEquipEPhuse.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEPhuse.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update Failed in Phuse");

                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Phuse:There Is No Row on Server For Upadte " + dr["TableType"].ToString());
                                        }

                                    }


                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.PhuseKey:
                                ed.WriteMessage("Sub Is : PhuseKey \n");
                                Atend.Base.Equipment.EPhuseKey SelectedEquipEPhuseKey = Atend.Base.Equipment.EPhuseKey.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEPhuseKey.Code != -1)
                                {
                                    //Atend.Base.Equipment.EPhuseKey answer = Atend.Base.Equipment.EPhuseKey.AccessSelectByXCode(SelectedEquipEPhuseKey.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEPhuseKey.Code == 0)
                                    {
                                        if (SelectedEquipEPhuseKey.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEPhuseKey.Code;
                                            if (!SelectedEquipEPhuseKey.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX PhuseKey  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EPhuseKey ServerSelectedPhuseKey = Atend.Base.Equipment.EPhuseKey.ServerSelectByCode(SelectedEquipEPhuseKey.Code, _connection, _transaction);
                                        if (ServerSelectedPhuseKey.Code != -1)
                                        {
                                            if (SelectedEquipEPhuseKey.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEPhuseKey.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*PhuseKey:There Is No Row on Server For Upadte " + dr["TableType"].ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.PhusePole:
                                ed.WriteMessage("Sub Is : PhusePole \n");
                                Atend.Base.Equipment.EPhusePole SelectedEquipEPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEPhusePole.Code != -1)
                                {
                                    //Atend.Base.Equipment.EPhusePole answer = Atend.Base.Equipment.EPhusePole.AccessSelectByXCode(SelectedEquipEPhusePole.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEPhusePole.Code == 0)
                                    {
                                        if (SelectedEquipEPhusePole.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEPhusePole.Code;
                                            if (!SelectedEquipEPhusePole.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX  PhusePole Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EPhusePole ServerSelectedPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(SelectedEquipEPhusePole.Code, _connection, _transaction);
                                        if (ServerSelectedPhusePole.Code != -1)
                                        {
                                            if (SelectedEquipEPhusePole.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEPhusePole.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*PhusePole:There Is No Row on Server For Upadte " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Pole:
                                ed.WriteMessage("Sub Is : Pole \n");
                                Atend.Base.Equipment.EPole SelectedEquipEPole = Atend.Base.Equipment.EPole.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEPole.Code != -1)
                                {
                                    //Atend.Base.Equipment.EPole answer = Atend.Base.Equipment.EPole.AccessSelectByXCode(SelectedEquipEPole.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEPole.Code == 0)
                                    {
                                        if (SelectedEquipEPole.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEPole.Code;
                                            if (!SelectedEquipEPole.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX  Pole Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EPole ServerSelectedPole = Atend.Base.Equipment.EPole.ServerSelectByCode(SelectedEquipEPole.Code, _connection, _transaction);
                                        if (ServerSelectedPole.Code != -1)
                                        {
                                            if (SelectedEquipEPole.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEPole.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Pole:There Is No Row on Server For Upadte " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;


                            //case Atend.Control.Enum.ProductType.PoleTip:
                            //    ed.WriteMessage("Sub Is : PoleTip \n");
                            //    Atend.Base.Equipment.EPoleTip SelectedEquipEPoleTip = Atend.Base.Equipment.EPoleTip.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                            //    if (SelectedEquipEPoleTip.Code != -1)
                            //    {

                            //        Atend.Base.Equipment.EPole _ePole = Atend.Base.Equipment.EPole.SelectByXCodeForDesign(SelectedEquipEPoleTip.PoleXCode, LocalConnection, LocalTransaction);
                            //        if (_ePole.Code != -1)
                            //        {
                            //            if (_ePole.Code == 0)
                            //            {
                            //                if (_ePole.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = _ePole.Code;
                            //                    if (!_ePole.UpdateX(LocalTransaction, LocalConnection))
                            //                        throw new System.Exception("epole.Updatex Failed");
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":POle");

                            //                }

                            //            }
                            //            else
                            //            {
                            //                Atend.Base.Equipment.EPole _ServerPole = Atend.Base.Equipment.EPole.ServerSelectByCode(_ePole.Code, _connection, _transaction);
                            //                if (_ePole.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = _ePole.Code;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("_epole serverUpdate Failed in PoleTip");

                            //                }
                            //            }
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack of data in poleTip:Pole");
                            //        }

                            //        Atend.Base.Equipment.EHalter _eHalter = Atend.Base.Equipment.EHalter.SelectByXCodeForDesign(SelectedEquipEPoleTip.HalterXID,LocalConnection,LocalTransaction);
                            //        if (_eHalter.Code != -1)
                            //        {

                            //            if (_eHalter.Code == 0)
                            //            {

                            //                if (_eHalter.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = _eHalter.Code;
                            //                    if (!_eHalter.UpdateX(LocalTransaction, LocalConnection))
                            //                        throw new System.Exception("eHalter Updatex Failed in PoleTip");
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Halter");

                            //                }
                            //            }
                            //            else
                            //            {
                            //                Atend.Base.Equipment.EHalter ServerHalter = Atend.Base.Equipment.EHalter.ServerSelectByCode(_eHalter.Code, _connection, _transaction);
                            //                if (_eHalter.Code != -1)
                            //                {
                            //                    if (_eHalter.ServerUpdate(_transaction , _connection, true, false, LocalTransaction, LocalConnection))
                            //                    {
                            //                        NewCode = _eHalter.Code;
                            //                    }
                            //                    else
                            //                    {
                            //                        throw new System.Exception("Ehalter ServerUpdate Failed in Poletip");
                            //                    }
                            //                }
                            //            }
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack of data in poleTip:Halter");
                            //        }

                            //        SelectedEquipEPoleTip.PoleCode = _ePole.Code;
                            //        SelectedEquipEPoleTip.HalterID = _eHalter.Code;

                            //        if (SelectedEquipEPoleTip.Code == 0)
                            //        {
                            //            if (SelectedEquipEPoleTip.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //            {
                            //                NewCode = SelectedEquipEPoleTip.Code;
                            //                if (!SelectedEquipEPoleTip.UpdateX(LocalTransaction, LocalConnection))
                            //                    throw new System.Exception("SelectedEquipEPoleTip Updatex Failed in Poletip");
                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //            }
                            //        }
                            //        else
                            //        {
                            //            Atend.Base.Equipment.EPoleTip ServerPoleTip = Atend.Base.Equipment.EPoleTip.ServerSelectByCode(SelectedEquipEPoleTip.Code, _connection, _transaction);
                            //            if (ServerPoleTip.Code != -1)
                            //            {
                            //                if (SelectedEquipEPoleTip.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = SelectedEquipEPoleTip.Code;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("SelectedEquipEPoleTip Server Update in PoleTip");
                            //                }
                            //            }
                            //        }


                            //        //}
                            //    }
                            //    else
                            //    {
                            //        throw new System.Exception("Lack Of Data In PoleTip");
                            //    }
                            //    break;



                            ////case Atend.Control.Enum.ProductType.PoleTip:
                            ////    ed.WriteMessage("Sub Is : PoleTip \n");
                            ////    Atend.Base.Equipment.EPoleTip SelectedEquipEPoleTip = Atend.Base.Equipment.EPoleTip.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                            ////    if (SelectedEquipEPoleTip.Code != -1)
                            ////    {
                            ////        //Atend.Base.Equipment.EPoleTip answer = Atend.Base.Equipment.EPoleTip.AccessSelectByXCode(SelectedEquipEPoleTip.XCode, _transaction, _connection);
                            ////        //if (answer.Code != -1)
                            ////        //{
                            ////        //    NewCode = answer.Code;
                            ////        //}
                            ////        //else
                            ////        //{

                            ////        Atend.Base.Equipment.EPole _ePole = Atend.Base.Equipment.EPole.SelectByXCode(SelectedEquipEPoleTip.PoleXCode);
                            ////        if (_ePole.Code != -1)
                            ////        {
                            ////            if (!_ePole.AccessInsert(_transaction, _connection, true, true))
                            ////            {
                            ////                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":POle");
                            ////            }
                            ////        }
                            ////        else
                            ////        {
                            ////            throw new System.Exception("Lack of data in poleTip:Pole");
                            ////        }

                            ////        Atend.Base.Equipment.EHalter _eHalter = Atend.Base.Equipment.EHalter.SelectByXCode(SelectedEquipEPoleTip.HalterXID);
                            ////        if (_eHalter.Code != -1)
                            ////        {
                            ////            if (!_eHalter.AccessInsert(_transaction, _connection, true, true))
                            ////            {
                            ////                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Halter");
                            ////            }
                            ////        }
                            ////        else
                            ////        {
                            ////            throw new System.Exception("Lack of data in poleTip:Halter");
                            ////        }

                            ////        SelectedEquipEPoleTip.PoleCode = _ePole.Code;
                            ////        SelectedEquipEPoleTip.HalterID = _eHalter.Code;
                            ////        if (SelectedEquipEPoleTip.AccessInsert(_transaction, _connection, true, false))
                            ////        {
                            ////            NewCode = SelectedEquipEPoleTip.Code;
                            ////        }
                            ////        else
                            ////        {
                            ////            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            ////        }



                            ////        //}
                            ////    }
                            ////    break;
                            case Atend.Control.Enum.ProductType.Prop:
                                ed.WriteMessage("Sub Is : Prop \n");
                                Atend.Base.Equipment.EProp SelectedEquipEProp = Atend.Base.Equipment.EProp.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEProp.Code != -1)
                                {
                                    //Atend.Base.Equipment.EProp answer = Atend.Base.Equipment.EProp.AccessSelectByXCode(SelectedEquipEProp.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEProp.Code == 0)
                                    {
                                        if (SelectedEquipEProp.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEProp.Code;
                                            if (!SelectedEquipEProp.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX  Prop Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("container error in Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EProp ServerSelectedProp = Atend.Base.Equipment.EProp.ServerSelectByCode(SelectedEquipEProp.Code, _connection, _transaction);
                                        if (ServerSelectedProp.Code != -1)
                                        {
                                            if (SelectedEquipEProp.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEProp.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("container error in Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Prop:There Is No Row on Server For Upadte " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;

                            case Atend.Control.Enum.ProductType.PT:
                                ed.WriteMessage("Sub Is : PT \n");
                                Atend.Base.Equipment.EPT SelectedEquipEPT = Atend.Base.Equipment.EPT.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEPT.Code != -1)
                                {
                                    //Atend.Base.Equipment.EPT answer = Atend.Base.Equipment.EPT.AccessSelectByXCode(SelectedEquipEPT.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEPT.Code == 0)
                                    {
                                        if (SelectedEquipEPT.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEPT.Code;
                                            if (!SelectedEquipEPT.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX PT  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EPT ServerSelectedPT = Atend.Base.Equipment.EPT.ServerSelectByCode(SelectedEquipEPT.Code, _connection, _transaction);
                                        if (ServerSelectedPT.Code != -1)
                                        {
                                            if (SelectedEquipEPT.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEPT.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*PT:There Is No Row on Server For Upadte " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;



                            case Atend.Control.Enum.ProductType.Ramp:
                                ed.WriteMessage("Sub Is : Ramp \n");
                                Atend.Base.Equipment.ERamp SelectedEquipERamp = Atend.Base.Equipment.ERamp.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipERamp.Code != -1)
                                {
                                    //Atend.Base.Equipment.ERamp answer = Atend.Base.Equipment.ERamp.AccessSelectByXCode(SelectedEquipERamp.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipERamp.Code == 0)
                                    {
                                        ed.WriteMessage("Go For ServerInsert\n");
                                        if (SelectedEquipERamp.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipERamp.Code;
                                            if (!SelectedEquipERamp.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX Ramp  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        ed.WriteMessage("Go For ServerUpdate\n");

                                        Atend.Base.Equipment.ERamp ServerSelectedRamp = Atend.Base.Equipment.ERamp.ServerSelectByCode(SelectedEquipERamp.Code, _connection, _transaction);
                                        if (ServerSelectedRamp.Code != -1)
                                        {
                                            if (SelectedEquipERamp.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipERamp.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Ramp:There Is No Row on Server For Upadte " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of Data In Ramp");
                                }
                                break;


                            case Atend.Control.Enum.ProductType.ReCloser:
                                ed.WriteMessage("Sub Is : ReCloser \n");
                                Atend.Base.Equipment.EReCloser SelectedEquipEReCloser = Atend.Base.Equipment.EReCloser.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEReCloser.Code != -1)
                                {
                                    //Atend.Base.Equipment.EReCloser answer = Atend.Base.Equipment.EReCloser.AccessSelectByXCode(SelectedEquipEReCloser.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEReCloser.Code == 0)
                                    {
                                        if (SelectedEquipEReCloser.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEReCloser.Code;
                                            if (!SelectedEquipEReCloser.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX ReCloser  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EReCloser ServerSelectedReCloser = Atend.Base.Equipment.EReCloser.ServerSelectByCode(SelectedEquipEReCloser.Code, _connection, _transaction);
                                        if (ServerSelectedReCloser.Code != -1)
                                        {
                                            if (SelectedEquipEReCloser.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEReCloser.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*ReCloser:There Is No Row on Server For Upadte " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;

                            case Atend.Control.Enum.ProductType.Rod:
                                ed.WriteMessage("Sub Is : Rod \n");
                                Atend.Base.Equipment.ERod SelectedEquipERod = Atend.Base.Equipment.ERod.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipERod.Code != -1)
                                {
                                    //Atend.Base.Equipment.ERod answer = Atend.Base.Equipment.ERod.AccessSelectByXCode(SelectedEquipERod.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipERod.Code == 0)
                                    {
                                        if (SelectedEquipERod.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipERod.Code;
                                            if (!SelectedEquipERod.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX Rod  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.ERod ServerSelectedRod = Atend.Base.Equipment.ERod.ServerSelectByCode(SelectedEquipERod.Code, _connection, _transaction);
                                        if (ServerSelectedRod.Code != -1)
                                        {
                                            if (SelectedEquipERod.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipERod.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Rod:There Is No Row on Server For Upadte " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;

                            case Atend.Control.Enum.ProductType.SectionLizer:
                                ed.WriteMessage("Sub Is : SectionLizer \n");
                                Atend.Base.Equipment.ESectionLizer SelectedEquipESectionLizer = Atend.Base.Equipment.ESectionLizer.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipESectionLizer.Code != -1)
                                {
                                    //Atend.Base.Equipment.ESectionLizer answer = Atend.Base.Equipment.ESectionLizer.AccessSelectByXCode(SelectedEquipESectionLizer.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipESectionLizer.Code == 0)
                                    {
                                        if (SelectedEquipESectionLizer.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipESectionLizer.Code;
                                            if (!SelectedEquipESectionLizer.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX   Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.ESectionLizer ServerSelectedSectionLizer = Atend.Base.Equipment.ESectionLizer.ServerSelectByCode(SelectedEquipESectionLizer.Code, _connection, _transaction);
                                        if (ServerSelectedSectionLizer.Code != -1)
                                        {
                                            if (SelectedEquipESectionLizer.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipESectionLizer.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*SectionLizer:There Is No Row on Server For Upadte " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;

                            case Atend.Control.Enum.ProductType.SelfKeeper:
                                ed.WriteMessage("Sub Is : SelfKeeper \n");
                                Atend.Base.Equipment.ESelfKeeper SelectedEquipESelfKeeper = Atend.Base.Equipment.ESelfKeeper.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipESelfKeeper.Code != -1)
                                {
                                    //Atend.Base.Equipment.ESelfKeeper answer = Atend.Base.Equipment.ESelfKeeper.AccessSelectByXCode(SelectedEquipESelfKeeper.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipESelfKeeper.Code == 0)
                                    {
                                        if (SelectedEquipESelfKeeper.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipESelfKeeper.Code;
                                            if (!SelectedEquipESelfKeeper.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX SelfKeeper  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.ESelfKeeper ServerSelectedSelfKeeper = Atend.Base.Equipment.ESelfKeeper.ServerSelectByCode(SelectedEquipESelfKeeper.Code, _connection, _transaction);
                                        if (ServerSelectedSelfKeeper.Code != -1)
                                        {
                                            if (SelectedEquipESelfKeeper.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipESelfKeeper.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*SelfKeeper:There Is No Row on Server For Upadte " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;



                            //case Atend.Control.Enum.ProductType.SelfKeeperTip:
                            //    ed.WriteMessage("Sub Is : SelfkeeperTip \n");

                            //    Atend.Base.Equipment.ESelfKeeperTip SelectedequipESelfKeeperTip = Atend.Base.Equipment.ESelfKeeperTip.SelectByXCodeForDesign(LocalTransaction, LocalConnection, new Guid(dr["XCode"].ToString()));




                            //    if (SelectedequipESelfKeeperTip.Code != -1)
                            //    {

                            //        Atend.Base.Equipment.ESelfKeeper SelectedPhaseSelfKeeper = Atend.Base.Equipment.ESelfKeeper.SelectByXCodeForDesign(SelectedequipESelfKeeperTip.PhaseProductxCode, LocalConnection, LocalTransaction);
                            //        Atend.Base.Equipment.ESelfKeeper SelectedNeutralSelfKeeper = Atend.Base.Equipment.ESelfKeeper.SelectByXCodeForDesign(SelectedequipESelfKeeperTip.NeutralProductxCode, LocalConnection, LocalTransaction);
                            //        Atend.Base.Equipment.ESelfKeeper SelectedNightSelfKeeper = Atend.Base.Equipment.ESelfKeeper.SelectByXCodeForDesign(SelectedequipESelfKeeperTip.NightProductxCode, LocalConnection, LocalTransaction);

                            //        if (SelectedPhaseSelfKeeper.Code != -1)
                            //        {
                            //            if (SelectedPhaseSelfKeeper.Code == 0)
                            //            {
                            //                if (SelectedPhaseSelfKeeper.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = SelectedPhaseSelfKeeper.Code;
                            //                    if (!SelectedPhaseSelfKeeper.UpdateX(LocalTransaction, LocalConnection))
                            //                        throw new System.Exception("SelectedPhaseSelfKeeper Updatex Failed");
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("SelfKeeper ServerInsert failed in SelfTip");
                            //                }
                            //            }
                            //            else
                            //            {
                            //                Atend.Base.Equipment.ESelfKeeper ServerSelf = Atend.Base.Equipment.ESelfKeeper.ServerSelectByCode(SelectedPhaseSelfKeeper.Code, _connection, _transaction);
                            //                if (ServerSelf.Code != -1)
                            //                {
                            //                    if (SelectedPhaseSelfKeeper.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                    {
                            //                        NewCode = SelectedPhaseSelfKeeper.Code;
                            //                    }
                            //                    else
                            //                    {
                            //                        throw new System.Exception("PhaseSelf ServerUpdate Failed in SelfTip");
                            //                    }
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("There Is No Row On Server in SelfPhase in SelfTip");
                            //                }
                            //            }

                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of data In Phase Self in Self Tip");
                            //        }




                            //        if (SelectedNightSelfKeeper.Code != -1)
                            //        {
                            //            if (SelectedNightSelfKeeper.Code == 0)
                            //            {
                            //                if (SelectedNightSelfKeeper.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = SelectedNightSelfKeeper.Code;
                            //                    if (!SelectedNightSelfKeeper.UpdateX(LocalTransaction, LocalConnection))
                            //                        throw new System.Exception("SelectedNightSelfKeeper Updatex Failed");
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("NightSelf ServerInsert failed in SelfTip");
                            //                }
                            //            }
                            //            else
                            //            {
                            //                Atend.Base.Equipment.ESelfKeeper ServerNightSelf = Atend.Base.Equipment.ESelfKeeper.ServerSelectByCode(SelectedNightSelfKeeper.Code, _connection, _transaction);
                            //                if (ServerNightSelf.Code != -1)
                            //                {
                            //                    if (SelectedNightSelfKeeper.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                    {
                            //                        NewCode = SelectedNightSelfKeeper.Code;
                            //                    }
                            //                    else
                            //                    {
                            //                        throw new System.Exception("NightCond ServerUpdate Failed in CondTip");
                            //                    }
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("There Is No Row On Server in CondNight in CondTip");
                            //                }
                            //            }

                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of data In Night Conductor in Conductor Tip");
                            //        }




                            //        if (SelectedNeutralSelfKeeper.Code != -1)
                            //        {
                            //            if (SelectedNeutralSelfKeeper.Code == 0)
                            //            {
                            //                if (SelectedNeutralSelfKeeper.ServerInsert(_transaction, _connection , true, false, LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = SelectedNeutralSelfKeeper.Code;
                            //                    if (!SelectedNeutralSelfKeeper.UpdateX(LocalTransaction, LocalConnection))
                            //                        throw new System.Exception("SelectedNeutralSelfKeeper Updatex Failed");
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("NeutralConductor ServerInsert failed in CondTip");
                            //                }
                            //            }
                            //            else
                            //            {
                            //                Atend.Base.Equipment.ESelfKeeper ServerNeutralSelf = Atend.Base.Equipment.ESelfKeeper.ServerSelectByCode(SelectedNeutralSelfKeeper.Code, _connection, _transaction);
                            //                if (ServerNeutralSelf.Code != -1)
                            //                {
                            //                    if (SelectedNeutralSelfKeeper.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                            //                    {
                            //                        NewCode = SelectedNeutralSelfKeeper.Code;
                            //                    }
                            //                    else
                            //                    {
                            //                        throw new System.Exception("NeutralCond ServerUpdate Failed in CondTip");
                            //                    }
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("There Is No Row On Server in CondNeutral in CondTip");
                            //                }
                            //            }

                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of data In PNetral Conductor in Conductor Tip");
                            //        }


                            //        SelectedequipESelfKeeperTip.PhaseProductCode = SelectedPhaseSelfKeeper.Code;
                            //        SelectedequipESelfKeeperTip.NeutralProductCode = SelectedNeutralSelfKeeper.Code;
                            //        SelectedequipESelfKeeperTip.NightProductCode = SelectedNightSelfKeeper.Code;
                            //        if (SelectedequipESelfKeeperTip.Code == 0)
                            //        {
                            //            if (SelectedequipESelfKeeperTip.ServerInsert(_transaction, _connection))//, true, true, LocalTransaction, LocalConnection))
                            //            {
                            //                NewCode = SelectedequipESelfKeeperTip.Code;
                            //                if (!SelectedequipESelfKeeperTip.UpdateX(LocalTransaction, LocalConnection))
                            //                {
                            //                    throw new System.Exception("UpdateX    ConductorTip     Failed");
                            //                }
                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("ServerInsert failed" + Type.ToString());
                            //            }
                            //        }
                            //        else
                            //        {
                            //            Atend.Base.Equipment.EConductor ServerSelectedSelfKeeper = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedequipESelfKeeperTip.Code, _connection, _transaction);
                            //            if (ServerSelectedSelfKeeper.Code != -1)
                            //            {
                            //                if (SelectedequipESelfKeeperTip.ServerUpdate(_transaction, _connection))//, true, false, LocalTransaction, LocalConnection))
                            //                {
                            //                    NewCode = SelectedequipESelfKeeperTip.Code;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("ServerUpdate failed" + Type.ToString());
                            //                }
                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("Conductor:There Is No Row On Server For Update " + Type.ToString());
                            //            }
                            //        }
                            //        //}
                            //    }
                            //    else
                            //    {
                            //        ed.WriteMessage(Type.ToString() + " does not exist \n");
                            //    }
                            //    break;


                            //case Atend.Control.Enum.ProductType.SelfKeeperTip:
                            //    ed.WriteMessage("Sub Is : SelfKeeperTip \n");
                            //    Atend.Base.Equipment.ESelfKeeperTip SelectedEquipESelfKeeperTip = Atend.Base.Equipment.ESelfKeeperTip.SelectByXCode(new Guid(dr["XCode"].ToString()));
                            //    if (SelectedEquipESelfKeeperTip.Code != -1)
                            //    {
                            //        //Atend.Base.Equipment.ESelfKeeperTip answer = Atend.Base.Equipment.ESelfKeeperTip.AccessSelectByXCode(SelectedEquipESelfKeeperTip.XCode, _transaction, _connection);
                            //        //if (answer.Code != -1)
                            //        //{
                            //        //    NewCode = answer.Code;
                            //        //}
                            //        //else
                            //        //{
                            //        if (SelectedEquipESelfKeeperTip.AccessInsert(_transaction, _connection))
                            //        {
                            //            NewCode = SelectedEquipESelfKeeperTip.Code;
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //        }
                            //        //}
                            //    }
                            //    break;

                            case Atend.Control.Enum.ProductType.StreetBox:
                                ed.WriteMessage("Sub Is : StreetBox \n");
                                Atend.Base.Equipment.EStreetBox SelectedEquipEStreetBox = Atend.Base.Equipment.EStreetBox.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipEStreetBox.Code != -1)
                                {
                                    //Atend.Base.Equipment.EStreetBox answer = Atend.Base.Equipment.EStreetBox.AccessSelectByXCode(SelectedEquipEStreetBox.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipEStreetBox.Code == 0)
                                    {
                                        if (SelectedEquipEStreetBox.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEStreetBox.Code;
                                            if (!SelectedEquipEStreetBox.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX StreetBox  Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server InSert Failed " + dr["TableType"].ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EStreetBox ServerSelectedStreetBox = Atend.Base.Equipment.EStreetBox.ServerSelectByCode(SelectedEquipEStreetBox.Code, _connection, _transaction);
                                        if (ServerSelectedStreetBox.Code != -1)
                                        {
                                            if (SelectedEquipEStreetBox.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipEStreetBox.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update Failed " + dr["TableType"].ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*StreetBox:There is no row on server for update " + dr["TableType"].ToString());
                                        }

                                    }
                                    //if (SelectedEquipEStreetBox.ServerInsert(_transaction, _connection, true, false))
                                    //{
                                    //    NewCode = SelectedEquipEStreetBox.Code;
                                    DataTable StreetBoxPhuses = Atend.Base.Equipment.EStreetBoxPhuse.SelectByStreetBoxXCode(new Guid(dr["XCode"].ToString()), LocalTransaction, LocalConnection);
                                    if (!Atend.Base.Equipment.EStreetBoxPhuse.Delete(_transaction, _connection, SelectedEquipEStreetBox.Code))
                                    {
                                        throw new System.Exception("error in Delete StreetBoxPhuse ");
                                    }

                                    foreach (DataRow StreetBoxPhuse in StreetBoxPhuses.Rows)
                                    {
                                        //ed.WriteMessage("110\n");
                                        Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.SelectByXCodeForDesign(new Guid(StreetBoxPhuse["PhuseXCode"].ToString()), LocalConnection, LocalTransaction);
                                        if (_EPhuse.Code != -1)
                                        {
                                            //ed.WriteMessage("111\n");
                                            Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCodeForDesign(_EPhuse.PhusePoleXCode, LocalConnection, LocalTransaction);
                                            if (_EPhusePole.Code != -1)
                                            {
                                                //ed.WriteMessage("112\n");
                                                if (_EPhusePole.Code == 0)
                                                {
                                                    if (!_EPhusePole.ServerInsert(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                                    {
                                                        throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":PhusePole");
                                                    }
                                                    else
                                                    {
                                                        if (!_EPhusePole.UpdateX(LocalTransaction, LocalConnection))
                                                        {
                                                            throw new System.Exception("UpdateX PhusePole  Failed");
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    Atend.Base.Equipment.EPhusePole ServerSelectedPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(_EPhusePole.Code, _connection, _transaction);
                                                    if (ServerSelectedPhusePole.Code != -1)
                                                    {
                                                        if (!_EPhusePole.ServerUpdate(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                                        {
                                                            throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":PhusePole");
                                                        }
                                                    }
                                                    else
                                                    {
                                                        throw new System.Exception("*PhusePoleINStreetBox:There Is No Row on Server For Update PhusePole in StreetBox");
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                throw new System.Exception("Lack of data in StreetBox:Phuse:PhusePole");
                                            }
                                            //ed.WriteMessage("streetbox was :{0} \n", _EPhusePole.Code);
                                            _EPhuse.PhusePoleCode = _EPhusePole.Code;
                                            if (_EPhuse.Code == 0)
                                            {
                                                if (!_EPhuse.ServerInsert(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                                                }
                                                else
                                                {
                                                    if (!_EPhuse.UpdateX(LocalTransaction, LocalConnection))
                                                    {
                                                        throw new System.Exception("UpdateX Phuse  Failed");
                                                    }
                                                }
                                            }
                                            else
                                            {

                                                Atend.Base.Equipment.EPhuse ServerSelectedPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(_EPhuse.Code, _connection, _transaction);
                                                if (ServerSelectedPhuse.Code != -1)
                                                {
                                                    if (!_EPhuse.ServerUpdate(_transaction, _connection, true, true, LocalTransaction, LocalConnection))
                                                    {
                                                        throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                                                    }
                                                }
                                                else
                                                {
                                                    throw new System.Exception("*PhuseINStreetBox:There is no row on server for update " + dr["TableType"].ToString());
                                                }
                                            }

                                            Atend.Base.Equipment.EStreetBoxPhuse _EStreetBoxPhuse = Atend.Base.Equipment.EStreetBoxPhuse.SelectByXCodeForDesign(new Guid(StreetBoxPhuse["Xcode"].ToString()), LocalConnection, LocalTransaction);
                                            if (_EStreetBoxPhuse.Code != -1)
                                            {
                                                _EStreetBoxPhuse.PhuseCode = _EPhuse.Code;
                                                _EStreetBoxPhuse.StreetBoxCode = SelectedEquipEStreetBox.Code;
                                                //if (_EStreetBoxPhuse.Code == 0)
                                                //{
                                                if (!_EStreetBoxPhuse.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":StreetBoxPhuse");
                                                }
                                                else
                                                {
                                                    if (!_EStreetBoxPhuse.UpdateX(LocalTransaction, LocalConnection))
                                                    {
                                                        throw new System.Exception("UpdateX StreetBoxPhuse  Failed");
                                                    }
                                                }
                                                //}
                                                //else
                                                //{
                                                //    Atend.Base.Equipment.EStreetBoxPhuse ServerSelectedStreetBoxPhuse = Atend.Base.Equipment.EStreetBoxPhuse.ServerSelectByCode(_EStreetBoxPhuse.Code, _connection, _transaction);
                                                //    if (ServerSelectedStreetBoxPhuse.Code != -1)
                                                //    {

                                                //        if (!_EStreetBoxPhuse.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                                //        {
                                                //            throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":StreetBoxPhuse");
                                                //        }
                                                //    }
                                                //    else
                                                //    {
                                                //        throw new System.Exception("*StreetBoxPhuseINStreetBox:There is no row on server for update " + dr["TableType"].ToString());
                                                //    }
                                                //}
                                            }
                                            else
                                            {
                                                throw new System.Exception("Lack of data in StreetBox:StreetBoxPhuse");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in StreetBox:Phuse");
                                        }
                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of DAta in StreetBox");
                                }
                                //}
                                break;
                            case Atend.Control.Enum.ProductType.Transformer:
                                ed.WriteMessage("Sub Is : Transformer \n");
                                Atend.Base.Equipment.ETransformer SelectedEquipETransformer = Atend.Base.Equipment.ETransformer.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                if (SelectedEquipETransformer.Code != -1)
                                {
                                    //Atend.Base.Equipment.ETransformer answer = Atend.Base.Equipment.ETransformer.AccessSelectByXCode(SelectedEquipETransformer.XCode, _transaction, _connection);
                                    //if (answer.Code != -1)
                                    //{
                                    //    NewCode = answer.Code;
                                    //}
                                    //else
                                    //{
                                    if (SelectedEquipETransformer.Code == 0)
                                    {
                                        if (SelectedEquipETransformer.ServerInsert(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipETransformer.Code;
                                            if (!SelectedEquipETransformer.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX   Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.ETransformer ServerSelectedTransform = Atend.Base.Equipment.ETransformer.ServerSelectByCode(SelectedEquipETransformer.Code, _connection, _transaction);
                                        if (ServerSelectedTransform.Code != -1)
                                        {
                                            if (SelectedEquipETransformer.ServerUpdate(_transaction, _connection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedEquipETransformer.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("*Transformer:There is no row on server for update " + dr["TableType"].ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;

                        }
                        #endregion
                        if (NewCode != 0)
                        {
                            //ed.WriteMessage("NewCode:{0},\n", NewCode);
                            Atend.Base.Equipment.EProductPackage _EProductPackage = new EProductPackage();
                            //_EProductPackage.ContainerPackageCode = SelectedContainer.code;
                            _EProductPackage.ContainerPackageCode = ServerContainer.Code;
                            _EProductPackage.ProductCode = NewCode;
                            _EProductPackage.Count = Convert.ToInt32(dr["Count"]);
                            _EProductPackage.TableType = Convert.ToInt16(dr["TableType"]);
                            if (!_EProductPackage.Insert(_transaction, _connection))
                            {
                                throw new System.Exception("_EProductPackage.ServerInsert failed");
                            }

                            if (!SentFromLocalToServer(new Guid(dr["XCode"].ToString()), Convert.ToInt32(dr["TableType"]), NewCode, _transaction, _connection, LocalTransaction, LocalConnection))
                            {
                                throw new System.Exception("SentFromLocalToServer inside failed");
                            }
                        }
                        else
                        {
                            //throw new System.Exception("Pro was not inserted or Pro was not in switch");
                        }
                    }
                    //}
                    //else
                    //{
                    //    throw new System.Exception("SelectedContainer.AccessInsert failed");
                    //}
                }
                else
                {
                    ed.WriteMessage("No container Package was found\n");
                    //No container Package was found
                }
            }
            catch (System.Exception ex)
            {
                ed.WriteMessage("ERROR EContainerPackage.SentFromLocalToServer :{0} \n", ex.Message);
                return false;
            }

            return true;
        }


        public static bool SentFromServerToLocal(int Code, int Type, Guid ContainerCode, SqlTransaction _transaction, SqlConnection _connection, SqlTransaction LocalTransaction, SqlConnection LocalConnection)
        {
            Editor ed = Application.DocumentManager.MdiActiveDocument.Editor;
            ed.WriteMessage("parent is : {0} \n", Type);
            try
            {
                Atend.Base.Equipment.EContainerPackage SelectedContainer = Atend.Base.Equipment.EContainerPackage.SelectByContainerXCodeAndType(LocalTransaction, LocalConnection, ContainerCode, Type);
                Atend.Base.Equipment.EContainerPackage ServerContainer = Atend.Base.Equipment.EContainerPackage.selectByContainerCodeAndType(_transaction, _connection, Code, Type);
                if (ServerContainer.ContainerCode != -1)
                {
                    ed.WriteMessage("container was found,ContainerCode={0} \n ", ContainerCode);

                    int LastContainerPackageCode = ServerContainer.Code;
                    //ServerContainer.XCode = ContainerCode;
                    SelectedContainer.Type = ServerContainer.Type;
                    SelectedContainer.XCode = ContainerCode;
                    ed.WriteMessage("****SelectedContainer.Code={0}\n", SelectedContainer.Code);
                    if (SelectedContainer.Code == 0)
                    {
                        if (!SelectedContainer.InsertX(LocalTransaction, LocalConnection))
                            throw new System.Exception("SelectedContainer.ServerInsert failed");
                    }
                    else
                    {
                        if (!Atend.Base.Equipment.EProductPackage.DeleteX(LocalTransaction, LocalConnection, SelectedContainer.Code))
                            throw new System.Exception("Delete ProductPackage Failed");
                    }
                    //if (SelectedContainer.Insert(_transaction, _connection))
                    //{
                    DataTable Products = Atend.Base.Equipment.EProductPackage.SelectByContainerPackageCodeForLocal(LastContainerPackageCode, _transaction, _connection);
                    ed.WriteMessage("___SubProductsCount:{0},Type:{1}\n", Products.Rows.Count, Type);
                    foreach (DataRow dr in Products.Rows)
                    {
                        //switch access insert
                        Guid NewCode = Guid.Empty;
                        //ed.WriteMessage("~~~~~ P T : {0} ~~~~~~\n", Convert.ToInt32(dr["TableType"]));
                        #region Switch
                        switch ((Atend.Control.Enum.ProductType)Convert.ToInt32(dr["TableType"]))
                        {
                            case Atend.Control.Enum.ProductType.AirPost:
                                ed.WriteMessage("Sub Is : AirPost \n");
                                Atend.Base.Equipment.EAirPost SelectedEquipEAirPost = Atend.Base.Equipment.EAirPost.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EAirPost LocalSelectedEquipAirPost = Atend.Base.Equipment.EAirPost.SelectByCodeForLocal(SelectedEquipEAirPost.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipEAirPost.Code != -1)
                                {
                                    if (LocalSelectedEquipAirPost.Code == -1)
                                    {
                                        if (SelectedEquipEAirPost.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEAirPost.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {

                                        SelectedEquipEAirPost.XCode = LocalSelectedEquipAirPost.XCode;
                                        if (SelectedEquipEAirPost.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEAirPost.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                                }
                                break;

                            case Atend.Control.Enum.ProductType.Arm:
                                ed.WriteMessage("Sub Is : Arm \n");
                                Atend.Base.Equipment.EArm SelectedEquipEArm = Atend.Base.Equipment.EArm.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EArm LocalSelectedArm = Atend.Base.Equipment.EArm.SelectByCodeForLocal(SelectedEquipEArm.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipEArm.Code != -1)
                                {

                                    if (LocalSelectedArm.Code == -1)
                                    {
                                        if (SelectedEquipEArm.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEArm.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("container error in LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEArm.XCode = LocalSelectedArm.XCode;
                                        if (SelectedEquipEArm.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEArm.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("container error in ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.AuoKey3p:
                                ed.WriteMessage("Sub Is : AuoKey3p \n");

                                Atend.Base.Equipment.EAutoKey_3p SelectedEquipEAutoKey_3p = Atend.Base.Equipment.EAutoKey_3p.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EAutoKey_3p LocalSelectedAutokey = Atend.Base.Equipment.EAutoKey_3p.SelectByCodeForLocal(SelectedEquipEAutoKey_3p.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipEAutoKey_3p.Code != -1)
                                {

                                    if (LocalSelectedAutokey.Code == -1)
                                    {
                                        if (SelectedEquipEAutoKey_3p.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEAutoKey_3p.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEAutoKey_3p.XCode = LocalSelectedAutokey.XCode;
                                        if (SelectedEquipEAutoKey_3p.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEAutoKey_3p.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }


                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Breaker:
                                ed.WriteMessage("Sub Is : Breaker \n");
                                Atend.Base.Equipment.EBreaker SelectedEquipEBreaker = Atend.Base.Equipment.EBreaker.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EBreaker LocalSelectedBreaker = Atend.Base.Equipment.EBreaker.SelectByCodeForLocal(SelectedEquipEBreaker.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEBreaker.Code != -1)
                                {

                                    if (LocalSelectedBreaker.Code == -1)
                                    {
                                        if (SelectedEquipEBreaker.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEBreaker.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEBreaker.XCode = LocalSelectedBreaker.XCode;
                                        if (SelectedEquipEBreaker.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEBreaker.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Bus:
                                ed.WriteMessage("Sub Is : Bus \n");
                                Atend.Base.Equipment.EBus SelectedEquipEBus = Atend.Base.Equipment.EBus.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EBus LocalSelectedBus = Atend.Base.Equipment.EBus.SelectByCodeForLocal(SelectedEquipEBus.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEBus.Code != -1)
                                {

                                    if (LocalSelectedBus.Code == -1)
                                    {
                                        if (SelectedEquipEBus.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEBus.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEBus.XCode = LocalSelectedBus.XCode;

                                        if (SelectedEquipEBus.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEBus.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalrUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.CatOut:
                                ed.WriteMessage("Sub Is : CatOut \n");
                                Atend.Base.Equipment.ECatOut SelectedEquipECatOut = Atend.Base.Equipment.ECatOut.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ECatOut LocalSelectedCatout = Atend.Base.Equipment.ECatOut.SelectByCodeForLocal(SelectedEquipECatOut.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipECatOut.Code != -1)
                                {

                                    if (LocalSelectedCatout.Code == -1)
                                    {
                                        if (SelectedEquipECatOut.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECatOut.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipECatOut.XCode = LocalSelectedCatout.XCode;
                                        if (SelectedEquipECatOut.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECatOut.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Cell:
                                ed.WriteMessage("Sub Is : Cell \n");
                                Atend.Base.Equipment.ECell SelectedEquipECell = Atend.Base.Equipment.ECell.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ECell LocalSelectedCell = Atend.Base.Equipment.ECell.SelectByCodeForLocal(SelectedEquipECell.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipECell.Code != -1)
                                {

                                    if (LocalSelectedCell.Code == -1)
                                    {
                                        if (SelectedEquipECell.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECell.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipECell.XCode = LocalSelectedCell.XCode;
                                        if (SelectedEquipECell.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECell.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Conductor:
                                ed.WriteMessage("Sub Is : Conductor \n");
                                Atend.Base.Equipment.EConductor SelectedEquipEConductor = Atend.Base.Equipment.EConductor.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EConductor LocalSelectedConductor = Atend.Base.Equipment.EConductor.SelectByCodeForLocal(SelectedEquipEConductor.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEConductor.Code != -1)
                                {

                                    if (LocalSelectedConductor.Code == -1)
                                    {
                                        if (SelectedEquipEConductor.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEConductor.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {

                                        SelectedEquipEConductor.XCode = LocalSelectedConductor.XCode;
                                        if (SelectedEquipEConductor.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEConductor.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;

                            //case Atend.Control.Enum.ProductType.ConductorTip:
                            //    ed.WriteMessage("Sub Is : Conductor \n");
                            //    Atend.Base.Equipment.EConductorTip SelectedEquipEConductorTip = Atend.Base.Equipment.EConductorTip.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //    Atend.Base.Equipment.EConductorTip LocalSelectedConductorTip = Atend.Base.Equipment.EConductorTip.SelectByCodeForLocal(SelectedEquipEConductorTip.Code, LocalTransaction, LocalConnection);
                            //    if (SelectedEquipEConductorTip.Code != -1)
                            //    {
                            //        Atend.Base.Equipment.EConductor SelectedEquiphaseCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedEquipEConductorTip.PhaseProductCode, _connection, _transaction);
                            //        Atend.Base.Equipment.EConductor LocalSelectedEquiphaseCond = Atend.Base.Equipment.EConductor.SelectByCodeForLocal(SelectedEquiphaseCond.Code, LocalTransaction, LocalConnection);

                            //        Atend.Base.Equipment.EConductor SelectedEquiNightCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedEquipEConductorTip.NightProductCode, _connection, _transaction);
                            //        Atend.Base.Equipment.EConductor LocalSelectedEquiNightCond = Atend.Base.Equipment.EConductor.SelectByCodeForLocal(SelectedEquiNightCond.Code, LocalTransaction, LocalConnection);

                            //        Atend.Base.Equipment.EConductor SelectedEquiNeutralCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedEquipEConductorTip.NeutralProductCode, _connection, _transaction);
                            //        Atend.Base.Equipment.EConductor LocalSelectedEquiNeutralCond = Atend.Base.Equipment.EConductor.SelectByCodeForLocal(SelectedEquiNeutralCond.Code, LocalTransaction, LocalConnection);

                            //        if (SelectedEquiphaseCond.Code != -1)
                            //        {
                            //            if (LocalSelectedEquiphaseCond.Code == -1)
                            //            {
                            //                if (SelectedEquiphaseCond.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquiphaseCond.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                            //                }
                            //            }
                            //            else
                            //            {

                            //                SelectedEquiphaseCond.XCode = LocalSelectedEquiphaseCond.XCode;
                            //                if (SelectedEquiphaseCond.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquiphaseCond.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                            //                }

                            //            }
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of Data In SelectedEquiphaseCond in CondTip");
                            //        }




                            //        if (SelectedEquiNeutralCond.Code != -1)
                            //        {
                            //            if (LocalSelectedEquiNeutralCond.Code == -1)
                            //            {
                            //                if (SelectedEquiNeutralCond.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquiNeutralCond.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                            //                }
                            //            }
                            //            else
                            //            {

                            //                SelectedEquiNeutralCond.XCode = LocalSelectedEquiNeutralCond.XCode;
                            //                if (SelectedEquiNeutralCond.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquiNeutralCond.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                            //                }

                            //            }
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of Data In SelectedEquiNutralCond in CondTip");
                            //        }




                            //        if (SelectedEquiNightCond.Code != -1)
                            //        {
                            //            if (LocalSelectedEquiNightCond.Code == -1)
                            //            {
                            //                if (SelectedEquiNightCond.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquiNightCond.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                            //                }
                            //            }
                            //            else
                            //            {

                            //                SelectedEquiNightCond.XCode = LocalSelectedEquiNightCond.XCode;
                            //                if (SelectedEquiNightCond.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquiNightCond.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                            //                }

                            //            }
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of Data In SelectedEquiNightCond in CondTip");
                            //        }


                            //        SelectedEquipEConductorTip.NeutralProductXCode = SelectedEquiNeutralCond.XCode;
                            //        SelectedEquipEConductorTip.NightProductXCode = SelectedEquiNightCond.XCode;
                            //        SelectedEquipEConductorTip.PhaseProductXCode = SelectedEquiphaseCond.XCode;



                            //        if (LocalSelectedConductorTip.Code == -1)
                            //        {
                            //            if (SelectedEquipEConductorTip.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //            {
                            //                NewCode = SelectedEquipEConductorTip.XCode;

                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                            //            }
                            //        }
                            //        else
                            //        {

                            //            SelectedEquipEConductorTip.XCode = LocalSelectedConductorTip.XCode;
                            //            if (SelectedEquipEConductorTip.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //            {
                            //                NewCode = SelectedEquipEConductorTip.XCode;
                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                            //            }

                            //        }
                            //        //}
                            //    }
                            //    else
                            //    {
                            //        throw new System.Exception("Lack oF Data In " + Type.ToString());
                            //    }
                            //    break;


                            case Atend.Control.Enum.ProductType.Consol:
                                ed.WriteMessage("Sub Is : Consol \n");
                                //ed.WriteMessage("**XCODE={0}\n", dr["XCode"].ToString());
                                Atend.Base.Equipment.EConsol SelectedEquipEConsol = Atend.Base.Equipment.EConsol.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EConsol LocalSelectedConsol = Atend.Base.Equipment.EConsol.SelectByCodeForLocal(SelectedEquipEConsol.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEConsol.Code != -1)
                                {

                                    if (LocalSelectedConsol.Code == -1)
                                    {
                                        if (SelectedEquipEConsol.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEConsol.XCode;


                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEConsol.XCode = LocalSelectedConsol.XCode;

                                        if (SelectedEquipEConsol.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEConsol.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    // }
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Countor:
                                ed.WriteMessage("Sub Is : Countor \n");
                                Atend.Base.Equipment.ECountor SelectedEquipECountor = Atend.Base.Equipment.ECountor.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ECountor LocalSelectedCountor = Atend.Base.Equipment.ECountor.SelectByCodeForLocal(SelectedEquipECountor.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipECountor.Code != -1)
                                {

                                    if (LocalSelectedCountor.Code == -1)
                                    {
                                        if (SelectedEquipECountor.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECountor.XCode;


                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {

                                        SelectedEquipECountor.XCode = LocalSelectedCountor.XCode;
                                        if (SelectedEquipECountor.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECountor.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }


                                    // }
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.CT:
                                ed.WriteMessage("Sub Is : CT \n");
                                Atend.Base.Equipment.ECT SelectedEquipECT = Atend.Base.Equipment.ECT.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ECT LocalSelectedCT = Atend.Base.Equipment.ECT.SelectByCodeForLocal(SelectedEquipECT.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipECT.Code != -1)
                                {

                                    if (LocalSelectedCT.Code == -1)
                                    {
                                        if (SelectedEquipECT.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECT.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipECT.XCode = LocalSelectedCT.XCode;
                                        if (SelectedEquipECT.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECT.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }

                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.DB:
                                ed.WriteMessage("Sub Is : DB 5\n");
                                Atend.Base.Equipment.EDB SelectedEquipEDB = Atend.Base.Equipment.EDB.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EDB LocalSelectedDB = Atend.Base.Equipment.EDB.SelectByCodeForLocal(SelectedEquipEDB.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEDB.Code != -1)
                                {
                                    if (LocalSelectedDB.Code == -1)
                                    {
                                        if (SelectedEquipEDB.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEDB.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());

                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEDB.XCode = LocalSelectedDB.XCode;
                                        if (SelectedEquipEDB.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEDB.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());

                                        }

                                    }
                                    DataTable DBPhuses = Atend.Base.Equipment.EDBPhuse.SelectByDBCode(Convert.ToInt32(dr["ProductCode"].ToString()), _transaction, _connection);
                                    if (!Atend.Base.Equipment.EDBPhuse.DeleteX(LocalTransaction, LocalConnection, SelectedEquipEDB.XCode))
                                    {
                                        throw new System.Exception("Delete EDBPHUSE in DB ");
                                    }

                                    foreach (DataRow DBPhuse in DBPhuses.Rows)
                                    {
                                        Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(Convert.ToInt32(DBPhuse["Phusecode"].ToString()), _connection, _transaction);
                                        Atend.Base.Equipment.EPhuse _LocalEPhuse = Atend.Base.Equipment.EPhuse.SelectByCodeForLocal(_EPhuse.Code, LocalTransaction, LocalConnection);
                                        //.Code           
                                        Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(Convert.ToInt32(_EPhuse.PhusePoleCode.ToString()), _connection, _transaction);
                                        Atend.Base.Equipment.EPhusePole _LocalEPhusePole = Atend.Base.Equipment.EPhusePole.SelectByCodeForLocal(_EPhusePole.Code, LocalTransaction, LocalConnection);

                                        if (_EPhusePole.Code != -1)
                                        {
                                            if (_LocalEPhusePole.Code == -1)
                                            {
                                                if (!_EPhusePole.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                                                }

                                            }
                                            else
                                            {
                                                _EPhusePole.XCode = _LocalEPhusePole.XCode;
                                                if (!_EPhusePole.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                                                }

                                            }

                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack Of Data In PhusePole In DB");
                                        }




                                        if (_EPhuse.Code != -1)
                                        {
                                            if (_LocalEPhuse.Code == -1)
                                            {
                                                if (!_EPhuse.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                                                }

                                            }
                                            else
                                            {
                                                _EPhuse.XCode = _LocalEPhuse.XCode;

                                                if (!_EPhuse.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                                                }

                                            }
                                            Atend.Base.Equipment.EDBPhuse _edbPhuse = Atend.Base.Equipment.EDBPhuse.ServerSelectByCode(Convert.ToInt32(DBPhuse["Code"].ToString()), _connection, _transaction);
                                            Atend.Base.Equipment.EDBPhuse _LocaledbPhuse = Atend.Base.Equipment.EDBPhuse.SelectByCode(LocalTransaction, LocalConnection, _edbPhuse.Code);
                                            if (_edbPhuse.Code != -1)
                                            {
                                                _edbPhuse.DBXCode = SelectedEquipEDB.XCode;
                                                ed.WriteMessage("PhuseCode={0}\n", _EPhuse.XCode);
                                                _edbPhuse.PhuseXCode = _EPhuse.XCode;
                                                //if (_edbPhuse.Code == -1)
                                                //{
                                                if (!_edbPhuse.LocalInsertX(LocalTransaction, LocalConnection, false, false, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":DBPhuse");
                                                }

                                                //}
                                                //else
                                                //{
                                                //    _edbPhuse.XCode = _LocaledbPhuse.XCode;
                                                //    if (!_edbPhuse.LocalUpdateX(LocalTransaction, LocalConnection, false, false, _transaction, _connection))
                                                //    {
                                                //        throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":DBPhuse");
                                                //    }

                                                //}
                                            }
                                            else
                                            {
                                                throw new System.Exception("Lack of Data in edbPhuse");
                                            }

                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack Of Data in DBPhuse");
                                        }

                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }


                                break;
                            case Atend.Control.Enum.ProductType.Disconnector:
                                ed.WriteMessage("Sub Is : Disconnector \n");
                                Atend.Base.Equipment.EDisconnector SelectedEquipEDisconnector = Atend.Base.Equipment.EDisconnector.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EDisconnector LocalSelectedDissconnector = Atend.Base.Equipment.EDisconnector.SelectByCodeForLocal(SelectedEquipEDisconnector.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEDisconnector.Code != -1)
                                {

                                    if (LocalSelectedDissconnector.Code == -1)
                                    {
                                        if (SelectedEquipEDisconnector.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEDisconnector.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {

                                        SelectedEquipEDisconnector.XCode = LocalSelectedDissconnector.XCode;
                                        if (SelectedEquipEDisconnector.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEDisconnector.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.Floor:
                                ed.WriteMessage("Sub Is : Floor \n");
                                ed.WriteMessage("xx :{0}\n", dr["ProductCode"]);
                                Atend.Base.Equipment.EFloor SelectedEquipEFloor = Atend.Base.Equipment.EFloor.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                ed.WriteMessage("x1\n");
                                Atend.Base.Equipment.EFloor LocalSelectedFloor = Atend.Base.Equipment.EFloor.SelectByCodeForLocal(SelectedEquipEFloor.Code, LocalTransaction, LocalConnection);
                                ed.WriteMessage("x2\n");
                                if (SelectedEquipEFloor.Code != -1)
                                {
                                    ed.WriteMessage("x3\n");
                                    if (LocalSelectedFloor.Code == -1)
                                    {
                                        ed.WriteMessage("x4\n");
                                        if (SelectedEquipEFloor.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEFloor.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        ed.WriteMessage("x5\n");
                                        SelectedEquipEFloor.XCode = LocalSelectedFloor.XCode;
                                        if (SelectedEquipEFloor.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEFloor.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.Ground:
                                ed.WriteMessage("Sub Is : Ground \n");
                                Atend.Base.Equipment.EGround SelectedEquipEGround = Atend.Base.Equipment.EGround.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EGround LocalSelectedGround = Atend.Base.Equipment.EGround.SelectByCodeForLocal(SelectedEquipEGround.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEGround.Code != -1)
                                {

                                    if (LocalSelectedGround.Code == -1)
                                    {
                                        if (SelectedEquipEGround.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEGround.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEGround.XCode = LocalSelectedGround.XCode;

                                        if (SelectedEquipEGround.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEGround.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());

                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.GroundCabel:
                                ed.WriteMessage("Sub Is : MiddleCabel :={0}\n", dr["XCode"].ToString());
                                Atend.Base.Equipment.EGroundCabel SelectedEquipEMiddleGroundCabel = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EGroundCabel LocalSelectedMidGroundCabel = Atend.Base.Equipment.EGroundCabel.SelectByCodeForLocal(SelectedEquipEMiddleGroundCabel.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEMiddleGroundCabel.Code != -1)
                                {

                                    if (LocalSelectedMidGroundCabel.Code == -1)
                                    {
                                        if (SelectedEquipEMiddleGroundCabel.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMiddleGroundCabel.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEMiddleGroundCabel.XCode = LocalSelectedMidGroundCabel.XCode;
                                        if (SelectedEquipEMiddleGroundCabel.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMiddleGroundCabel.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpDate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;




                            //case Atend.Control.Enum.ProductType.GroundCabelTip:

                            //    Atend.Base.Equipment.EGroundCabelTip SelectedEquipEMiddleGroundCabelTip = Atend.Base.Equipment.EGroundCabelTip.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //    Atend.Base.Equipment.EGroundCabelTip LocalSelectedMidGroundCabelTip = Atend.Base.Equipment.EGroundCabelTip.SelectByCodeForLocal(SelectedEquipEMiddleGroundCabel.Code, LocalTransaction, LocalConnection);
                            //    if (SelectedEquipEMiddleGroundCabelTip.Code != -1)
                            //    {

                            //        Atend.Base.Equipment.EGroundCabel SelectedMidGroundPhaseCabel = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(SelectedEquipEMiddleGroundCabelTip.PhaseProductCode, _connection, _transaction);
                            //        Atend.Base.Equipment.EGroundCabel LocalSelectedMidGroundPhaseCabel = Atend.Base.Equipment.EGroundCabel.SelectByCodeForLocal(SelectedMidGroundPhaseCabel.Code, LocalTransaction, LocalConnection);


                            //        Atend.Base.Equipment.EGroundCabel SelectedMidGroundNeutralCabel = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(SelectedEquipEMiddleGroundCabelTip.NeutralProductCode, _connection, _transaction);
                            //        Atend.Base.Equipment.EGroundCabel LocalSelectedMidGroundNuetralCabel = Atend.Base.Equipment.EGroundCabel.SelectByCodeForLocal(SelectedMidGroundNeutralCabel.Code, LocalTransaction, LocalConnection);


                            //        if (SelectedMidGroundPhaseCabel.Code != -1)
                            //        {

                            //            if (LocalSelectedMidGroundPhaseCabel.Code == -1)
                            //            {
                            //                if (SelectedMidGroundPhaseCabel.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedMidGroundPhaseCabel.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                            //                }
                            //            }
                            //            else
                            //            {
                            //                SelectedMidGroundPhaseCabel.XCode = LocalSelectedMidGroundPhaseCabel.XCode;
                            //                if (SelectedMidGroundPhaseCabel.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedMidGroundPhaseCabel.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalUpDate failed" + Convert.ToInt32(Type).ToString());
                            //                }

                            //            }
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("SelectedMidGroundPhaseCabel Lack Of Data");
                            //        }


                            //        if (SelectedMidGroundNeutralCabel.Code != -1)
                            //        {

                            //            if (LocalSelectedMidGroundNuetralCabel.Code == -1)
                            //            {
                            //                if (SelectedMidGroundNeutralCabel.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedMidGroundNeutralCabel.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                            //                }
                            //            }
                            //            else
                            //            {
                            //                SelectedMidGroundNeutralCabel.XCode = LocalSelectedMidGroundNuetralCabel.XCode;
                            //                if (SelectedMidGroundNeutralCabel.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedMidGroundNeutralCabel.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalUpDate failed" + Convert.ToInt32(Type).ToString());
                            //                }

                            //            }
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("SelectedMidGroundPhaseCabel Lack Of Data");
                            //        }




                            //        if (LocalSelectedMidGroundCabelTip.Code == -1)
                            //        {
                            //            if (SelectedEquipEMiddleGroundCabelTip.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //            {
                            //                NewCode = SelectedEquipEMiddleGroundCabelTip.XCode;

                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                            //            }
                            //        }
                            //        else
                            //        {
                            //            SelectedEquipEMiddleGroundCabelTip.XCode = LocalSelectedMidGroundCabelTip.XCode;
                            //            if (SelectedEquipEMiddleGroundCabelTip.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //            {
                            //                NewCode = SelectedEquipEMiddleGroundCabelTip.XCode;
                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("LocalUpDate failed" + Convert.ToInt32(Type).ToString());
                            //            }

                            //        }
                            //        //}
                            //    }
                            //    else
                            //    {
                            //        throw new System.Exception("Lack oF Data In " + Type.ToString());
                            //    }
                            //    break;



                            case Atend.Control.Enum.ProductType.GroundPost:
                                ed.WriteMessage("Sub Is : GroundPost \n");
                                Atend.Base.Equipment.EGroundPost SelectedEquipEGroundPost = Atend.Base.Equipment.EGroundPost.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EGroundPost LocalSelectedGroundPost = Atend.Base.Equipment.EGroundPost.SelectByCodeForLocal(SelectedEquipEGroundPost.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEGroundPost.Code != -1)
                                {
                                    if (LocalSelectedGroundPost.Code == -1)
                                    {
                                        if (SelectedEquipEGroundPost.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEGroundPost.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEGroundPost.XCode = LocalSelectedGroundPost.XCode;
                                        if (SelectedEquipEGroundPost.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEGroundPost.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;



                            case Atend.Control.Enum.ProductType.Halter:
                                ed.WriteMessage("Sub Is : Halter \n");
                                Atend.Base.Equipment.EHalter SelectedEquipEHalter = Atend.Base.Equipment.EHalter.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EHalter LocalSelectedEquipEHalter = Atend.Base.Equipment.EHalter.SelectByCodeForLocal(Convert.ToInt32(dr["ProductCode"].ToString()), LocalTransaction, LocalConnection);

                                if (SelectedEquipEHalter.Code != -1)
                                {

                                    if (LocalSelectedEquipEHalter.Code == -1)
                                    {
                                        if (SelectedEquipEHalter.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEHalter.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEHalter.XCode = LocalSelectedEquipEHalter.XCode;
                                        if (SelectedEquipEHalter.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEHalter.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;

                            //case Atend.Control.Enum.ProductType.Halter:
                            //    Atend.Base.Equipment. SelectedEquip = Atend.Base.Equipment.EBreaker.SelectByXCode(XCode);
                            //    if (SelectedEquip.Code != -1)
                            //    {
                            //        if (SelectedEquip.AccessInsert(_transaction, _connection))
                            //        {
                            //            NewCode = SelectedEquip.Code;
                            //        }
                            //        else
                            //        {
                            //            throw new Exception("{0}.AccessInsert failed", ((Atend.Control.Enum.ProductType)Convert.ToInt32(dr["TableType"])).ToString());
                            //        }
                            //    }
                            //    break;
                            case Atend.Control.Enum.ProductType.HeaderCabel:
                                ed.WriteMessage("Sub Is : HeaderCabel \n");
                                Atend.Base.Equipment.EHeaderCabel SelectedEquipEHeaderCabel = Atend.Base.Equipment.EHeaderCabel.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EHeaderCabel LocalSelectedEquipEHeaderCabel = Atend.Base.Equipment.EHeaderCabel.SelectByCodeForLocal(Convert.ToInt32(dr["ProductCode"].ToString()), LocalTransaction, LocalConnection);

                                if (SelectedEquipEHeaderCabel.Code != -1)
                                {

                                    if (LocalSelectedEquipEHeaderCabel.Code == -1)
                                    {
                                        if (SelectedEquipEHeaderCabel.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEHeaderCabel.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEHeaderCabel.XCode = LocalSelectedEquipEHeaderCabel.XCode;
                                        if (SelectedEquipEHeaderCabel.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEHeaderCabel.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Insulator:
                                ed.WriteMessage("Sub Is : Insulator \n");
                                Atend.Base.Equipment.EInsulator SelectedEquipEInsulator = Atend.Base.Equipment.EInsulator.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EInsulator LocalSelectedInsulator = Atend.Base.Equipment.EInsulator.SelectByCodeForLocal(SelectedEquipEInsulator.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEInsulator.Code != -1)
                                {

                                    if (LocalSelectedInsulator.Code == -1)
                                    {
                                        if (SelectedEquipEInsulator.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEInsulator.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEInsulator.XCode = LocalSelectedInsulator.XCode;
                                        if (SelectedEquipEInsulator.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEInsulator.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.InsulatorChain:
                                ed.WriteMessage("Sub Is : InsulatorChain \n");
                                Atend.Base.Equipment.EInsulatorChain SelectedEquipEInsulatorChain = Atend.Base.Equipment.EInsulatorChain.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EInsulatorChain LocalSelectedInsChain = Atend.Base.Equipment.EInsulatorChain.SelectByCodeForLocal(SelectedEquipEInsulatorChain.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEInsulatorChain.Code != -1)
                                {

                                    if (LocalSelectedInsChain.Code == -1)
                                    {
                                        if (SelectedEquipEInsulatorChain.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEInsulatorChain.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEInsulatorChain.XCode = LocalSelectedInsChain.XCode;
                                        if (SelectedEquipEInsulatorChain.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEInsulatorChain.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.InsulatorPipe:
                                ed.WriteMessage("Sub Is : InsulatorPipe \n");
                                Atend.Base.Equipment.EInsulatorPipe SelectedEquipEInsulatorPipe = Atend.Base.Equipment.EInsulatorPipe.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EInsulatorPipe LocalSelectedInsPipe = Atend.Base.Equipment.EInsulatorPipe.SelectByCodeForLocal(SelectedEquipEInsulatorPipe.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipEInsulatorPipe.Code != -1)
                                {

                                    if (LocalSelectedInsPipe.Code == -1)
                                    {
                                        if (SelectedEquipEInsulatorPipe.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEInsulatorPipe.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEInsulatorPipe.XCode = LocalSelectedInsPipe.XCode;
                                        if (SelectedEquipEInsulatorPipe.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEInsulatorPipe.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.MiddleJackPanel:
                                ////ed.WriteMessage("AAA : {0} \n", new Guid(dr["XCode"].ToString()));
                                ed.WriteMessage("Sub Is : MiddleJackPanel \n");
                                Atend.Base.Equipment.EJAckPanel SelectedEquipEJAckPanel = Atend.Base.Equipment.EJAckPanel.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EJAckPanel LocalSelectedEJackPanel = Atend.Base.Equipment.EJAckPanel.SelectByCodeForLocal(SelectedEquipEJAckPanel.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEJAckPanel.Code != -1)
                                {

                                    Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.ServerSelectByCode(SelectedEquipEJAckPanel.MasterProductCode, _connection, _transaction);
                                    Atend.Base.Equipment.EBus _LocalBus = Atend.Base.Equipment.EBus.SelectByCodeForLocal(_eBus.Code, LocalTransaction, LocalConnection);
                                    if (_eBus.Code != -1)
                                    {
                                        if (_LocalBus.Code == -1)
                                        {
                                            if (!_eBus.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
                                            }

                                        }
                                        else
                                        {
                                            _eBus.XCode = _LocalBus.XCode;

                                            if (!_eBus.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
                                            }
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in MiddleJackPanel:Bus");
                                    }

                                    SelectedEquipEJAckPanel.MasterProductXCode = _eBus.XCode;
                                    if (LocalSelectedEJackPanel.Code == -1)
                                    {

                                        if (SelectedEquipEJAckPanel.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEJAckPanel.XCode;


                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert Failed in MJackPanel");
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEJAckPanel.XCode = LocalSelectedEJackPanel.XCode;

                                        if (SelectedEquipEJAckPanel.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEJAckPanel.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Serevr Update Failed in MJackPanel");
                                        }

                                    }

                                    //if (SelectedEquipEJAckPanel.ServerInsert(_transaction, _connection, true, false))
                                    //{
                                    //    NewCode = SelectedEquipEJAckPanel.Code;
                                    DataTable _JPS = Atend.Base.Equipment.EJackPanelCell.SelectByJackPanelCode(SelectedEquipEJAckPanel.Code, _transaction, _connection);

                                    if (!Atend.Base.Equipment.EJackPanelCell.DeleteX(LocalTransaction, LocalConnection, SelectedEquipEJAckPanel.XCode))
                                    {
                                        throw new System.Exception("Error In Delete JackPanelCell in SendToLocal");
                                    }

                                    foreach (DataRow _JPSdr in _JPS.Rows)
                                    {
                                        //XX2
                                        Atend.Base.Equipment.ECell _eCell = Atend.Base.Equipment.ECell.ServerSelectByCode(Convert.ToInt32(_JPSdr["ProductCode"].ToString()), _connection, _transaction);
                                        Atend.Base.Equipment.ECell _LocalSelectedeCell = Atend.Base.Equipment.ECell.SelectByCodeForLocal(_eCell.Code, LocalTransaction, LocalConnection);
                                        if (_eCell.Code != -1)
                                        {
                                            if (_LocalSelectedeCell.Code == -1)
                                            {
                                                if (!_eCell.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Cell");
                                                }

                                            }
                                            else
                                            {
                                                _eCell.XCode = _LocalSelectedeCell.XCode;
                                                if (!_eCell.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Cell");
                                                }

                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in MiddleJackPanel:Cell");
                                        }
                                        Atend.Base.Equipment.EJackPanelCell _EJC = Atend.Base.Equipment.EJackPanelCell.ServerSelectByCode(Convert.ToInt32(_JPSdr["Code"].ToString()), _connection, _transaction);
                                        Atend.Base.Equipment.EJackPanelCell _LocalEJC = Atend.Base.Equipment.EJackPanelCell.SelectByCodeForLocal(_EJC.Code, LocalTransaction, LocalConnection);
                                        if (_EJC.Code != -1)
                                        {
                                            _EJC.ProductXCode = _eCell.XCode;
                                            _EJC.JackPanelXCode = SelectedEquipEJAckPanel.XCode;
                                            //if (_LocalEJC.Code == -1)
                                            //{
                                            if (!_EJC.LocalInsertX(LocalTransaction, LocalConnection, false, false, _transaction, _connection))
                                            {
                                                throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":JackPanelCell");
                                            }

                                            //}
                                            //else
                                            //{
                                            //    _EJC.XCode = _LocalEJC.XCode;
                                            //    if (!_EJC.LocalUpdateX(LocalTransaction, LocalConnection, false, false, _transaction, _connection))
                                            //    {
                                            //        throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":JackPanelCell");
                                            //    }

                                            //}
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in MiddleJackPanel:JackPanelCell");
                                        }
                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of DAta in MidJackPanel");
                                }
                                //}
                                //}
                                break;


                            case Atend.Control.Enum.ProductType.WeekJackPanel:
                                ed.WriteMessage("Sub Is : WeekJackPanel \n");
                                Atend.Base.Equipment.EJackPanelWeek SelectedEquipWeekJackPanel = Atend.Base.Equipment.EJackPanelWeek.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EJackPanelWeek LocalSelectedWeekJackPanel = Atend.Base.Equipment.EJackPanelWeek.SelectByCodeForLocal(SelectedEquipWeekJackPanel.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipWeekJackPanel.Code != -1)
                                {


                                    Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.ServerSelectByCode(SelectedEquipWeekJackPanel.BusCode, _connection, _transaction);
                                    Atend.Base.Equipment.EBus _LocalBus = Atend.Base.Equipment.EBus.SelectByCodeForLocal(_eBus.Code, LocalTransaction, LocalConnection);
                                    if (_eBus.Code != -1)
                                    {
                                        if (_LocalBus.Code == -1)
                                        {
                                            if (!_eBus.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
                                            }

                                        }
                                        else
                                        {
                                            _eBus.XCode = _LocalBus.XCode;
                                            if (!_eBus.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
                                            }

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in WeekJackPanel:Bus");
                                    }
                                    SelectedEquipWeekJackPanel.BusXCode = _eBus.XCode;

                                    Atend.Base.Equipment.EAutoKey_3p _Key = Atend.Base.Equipment.EAutoKey_3p.ServerSelectByCode(SelectedEquipWeekJackPanel.AutoKey3pCode, _connection, _transaction);
                                    Atend.Base.Equipment.EAutoKey_3p _LocalKey = Atend.Base.Equipment.EAutoKey_3p.SelectByCodeForLocal(_Key.Code, LocalTransaction, LocalConnection);
                                    //ed.WriteMessage("1\n");

                                    if (_Key.Code != -1)
                                    {
                                        //ed.WriteMessage("2\n");
                                        if (_LocalKey.Code == -1)
                                        {
                                            if (!_Key.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                //ed.WriteMessage("3\n");
                                                throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":EAutoKey_3p");
                                            }

                                        }
                                        else
                                        {
                                            _Key.XCode = _LocalKey.XCode;
                                            if (!_Key.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                //ed.WriteMessage("3\n");
                                                throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":EAutoKey_3p");
                                            }

                                        }
                                        //ed.WriteMessage("4\n");
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in WeekJackPanel:EAutoKey_3p");
                                    }
                                    //ed.WriteMessage("insert passed \n");
                                    SelectedEquipWeekJackPanel.AutoKey3pXCode = _Key.XCode;
                                    if (LocalSelectedWeekJackPanel.Code == -1)
                                    {
                                        if (SelectedEquipWeekJackPanel.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipWeekJackPanel.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert Failed " + dr["TableType"].ToString());
                                        }
                                    }
                                    else
                                    {
                                        //Atend.Base.Equipment.EJackPanelWeek ServerSelectedWeekJackPanel=Atend.Base.Equipment.EJackPanelWeek.ServerSelectByXCode
                                        SelectedEquipWeekJackPanel.XCode = LocalSelectedWeekJackPanel.XCode;
                                        if (SelectedEquipWeekJackPanel.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipWeekJackPanel.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed " + dr["TableType"].ToString());
                                        }
                                    }
                                    //if (SelectedEquipWeekJackPanel.ServerInsert(_transaction, _connection, true, false))
                                    //{
                                    //    NewCode = SelectedEquipWeekJackPanel.Code;

                                    DataTable _WJS = Atend.Base.Equipment.EJackPanelWeekCell.ServerSelectByJackPanelWeekCode(_transaction, _connection, SelectedEquipWeekJackPanel.Code);

                                    if (!Atend.Base.Equipment.EJackPanelWeekCell.DeleteX(LocalTransaction, LocalConnection, SelectedEquipWeekJackPanel.XCode))
                                    {
                                        throw new System.Exception("error in Delete EJackPanelWeekCell in SendToLocal");
                                    }

                                    foreach (DataRow _WJSdr in _WJS.Rows)
                                    {
                                        //ed.WriteMessage("go for cells \n");
                                        Atend.Base.Equipment.EJackPanelWeekCell _WJC = Atend.Base.Equipment.EJackPanelWeekCell.ServerSelectByCode(Convert.ToInt32(_WJSdr["Code"].ToString()), _connection, _transaction);
                                        Atend.Base.Equipment.EJackPanelWeekCell _LocalWJC = Atend.Base.Equipment.EJackPanelWeekCell.SelectByCodeForLocal(_WJC.Code, LocalTransaction, LocalConnection);
                                        if (_WJC.Code != -1)
                                        {
                                            _WJC.JackPanelWeekXCode = SelectedEquipWeekJackPanel.XCode;
                                            //if (_LocalWJC.Code == -1)
                                            //{
                                            if (!_WJC.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":WeekJackPanelCell");
                                            }
                                            else
                                            {
                                                //if (!)
                                                //{
                                                //    throw new System.Exception("UpdateX      Failed");
                                                //}
                                            }
                                            //}
                                            //else
                                            //{
                                            //    _WJC.XCode = _LocalWJC.XCode;
                                            //    if (!_WJC.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            //    {
                                            //        throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":WeekJackPanelCell");
                                            //    }

                                            //}
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in WeekJackPanel:WeekJackPanelCell");
                                        }
                                    }

                                }
                                else
                                {
                                    throw new System.Exception("Lack Of Data In Week JackPanel");
                                }
                                //}
                                break;


                            case Atend.Control.Enum.ProductType.KablSho:
                                ed.WriteMessage("Sub Is : KablSho \n");
                                Atend.Base.Equipment.EKablsho SelectedEquipEKablsho = Atend.Base.Equipment.EKablsho.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EKablsho LocalSelectedKablsho = Atend.Base.Equipment.EKablsho.SelectByCodeForLocal(SelectedEquipEKablsho.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEKablsho.Code != -1)
                                {

                                    if (LocalSelectedKablsho.Code == -1)
                                    {
                                        if (SelectedEquipEKablsho.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEKablsho.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEKablsho.XCode = LocalSelectedKablsho.XCode;
                                        if (SelectedEquipEKablsho.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEKablsho.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Kalamp:
                                ed.WriteMessage("Sub Is : Kalamp \n");
                                Atend.Base.Equipment.EClamp SelectedEquipEClamp = Atend.Base.Equipment.EClamp.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EClamp LocalSelectedCalamp = Atend.Base.Equipment.EClamp.SelectByCodeForLocal(SelectedEquipEClamp.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEClamp.Code != -1)
                                {

                                    if (LocalSelectedCalamp.Code == -1)
                                    {
                                        if (SelectedEquipEClamp.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEClamp.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEClamp.XCode = LocalSelectedCalamp.XCode;
                                        if (SelectedEquipEClamp.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEClamp.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Khazan:
                                ed.WriteMessage("Sub Is : Khazan \n");
                                Atend.Base.Equipment.EKhazan SelectedEquipEKhazan = Atend.Base.Equipment.EKhazan.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EKhazan LocalSelectedKhazan = Atend.Base.Equipment.EKhazan.SelectByCodeForLocal(SelectedEquipEKhazan.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEKhazan.Code != -1)
                                {

                                    if (LocalSelectedKhazan.Code == -1)
                                    {
                                        if (SelectedEquipEKhazan.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEKhazan.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEKhazan.XCode = LocalSelectedKhazan.XCode;
                                        if (SelectedEquipEKhazan.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEKhazan.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.Light:
                                ed.WriteMessage("Sub Is : Light \n");
                                Atend.Base.Equipment.ELight SelectedEquipELight = Atend.Base.Equipment.ELight.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ELight LocalSelectedLight = Atend.Base.Equipment.ELight.SelectByCodeForLocal(SelectedEquipELight.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipELight.Code != -1)
                                {

                                    if (LocalSelectedLight.Code == -1)
                                    {
                                        if (SelectedEquipELight.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipELight.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipELight.XCode = LocalSelectedLight.XCode;

                                        if (SelectedEquipELight.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipELight.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.Mafsal:
                                ed.WriteMessage("Sub Is : Mafsal \n");
                                Atend.Base.Equipment.EMafsal SelectedEquipEMafsal = Atend.Base.Equipment.EMafsal.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EMafsal LocalSelectedMafsal = Atend.Base.Equipment.EMafsal.SelectByCodeForLocal(SelectedEquipEMafsal.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEMafsal.Code != -1)
                                {

                                    if (LocalSelectedMafsal.Code == -1)
                                    {
                                        if (SelectedEquipEMafsal.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMafsal.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEMafsal.XCode = LocalSelectedMafsal.XCode;
                                        if (SelectedEquipEMafsal.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMafsal.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.MeasuredJackPanel:
                                ed.WriteMessage("Sub Is : MeasuredJackPanel \n");
                                Atend.Base.Equipment.EMeasuredJackPanel SelectedEquipEMeasuredJackPanel = Atend.Base.Equipment.EMeasuredJackPanel.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EMeasuredJackPanel LocalselectedMeasureJackPAnel = Atend.Base.Equipment.EMeasuredJackPanel.SelectByCodeForLocal(SelectedEquipEMeasuredJackPanel.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEMeasuredJackPanel.Code != -1)
                                {

                                    if (LocalselectedMeasureJackPAnel.Code == -1)
                                    {
                                        if (SelectedEquipEMeasuredJackPanel.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMeasuredJackPanel.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEMeasuredJackPanel.XCode = LocalselectedMeasureJackPAnel.XCode;
                                        if (SelectedEquipEMeasuredJackPanel.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMeasuredJackPanel.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }


                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.MiniatureKey:
                                ed.WriteMessage("Sub Is : MiniatureKey \n");
                                Atend.Base.Equipment.EMiniatorKey SelectedEquipEMiniatorKey = Atend.Base.Equipment.EMiniatorKey.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EMiniatorKey LocalSelectedMiniatorKey = Atend.Base.Equipment.EMiniatorKey.SelectByCodeForLocal(SelectedEquipEMiniatorKey.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEMiniatorKey.Code != -1)
                                {

                                    //{
                                    if (LocalSelectedMiniatorKey.Code == -1)
                                    {
                                        if (SelectedEquipEMiniatorKey.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMiniatorKey.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEMiniatorKey.XCode = LocalSelectedMiniatorKey.XCode;
                                        if (SelectedEquipEMiniatorKey.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMiniatorKey.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.PhotoCell:
                                ed.WriteMessage("Sub Is : PhotoCell \n");
                                Atend.Base.Equipment.EPhotoCell SelectedEquipEPhotoCell = Atend.Base.Equipment.EPhotoCell.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EPhotoCell LocalSelectedPhotoCell = Atend.Base.Equipment.EPhotoCell.SelectByCodeForLocal(SelectedEquipEPhotoCell.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEPhotoCell.Code != -1)
                                {

                                    if (LocalSelectedPhotoCell.Code == -1)
                                    {
                                        if (SelectedEquipEPhotoCell.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPhotoCell.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEPhotoCell.XCode = LocalSelectedPhotoCell.XCode;
                                        if (SelectedEquipEPhotoCell.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPhotoCell.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Phuse:
                                ed.WriteMessage("Sub Is : Phuse \n");
                                Atend.Base.Equipment.EPhuse SelectedEquipEPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EPhuse LocalSelectedPhuse = Atend.Base.Equipment.EPhuse.SelectByCodeForLocal(SelectedEquipEPhuse.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEPhuse.Code != -1)
                                {

                                    Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(SelectedEquipEPhuse.PhusePoleCode, _connection, _transaction);
                                    Atend.Base.Equipment.EPhusePole _LocalPhusePole = Atend.Base.Equipment.EPhusePole.SelectByCodeForLocal(_EPhusePole.Code, LocalTransaction, LocalConnection);
                                    ed.WriteMessage("_EPhusePole={0}\n", _EPhusePole.Code);
                                    if (_EPhusePole.Code != -1)
                                    {
                                        if (_LocalPhusePole.Code == -1)
                                        {
                                            if (!_EPhusePole.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":PhusePole");
                                            }

                                        }
                                        else
                                        {
                                            _EPhusePole.XCode = _LocalPhusePole.XCode;
                                            if (!_EPhusePole.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                throw new System.Exception("Local Update phusePole Failed");
                                            }

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in Phuse:PhusePole");
                                    }
                                    ed.WriteMessage("PhusePoleCode:{0}\n", _EPhusePole.Code);
                                    SelectedEquipEPhuse.PhusePoleXCode = _EPhusePole.XCode;
                                    if (LocalSelectedPhuse.Code == -1)
                                    {
                                        if (SelectedEquipEPhuse.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPhuse.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEPhuse.XCode = LocalSelectedPhuse.XCode;
                                        if (!SelectedEquipEPhuse.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            throw new System.Exception("Local Update Failed in Phuse");
                                        }


                                    }


                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.PhuseKey:
                                ed.WriteMessage("Sub Is : PhuseKey \n");
                                Atend.Base.Equipment.EPhuseKey SelectedEquipEPhuseKey = Atend.Base.Equipment.EPhuseKey.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EPhuseKey LocalSelectedPhuseKey = Atend.Base.Equipment.EPhuseKey.SelectByCodeForLocal(SelectedEquipEPhuseKey.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEPhuseKey.Code != -1)
                                {

                                    if (LocalSelectedPhuseKey.Code == 0)
                                    {
                                        if (SelectedEquipEPhuseKey.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPhuseKey.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {

                                        if (SelectedEquipEPhuseKey.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPhuseKey.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }


                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.PhusePole:
                                ed.WriteMessage("Sub Is : PhusePole \n");
                                Atend.Base.Equipment.EPhusePole SelectedEquipEPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EPhusePole LocalSelectedPhusePole = Atend.Base.Equipment.EPhusePole.SelectByCodeForLocal(SelectedEquipEPhusePole.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEPhusePole.Code != -1)
                                {

                                    if (LocalSelectedPhusePole.Code == 0)
                                    {
                                        if (SelectedEquipEPhusePole.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPhusePole.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEPhusePole.XCode = LocalSelectedPhusePole.XCode;
                                        if (SelectedEquipEPhusePole.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPhusePole.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Pole:
                                ed.WriteMessage("Sub Is : Pole \n");
                                Atend.Base.Equipment.EPole SelectedEquipEPole = Atend.Base.Equipment.EPole.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EPole LocalSelectedPole = Atend.Base.Equipment.EPole.SelectByCodeForLocal(SelectedEquipEPole.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEPole.Code != -1)
                                {

                                    if (LocalSelectedPole.Code == -1)
                                    {
                                        if (SelectedEquipEPole.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPole.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEPole.XCode = LocalSelectedPole.XCode;
                                        if (SelectedEquipEPole.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPole.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;
                            ////case Atend.Control.Enum.ProductType.PoleTip:
                            ////    ed.WriteMessage("Sub Is : PoleTip \n");
                            ////    Atend.Base.Equipment.EPoleTip SelectedEquipEPoleTip = Atend.Base.Equipment.EPoleTip.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                            ////    if (SelectedEquipEPoleTip.Code != -1)
                            ////    {
                            ////        //Atend.Base.Equipment.EPoleTip answer = Atend.Base.Equipment.EPoleTip.AccessSelectByXCode(SelectedEquipEPoleTip.XCode, _transaction, _connection);
                            ////        //if (answer.Code != -1)
                            ////        //{
                            ////        //    NewCode = answer.Code;
                            ////        //}
                            ////        //else
                            ////        //{

                            ////        Atend.Base.Equipment.EPole _ePole = Atend.Base.Equipment.EPole.SelectByXCode(SelectedEquipEPoleTip.PoleXCode);
                            ////        if (_ePole.Code != -1)
                            ////        {
                            ////            if (!_ePole.AccessInsert(_transaction, _connection, true, true))
                            ////            {
                            ////                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":POle");
                            ////            }
                            ////        }
                            ////        else
                            ////        {
                            ////            throw new System.Exception("Lack of data in poleTip:Pole");
                            ////        }

                            ////        Atend.Base.Equipment.EHalter _eHalter = Atend.Base.Equipment.EHalter.SelectByXCode(SelectedEquipEPoleTip.HalterXID);
                            ////        if (_eHalter.Code != -1)
                            ////        {
                            ////            if (!_eHalter.AccessInsert(_transaction, _connection, true, true))
                            ////            {
                            ////                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Halter");
                            ////            }
                            ////        }
                            ////        else
                            ////        {
                            ////            throw new System.Exception("Lack of data in poleTip:Halter");
                            ////        }

                            ////        SelectedEquipEPoleTip.PoleCode = _ePole.Code;
                            ////        SelectedEquipEPoleTip.HalterID = _eHalter.Code;
                            ////        if (SelectedEquipEPoleTip.AccessInsert(_transaction, _connection, true, false))
                            ////        {
                            ////            NewCode = SelectedEquipEPoleTip.Code;
                            ////        }
                            ////        else
                            ////        {
                            ////            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            ////        }



                            ////        //}
                            ////    }
                            ////    break;
                            case Atend.Control.Enum.ProductType.Prop:
                                ed.WriteMessage("Sub Is : Prop \n");
                                Atend.Base.Equipment.EProp SelectedEquipEProp = Atend.Base.Equipment.EProp.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EProp LocalSelectedProp = Atend.Base.Equipment.EProp.SelectByCodeForLocal(SelectedEquipEProp.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEProp.Code != -1)
                                {

                                    if (LocalSelectedProp.Code == -1)
                                    {
                                        if (SelectedEquipEProp.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEProp.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("container error in Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEProp.XCode = LocalSelectedProp.XCode;
                                        if (SelectedEquipEProp.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEProp.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("container error in Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.PT:
                                ed.WriteMessage("Sub Is : PT \n");
                                Atend.Base.Equipment.EPT SelectedEquipEPT = Atend.Base.Equipment.EPT.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EPT LocalSelectedPT = Atend.Base.Equipment.EPT.SelectByCodeForLocal(SelectedEquipEPT.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEPT.Code != -1)
                                {

                                    if (LocalSelectedPT.Code == -1)
                                    {
                                        if (SelectedEquipEPT.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPT.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEPT.XCode = LocalSelectedPT.XCode;
                                        if (SelectedEquipEPT.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPT.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;



                            case Atend.Control.Enum.ProductType.Ramp:
                                ed.WriteMessage("Sub Is : Ramp \n");
                                Atend.Base.Equipment.ERamp SelectedEquipERamp = Atend.Base.Equipment.ERamp.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ERamp LocalSelectedRamp = Atend.Base.Equipment.ERamp.SelectByCodeForLocal(SelectedEquipERamp.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipERamp.Code != -1)
                                {

                                    if (LocalSelectedRamp.Code == -1)
                                    {
                                        if (SelectedEquipERamp.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipERamp.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipERamp.XCode = LocalSelectedRamp.XCode;

                                        if (SelectedEquipERamp.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipERamp.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.ReCloser:
                                ed.WriteMessage("Sub Is : ReCloser \n");
                                Atend.Base.Equipment.EReCloser SelectedEquipEReCloser = Atend.Base.Equipment.EReCloser.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EReCloser LocalSelectedReCloser = Atend.Base.Equipment.EReCloser.SelectByCodeForLocal(SelectedEquipEReCloser.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEReCloser.Code != -1)
                                {

                                    if (LocalSelectedReCloser.Code == -1)
                                    {
                                        if (SelectedEquipEReCloser.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEReCloser.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEReCloser.XCode = LocalSelectedReCloser.XCode;
                                        if (SelectedEquipEReCloser.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEReCloser.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.Rod:
                                ed.WriteMessage("Sub Is : Rod \n");
                                Atend.Base.Equipment.ERod SelectedEquipERod = Atend.Base.Equipment.ERod.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ERod LocalSelectedRod = Atend.Base.Equipment.ERod.SelectByCodeForLocal(SelectedEquipERod.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipERod.Code != -1)
                                {

                                    if (LocalSelectedRod.Code == -1)
                                    {
                                        if (SelectedEquipERod.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipERod.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipERod.XCode = SelectedEquipERod.XCode;
                                        if (SelectedEquipERod.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipERod.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.SectionLizer:
                                ed.WriteMessage("Sub Is : SectionLizer \n");
                                Atend.Base.Equipment.ESectionLizer SelectedEquipESectionLizer = Atend.Base.Equipment.ESectionLizer.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ESectionLizer LocalSelectedSectionLizer = Atend.Base.Equipment.ESectionLizer.SelectByCodeForLocal(SelectedEquipESectionLizer.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipESectionLizer.Code != -1)
                                {

                                    if (LocalSelectedSectionLizer.Code == -1)
                                    {
                                        if (SelectedEquipESectionLizer.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipESectionLizer.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipESectionLizer.XCode = LocalSelectedSectionLizer.XCode;
                                        if (SelectedEquipESectionLizer.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipESectionLizer.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.SelfKeeper:
                                ed.WriteMessage("Sub Is : SelfKeeper \n");
                                Atend.Base.Equipment.ESelfKeeper SelectedEquipESelfKeeper = Atend.Base.Equipment.ESelfKeeper.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ESelfKeeper LocalSelectedSelfKeeper = Atend.Base.Equipment.ESelfKeeper.SelectByCodeForLocal(SelectedEquipESelfKeeper.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipESelfKeeper.Code != -1)
                                {

                                    if (LocalSelectedSelfKeeper.Code == -1)
                                    {
                                        if (SelectedEquipESelfKeeper.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipESelfKeeper.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipESelfKeeper.XCode = LocalSelectedSelfKeeper.XCode;
                                        if (SelectedEquipESelfKeeper.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipESelfKeeper.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                                }
                                break;
                            //case Atend.Control.Enum.ProductType.SelfKeeperTip:
                            //    ed.WriteMessage("Sub Is : SelfKeeperTip \n");
                            //    Atend.Base.Equipment.ESelfKeeperTip SelectedEquipESelfKeeperTip = Atend.Base.Equipment.ESelfKeeperTip.SelectByXCode(new Guid(dr["XCode"].ToString()));
                            //    if (SelectedEquipESelfKeeperTip.Code != -1)
                            //    {
                            //        //Atend.Base.Equipment.ESelfKeeperTip answer = Atend.Base.Equipment.ESelfKeeperTip.AccessSelectByXCode(SelectedEquipESelfKeeperTip.XCode, _transaction, _connection);
                            //        //if (answer.Code != -1)
                            //        //{
                            //        //    NewCode = answer.Code;
                            //        //}
                            //        //else
                            //        //{
                            //        if (SelectedEquipESelfKeeperTip.AccessInsert(_transaction, _connection))
                            //        {
                            //            NewCode = SelectedEquipESelfKeeperTip.Code;
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //        }
                            //        //}
                            //    }
                            //    break;

                            case Atend.Control.Enum.ProductType.StreetBox:
                                ed.WriteMessage("Sub Is : StreetBox \n");
                                Atend.Base.Equipment.EStreetBox SelectedEquipEStreetBox = Atend.Base.Equipment.EStreetBox.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EStreetBox LocalSelectedStreetBox = Atend.Base.Equipment.EStreetBox.SelectByCodeForLocal(SelectedEquipEStreetBox.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEStreetBox.Code != -1)
                                {

                                    if (LocalSelectedStreetBox.Code == -1)
                                    {
                                        if (SelectedEquipEStreetBox.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEStreetBox.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local InSert Failed " + dr["TableType"].ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEStreetBox.XCode = LocalSelectedStreetBox.XCode;
                                        if (SelectedEquipEStreetBox.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEStreetBox.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update Failed " + dr["TableType"].ToString());
                                        }


                                    }
                                    //if (SelectedEquipEStreetBox.ServerInsert(_transaction, _connection, true, false))
                                    //{
                                    //    NewCode = SelectedEquipEStreetBox.Code;
                                    DataTable StreetBoxPhuses = Atend.Base.Equipment.EStreetBoxPhuse.ServerSelectByStreetBoxCode(Convert.ToInt32(dr["Code"].ToString()), _transaction, _connection);
                                    if (!Atend.Base.Equipment.EStreetBoxPhuse.DeleteX(LocalTransaction, LocalConnection, SelectedEquipEStreetBox.XCode))
                                    {
                                        throw new System.Exception("error in Delete StreetBoxPhuse");
                                    }
                                    foreach (DataRow StreetBoxPhuse in StreetBoxPhuses.Rows)
                                    {
                                        //ed.WriteMessage("110\n");
                                        Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(Convert.ToInt32(StreetBoxPhuse["PhuseCode"].ToString()), _connection, _transaction);
                                        Atend.Base.Equipment.EPhuse _LocalPhuse = Atend.Base.Equipment.EPhuse.SelectByCodeForLocal(_EPhuse.Code, LocalTransaction, LocalConnection);
                                        if (_EPhuse.Code != -1)
                                        {
                                            //ed.WriteMessage("111\n");
                                            Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(_EPhuse.PhusePoleCode, _connection, _transaction);
                                            Atend.Base.Equipment.EPhusePole _LocalPhusePole = Atend.Base.Equipment.EPhusePole.SelectByCodeForLocal(_EPhusePole.Code, LocalTransaction, LocalConnection);
                                            if (_EPhusePole.Code != -1)
                                            {
                                                //ed.WriteMessage("112\n");
                                                if (_LocalPhusePole.Code == -1)
                                                {
                                                    if (!_EPhusePole.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                    {
                                                        throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":PhusePole");
                                                    }

                                                }
                                                else
                                                {
                                                    _EPhusePole.XCode = _LocalPhusePole.XCode;
                                                    if (!_EPhusePole.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                    {
                                                        throw new System.Exception("LocalrUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":PhusePole");
                                                    }

                                                }
                                            }
                                            else
                                            {
                                                throw new System.Exception("Lack of data in StreetBox:Phuse:PhusePole");
                                            }
                                            //ed.WriteMessage("streetbox was :{0} \n", _EPhusePole.Code);
                                            _EPhuse.PhusePoleXCode = _EPhusePole.XCode;
                                            if (_LocalPhuse.Code == -1)
                                            {
                                                if (!_EPhuse.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                                                }

                                            }
                                            else
                                            {
                                                _EPhuse.XCode = _LocalPhuse.XCode;

                                                if (!_EPhuse.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                                                }

                                            }

                                            Atend.Base.Equipment.EStreetBoxPhuse _EStreetBoxPhuse = Atend.Base.Equipment.EStreetBoxPhuse.ServerSelectByCode(Convert.ToInt32(StreetBoxPhuse["code"].ToString()), _connection, _transaction);
                                            Atend.Base.Equipment.EStreetBoxPhuse _LocalStreetBoxPhuse = Atend.Base.Equipment.EStreetBoxPhuse.SelectByCodeForLocal(_EStreetBoxPhuse.Code, LocalTransaction, LocalConnection);
                                            if (_EStreetBoxPhuse.Code != -1)
                                            {
                                                _EStreetBoxPhuse.PhuseXCode = _EPhuse.XCode;
                                                _EStreetBoxPhuse.StreetBoxXCode = SelectedEquipEStreetBox.XCode;
                                                //if (_LocalStreetBoxPhuse.Code == -1)
                                                //{
                                                if (!_EStreetBoxPhuse.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":StreetBoxPhuse");
                                                }

                                                //}
                                                //else
                                                //{

                                                //    _EStreetBoxPhuse.XCode = _LocalStreetBoxPhuse.XCode;
                                                //    if (!_EStreetBoxPhuse.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                                //    {
                                                //        throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":StreetBoxPhuse");
                                                //    }

                                                //}
                                            }
                                            else
                                            {
                                                throw new System.Exception("Lack of data in StreetBox:StreetBoxPhuse");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in StreetBox:Phuse");
                                        }
                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of DAta in StreetBox");
                                }
                                //}
                                break;
                            case Atend.Control.Enum.ProductType.Transformer:
                                ed.WriteMessage("Sub Is : Transformer \n");
                                Atend.Base.Equipment.ETransformer SelectedEquipETransformer = Atend.Base.Equipment.ETransformer.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ETransformer LocalSelectedTransformer = Atend.Base.Equipment.ETransformer.SelectByCodeForLocal(SelectedEquipETransformer.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipETransformer.Code != -1)
                                {

                                    if (LocalSelectedTransformer.Code == -1)
                                    {
                                        if (SelectedEquipETransformer.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipETransformer.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipETransformer.XCode = LocalSelectedTransformer.XCode;
                                        if (SelectedEquipETransformer.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipETransformer.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                                        }

                                    }
                                    //}
                                }
                                break;

                        }
                        #endregion
                        if (NewCode != Guid.Empty)
                        {
                            //ed.WriteMessage("NewCode:{0}\n", NewCode);
                            ed.WriteMessage("********** Send From ServerToLocal SelectedContainer.code={0}\n", SelectedContainer.Code);
                            Atend.Base.Equipment.EProductPackage _EProductPackage = new EProductPackage();
                            _EProductPackage.ContainerPackageCode = SelectedContainer.code;
                            //_EProductPackage.ContainerPackageCode = ServerContainer.Code;
                            _EProductPackage.XCode = NewCode;
                            _EProductPackage.Count = Convert.ToInt32(dr["Count"]);
                            _EProductPackage.TableType = Convert.ToInt16(dr["TableType"]);
                            if (!_EProductPackage.InsertX(LocalTransaction, LocalConnection))
                            {
                                throw new System.Exception("_EProductPackage.ServerInsert failed");
                            }

                            if (!SentFromServerToLocal(Convert.ToInt32(dr["Code"].ToString()), Convert.ToInt32(dr["TableType"]), NewCode, _transaction, _connection, LocalTransaction, LocalConnection))
                            {
                                throw new System.Exception("SentFromLocalToServer inside failed");
                            }
                        }
                        else
                        {
                            //throw new System.Exception("Pro was not inserted or Pro was not in switch");
                        }
                    }
                    //}
                    //else
                    //{
                    //    throw new System.Exception("SelectedContainer.AccessInsert failed");
                    //}
                }
                else
                {
                    ed.WriteMessage("No container Package was found\n");
                    //No container Package was found
                }
            }
            catch (System.Exception ex)
            {
                ed.WriteMessage("ERROR EContainerPackage.SentFromLocalToServer :{0} \n", ex.Message);
                return false;
            }

            return true;
        }




        //private static int FindCode(Guid XcodeProduct, int TableType)
        //{
        //    int ProductCode = 0;
        //    Editor ed = Application.DocumentManager.MdiActiveDocument.Editor;
        //    switch ((Atend.Control.Enum.ProductType)Convert.ToInt32(TableType))
        //    {
        //        case Atend.Control.Enum.ProductType.AirPost:
        //            ed.WriteMessage("Sub Is : AirPost \n");
        //            Atend.Base.Equipment.EAirPost SelectedEquipEAirPost = Atend.Base.Equipment.EAirPost.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipEAirPost.Code;
        //            break;

        //        case Atend.Control.Enum.ProductType.Arm:
        //            ed.WriteMessage("Sub Is : Arm \n");
        //            Atend.Base.Equipment.EArm SelectedEquipEArm = Atend.Base.Equipment.EArm.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEArm.Code;
        //            break;

        //        case Atend.Control.Enum.ProductType.AuoKey3p:
        //            ed.WriteMessage("Sub Is : AuoKey3p \n");

        //            Atend.Base.Equipment.EAutoKey_3p SelectedEquipEAutoKey_3p = Atend.Base.Equipment.EAutoKey_3p.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipEAutoKey_3p.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.Breaker:
        //            ed.WriteMessage("Sub Is : Breaker \n");
        //            Atend.Base.Equipment.EBreaker SelectedEquipEBreaker = Atend.Base.Equipment.EBreaker.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipEBreaker.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.Bus:
        //            ed.WriteMessage("Sub Is : Bus \n");
        //            Atend.Base.Equipment.EBus SelectedEquipEBus = Atend.Base.Equipment.EBus.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEBus.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.CatOut:
        //            ed.WriteMessage("Sub Is : CatOut \n");
        //            Atend.Base.Equipment.ECatOut SelectedEquipECatOut = Atend.Base.Equipment.ECatOut.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipECatOut.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.Cell:
        //            ed.WriteMessage("Sub Is : Cell \n");
        //            Atend.Base.Equipment.ECell SelectedEquipECell = Atend.Base.Equipment.ECell.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipECell.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.Conductor:
        //            ed.WriteMessage("Sub Is : Conductor \n");
        //            Atend.Base.Equipment.EConductor SelectedEquipEConductor = Atend.Base.Equipment.EConductor.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEConductor.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.Consol:
        //            ed.WriteMessage("Sub Is : Consol \n");
        //            //ed.WriteMessage("**XCODE={0}\n", dr["XCode"].ToString());
        //            Atend.Base.Equipment.EConsol SelectedEquipEConsol = Atend.Base.Equipment.EConsol.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipEConsol.Code;

        //            break;
        //        case Atend.Control.Enum.ProductType.Countor:
        //            ed.WriteMessage("Sub Is : Countor \n");
        //            Atend.Base.Equipment.ECountor SelectedEquipECountor = Atend.Base.Equipment.ECountor.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipECountor.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.CT:
        //            ed.WriteMessage("Sub Is : CT \n");
        //            Atend.Base.Equipment.ECT SelectedEquipECT = Atend.Base.Equipment.ECT.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipECT.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.DB:
        //            ed.WriteMessage("Sub Is : DB \n");
        //            Atend.Base.Equipment.EDB SelectedEquipEDB = Atend.Base.Equipment.EDB.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipEDB.Code;
        //            ////if (SelectedEquipEDB.Code != -1)
        //            ////{
        //            ////    //Atend.Base.Equipment.EDB answer = Atend.Base.Equipment.EDB.AccessSelectByXCode(SelectedEquipEDB.XCode, _transaction, _connection);
        //            ////    //if (answer.Code != -1)
        //            ////    //{
        //            ////    //    NewCode = answer.Code;
        //            ////    //}
        //            ////    //else
        //            ////    //{
        //            ////    if (SelectedEquipEDB.ServerInsert(_transaction, _connection, true, false))
        //            ////    {
        //            ////        NewCode = SelectedEquipEDB.Code;
        //            ////        DataTable DBPhuses = Atend.Base.Equipment.EDBPhuse.SelectByDBXCode(new Guid(dr["XCode"].ToString()));
        //            ////        foreach (DataRow DBPhuse in DBPhuses.Rows)
        //            ////        {
        //            ////            Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.SelectByXCode(new Guid(DBPhuse["PhuseXcode"].ToString()));
        //            ////            if (_EPhuse.Code != -1)
        //            ////            {
        //            ////                if (!_EPhuse.ServerInsert(_transaction, _connection, true, true))
        //            ////                {
        //            ////                    throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
        //            ////                }

        //            ////                Atend.Base.Equipment.EDBPhuse _edbPhuse = Atend.Base.Equipment.EDBPhuse.SelectByXCode(new Guid(DBPhuse["XCode"].ToString()));
        //            ////                if (_edbPhuse.Code != -1)
        //            ////                {
        //            ////                    _edbPhuse.DBCode = SelectedEquipEDB.Code;
        //            ////                    _edbPhuse.PhuseCode = _EPhuse.Code;
        //            ////                    if (!_edbPhuse.ServerInsert(_transaction, _connection, false, false))
        //            ////                    {
        //            ////                        throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":DBPhuse");
        //            ////                    }
        //            ////                }
        //            ////                else
        //            ////                {
        //            ////                    throw new System.Exception("Lack of data in DB:DBPhuse");
        //            ////                }
        //            ////            }
        //            ////            else
        //            ////            {
        //            ////                throw new System.Exception("Lack of data in DB:Phuse");
        //            ////            }
        //            ////        }
        //            ////    }
        //            ////    else
        //            ////    {
        //            ////        throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
        //            ////    }
        //            ////    //}
        //            ////}
        //            break;
        //        case Atend.Control.Enum.ProductType.Disconnector:
        //            ed.WriteMessage("Sub Is : Disconnector \n");
        //            Atend.Base.Equipment.EDisconnector SelectedEquipEDisconnector = Atend.Base.Equipment.EDisconnector.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipEDisconnector.Code;
        //            break;

        //        case Atend.Control.Enum.ProductType.Floor:
        //            ed.WriteMessage("Sub Is : Floor \n");
        //            Atend.Base.Equipment.EFloor SelectedEquipEFloor = Atend.Base.Equipment.EFloor.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEFloor.Code;
        //            break;


        //        case Atend.Control.Enum.ProductType.Ground:
        //            ed.WriteMessage("Sub Is : Ground \n");
        //            Atend.Base.Equipment.EGround SelectedEquipEGround = Atend.Base.Equipment.EGround.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEGround.Code;
        //            break;


        //        case Atend.Control.Enum.ProductType.GroundCabel:
        //            Atend.Base.Equipment.EGroundCabel SelectedEquipEMiddleGroundCabel = Atend.Base.Equipment.EGroundCabel.SelectByXCodeForDeign(XcodeProduct);
        //            ProductCode = SelectedEquipEMiddleGroundCabel.Code;
        //            break;

        //        case Atend.Control.Enum.ProductType.GroundPost:
        //            ed.WriteMessage("Sub Is : GroundPost \n");
        //            Atend.Base.Equipment.EGroundPost SelectedEquipEGroundPost = Atend.Base.Equipment.EGroundPost.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipEGroundPost.Code;
        //            break;



        //        case Atend.Control.Enum.ProductType.Halter:
        //            ed.WriteMessage("Sub Is : Halter \n");
        //            Atend.Base.Equipment.EHalter SelectedEquipEHalter = Atend.Base.Equipment.EHalter.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEHalter.Code;
        //            break;

        //        case Atend.Control.Enum.ProductType.HeaderCabel:
        //            ed.WriteMessage("Sub Is : HeaderCabel \n");
        //            Atend.Base.Equipment.EHeaderCabel SelectedEquipEHeaderCabel = Atend.Base.Equipment.EHeaderCabel.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipEHeaderCabel.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.Insulator:
        //            ed.WriteMessage("Sub Is : Insulator \n");
        //            Atend.Base.Equipment.EInsulator SelectedEquipEInsulator = Atend.Base.Equipment.EInsulator.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipEInsulator.Code;
        //            break;


        //        case Atend.Control.Enum.ProductType.InsulatorChain:
        //            ed.WriteMessage("Sub Is : InsulatorChain \n");
        //            Atend.Base.Equipment.EInsulatorChain SelectedEquipEInsulatorChain = Atend.Base.Equipment.EInsulatorChain.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEInsulatorChain.Code;
        //            break;

        //        case Atend.Control.Enum.ProductType.InsulatorPipe:
        //            ed.WriteMessage("Sub Is : InsulatorPipe \n");
        //            Atend.Base.Equipment.EInsulatorPipe SelectedEquipEInsulatorPipe = Atend.Base.Equipment.EInsulatorPipe.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEInsulatorPipe.Code;
        //            break;


        //        case Atend.Control.Enum.ProductType.MiddleJackPanel:
        //            ////ed.WriteMessage("AAA : {0} \n", new Guid(dr["XCode"].ToString()));
        //            ed.WriteMessage("Sub Is : MiddleJackPanel \n");
        //            Atend.Base.Equipment.EJAckPanel SelectedEquipEJAckPanel = Atend.Base.Equipment.EJAckPanel.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipEJAckPanel.Code;
        //            ////if (SelectedEquipEJAckPanel.Code != -1)
        //            ////{
        //            ////    //Atend.Base.Equipment.EJAckPanel answer = Atend.Base.Equipment.EJAckPanel.AccessSelectByXCode(SelectedEquipEJAckPanel.XCode, _transaction, _connection);
        //            ////    //if (answer.Code != -1)
        //            ////    //{
        //            ////    //    NewCode = answer.Code;
        //            ////    //}
        //            ////    //else
        //            ////    //{

        //            ////    Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.SelectByXCode(SelectedEquipEJAckPanel.MasterProductXCode);
        //            ////    if (_eBus.Code != -1)
        //            ////    {
        //            ////        if (!_eBus.ServerInsert(_transaction, _connection, true, true))
        //            ////        {
        //            ////            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
        //            ////        }
        //            ////    }
        //            ////    else
        //            ////    {
        //            ////        throw new System.Exception("Lack of data in MiddleJackPanel:Bus");
        //            ////    }

        //            ////    SelectedEquipEJAckPanel.MasterProductCode = _eBus.Code;
        //            ////    if (SelectedEquipEJAckPanel.ServerInsert(_transaction, _connection, true, false))
        //            ////    {
        //            ////        NewCode = SelectedEquipEJAckPanel.Code;
        //            ////        DataTable _JPS = Atend.Base.Equipment.EJackPanelCell.SelectByJackPanelXCode(SelectedEquipEJAckPanel.XCode);
        //            ////        foreach (DataRow _JPSdr in _JPS.Rows)
        //            ////        {
        //            ////            Atend.Base.Equipment.ECell _eCell = Atend.Base.Equipment.ECell.SelectByXCode(new Guid(_JPSdr["ProductXCode"].ToString()));
        //            ////            if (_eCell.Code != -1)
        //            ////            {
        //            ////                if (!_eCell.ServerInsert(_transaction, _connection, true, true))
        //            ////                {
        //            ////                    throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Cell");
        //            ////                }
        //            ////            }
        //            ////            else
        //            ////            {
        //            ////                throw new System.Exception("Lack of data in MiddleJackPanel:Cell");
        //            ////            }
        //            ////            Atend.Base.Equipment.EJackPanelCell _EJC = Atend.Base.Equipment.EJackPanelCell.SelectByXCode(new Guid(_JPSdr["XCode"].ToString()));
        //            ////            if (_EJC.Code != -1)
        //            ////            {
        //            ////                _EJC.ProductCode = _eCell.Code;
        //            ////                _EJC.JackPanelCode = SelectedEquipEJAckPanel.Code;
        //            ////                if (!_EJC.ServerInsert(_transaction, _connection, false, false))
        //            ////                {
        //            ////                    throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":JackPanelCell");
        //            ////                }
        //            ////            }
        //            ////            else
        //            ////            {
        //            ////                throw new System.Exception("Lack of data in MiddleJackPanel:JackPanelCell");
        //            ////            }
        //            ////        }
        //            ////    }
        //            ////    else
        //            ////    {
        //            ////        throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
        //            ////    }
        //            ////    //}
        //            ////}
        //            break;


        //        case Atend.Control.Enum.ProductType.WeekJackPanel:
        //            ed.WriteMessage("Sub Is : WeekJackPanel \n");
        //            Atend.Base.Equipment.EJackPanelWeek SelectedEquipWeekJackPanel = Atend.Base.Equipment.EJackPanelWeek.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipWeekJackPanel.Code;
        //            break;


        //        case Atend.Control.Enum.ProductType.KablSho:
        //            ed.WriteMessage("Sub Is : KablSho \n");
        //            Atend.Base.Equipment.EKablsho SelectedEquipEKablsho = Atend.Base.Equipment.EKablsho.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEKablsho.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.Kalamp:
        //            ed.WriteMessage("Sub Is : Kalamp \n");
        //            Atend.Base.Equipment.EClamp SelectedEquipEClamp = Atend.Base.Equipment.EClamp.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEClamp.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.Khazan:
        //            ed.WriteMessage("Sub Is : Khazan \n");
        //            Atend.Base.Equipment.EKhazan SelectedEquipEKhazan = Atend.Base.Equipment.EKhazan.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipEKhazan.Code;
        //            break;

        //        case Atend.Control.Enum.ProductType.Light:
        //            ed.WriteMessage("Sub Is : Light \n");
        //            Atend.Base.Equipment.ELight SelectedEquipELight = Atend.Base.Equipment.ELight.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipELight.Code;
        //            break;

        //        case Atend.Control.Enum.ProductType.Mafsal:
        //            ed.WriteMessage("Sub Is : Mafsal \n");
        //            Atend.Base.Equipment.EMafsal SelectedEquipEMafsal = Atend.Base.Equipment.EMafsal.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEMafsal.Code;
        //            break;

        //        case Atend.Control.Enum.ProductType.MeasuredJackPanel:
        //            ed.WriteMessage("Sub Is : MeasuredJackPanel \n");
        //            Atend.Base.Equipment.EMeasuredJackPanel SelectedEquipEMeasuredJackPanel = Atend.Base.Equipment.EMeasuredJackPanel.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEMeasuredJackPanel.Code;

        //            break;


        //        case Atend.Control.Enum.ProductType.MiniatureKey:
        //            ed.WriteMessage("Sub Is : MiniatureKey \n");
        //            Atend.Base.Equipment.EMiniatorKey SelectedEquipEMiniatorKey = Atend.Base.Equipment.EMiniatorKey.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEMiniatorKey.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.PhotoCell:
        //            ed.WriteMessage("Sub Is : PhotoCell \n");
        //            Atend.Base.Equipment.EPhotoCell SelectedEquipEPhotoCell = Atend.Base.Equipment.EPhotoCell.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEPhotoCell.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.Phuse:
        //            ed.WriteMessage("Sub Is : Phuse \n");
        //            Atend.Base.Equipment.EPhuse SelectedEquipEPhuse = Atend.Base.Equipment.EPhuse.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEPhuse.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.PhuseKey:
        //            ed.WriteMessage("Sub Is : PhuseKey \n");
        //            Atend.Base.Equipment.EPhuseKey SelectedEquipEPhuseKey = Atend.Base.Equipment.EPhuseKey.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEPhuseKey.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.PhusePole:
        //            ed.WriteMessage("Sub Is : PhusePole \n");
        //            Atend.Base.Equipment.EPhusePole SelectedEquipEPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEPhusePole.Code;
        //            break;
        //        case Atend.Control.Enum.ProductType.Pole:
        //            ed.WriteMessage("Sub Is : Pole \n");
        //            Atend.Base.Equipment.EPole SelectedEquipEPole = Atend.Base.Equipment.EPole.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipEPole.Code;
        //            break;
        //        ////case Atend.Control.Enum.ProductType.PoleTip:
        //        ////    ed.WriteMessage("Sub Is : PoleTip \n");
        //        ////    Atend.Base.Equipment.EPoleTip SelectedEquipEPoleTip = Atend.Base.Equipment.EPoleTip.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
        //        ////    if (SelectedEquipEPoleTip.Code != -1)
        //        ////    {
        //        ////        //Atend.Base.Equipment.EPoleTip answer = Atend.Base.Equipment.EPoleTip.AccessSelectByXCode(SelectedEquipEPoleTip.XCode, _transaction, _connection);
        //        ////        //if (answer.Code != -1)
        //        ////        //{
        //        ////        //    NewCode = answer.Code;
        //        ////        //}
        //        ////        //else
        //        ////        //{

        //        ////        Atend.Base.Equipment.EPole _ePole = Atend.Base.Equipment.EPole.SelectByXCode(SelectedEquipEPoleTip.PoleXCode);
        //        ////        if (_ePole.Code != -1)
        //        ////        {
        //        ////            if (!_ePole.AccessInsert(_transaction, _connection, true, true))
        //        ////            {
        //        ////                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":POle");
        //        ////            }
        //        ////        }
        //        ////        else
        //        ////        {
        //        ////            throw new System.Exception("Lack of data in poleTip:Pole");
        //        ////        }

        //        ////        Atend.Base.Equipment.EHalter _eHalter = Atend.Base.Equipment.EHalter.SelectByXCode(SelectedEquipEPoleTip.HalterXID);
        //        ////        if (_eHalter.Code != -1)
        //        ////        {
        //        ////            if (!_eHalter.AccessInsert(_transaction, _connection, true, true))
        //        ////            {
        //        ////                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Halter");
        //        ////            }
        //        ////        }
        //        ////        else
        //        ////        {
        //        ////            throw new System.Exception("Lack of data in poleTip:Halter");
        //        ////        }

        //        ////        SelectedEquipEPoleTip.PoleCode = _ePole.Code;
        //        ////        SelectedEquipEPoleTip.HalterID = _eHalter.Code;
        //        ////        if (SelectedEquipEPoleTip.AccessInsert(_transaction, _connection, true, false))
        //        ////        {
        //        ////            NewCode = SelectedEquipEPoleTip.Code;
        //        ////        }
        //        ////        else
        //        ////        {
        //        ////            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
        //        ////        }



        //        ////        //}
        //        ////    }
        //        ////    break;
        //        case Atend.Control.Enum.ProductType.Prop:
        //            ed.WriteMessage("Sub Is : Prop \n");
        //            Atend.Base.Equipment.EProp SelectedEquipEProp = Atend.Base.Equipment.EProp.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEProp.Code;
        //            break;

        //        case Atend.Control.Enum.ProductType.PT:
        //            ed.WriteMessage("Sub Is : PT \n");
        //            Atend.Base.Equipment.EPT SelectedEquipEPT = Atend.Base.Equipment.EPT.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEPT.Code;
        //            break;



        //        case Atend.Control.Enum.ProductType.Ramp:
        //            ed.WriteMessage("Sub Is : Ramp \n");
        //            Atend.Base.Equipment.ERamp SelectedEquipERamp = Atend.Base.Equipment.ERamp.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipERamp.Code;
        //            break;


        //        case Atend.Control.Enum.ProductType.ReCloser:
        //            ed.WriteMessage("Sub Is : ReCloser \n");
        //            Atend.Base.Equipment.EReCloser SelectedEquipEReCloser = Atend.Base.Equipment.EReCloser.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipEReCloser.Code;

        //            break;

        //        case Atend.Control.Enum.ProductType.Rod:
        //            ed.WriteMessage("Sub Is : Rod \n");
        //            Atend.Base.Equipment.ERod SelectedEquipERod = Atend.Base.Equipment.ERod.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipERod.Code;

        //            break;

        //        case Atend.Control.Enum.ProductType.SectionLizer:
        //            ed.WriteMessage("Sub Is : SectionLizer \n");

        //            Atend.Base.Equipment.ESectionLizer SelectedEquipESectionLizer = Atend.Base.Equipment.ESectionLizer.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipESectionLizer.Code;
        //            break;

        //        case Atend.Control.Enum.ProductType.SelfKeeper:
        //            ed.WriteMessage("Sub Is : SelfKeeper \n");
        //            Atend.Base.Equipment.ESelfKeeper SelectedEquipESelfKeeper = Atend.Base.Equipment.ESelfKeeper.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipESelfKeeper.Code;
        //            break;
        //        //case Atend.Control.Enum.ProductType.SelfKeeperTip:
        //        //    ed.WriteMessage("Sub Is : SelfKeeperTip \n");
        //        //    Atend.Base.Equipment.ESelfKeeperTip SelectedEquipESelfKeeperTip = Atend.Base.Equipment.ESelfKeeperTip.SelectByXCode(new Guid(dr["XCode"].ToString()));
        //        //    if (SelectedEquipESelfKeeperTip.Code != -1)
        //        //    {
        //        //        //Atend.Base.Equipment.ESelfKeeperTip answer = Atend.Base.Equipment.ESelfKeeperTip.AccessSelectByXCode(SelectedEquipESelfKeeperTip.XCode, _transaction, _connection);
        //        //        //if (answer.Code != -1)
        //        //        //{
        //        //        //    NewCode = answer.Code;
        //        //        //}
        //        //        //else
        //        //        //{
        //        //        if (SelectedEquipESelfKeeperTip.AccessInsert(_transaction, _connection))
        //        //        {
        //        //            NewCode = SelectedEquipESelfKeeperTip.Code;
        //        //        }
        //        //        else
        //        //        {
        //        //            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
        //        //        }
        //        //        //}
        //        //    }
        //        //    break;

        //        case Atend.Control.Enum.ProductType.StreetBox:
        //            ed.WriteMessage("Sub Is : StreetBox \n");
        //            Atend.Base.Equipment.EStreetBox SelectedEquipEStreetBox = Atend.Base.Equipment.EStreetBox.SelectByXCodeForDesign(XcodeProduct);
        //            ProductCode = SelectedEquipEStreetBox.Code;
        //            ////if (SelectedEquipEStreetBox.Code != -1)
        //            ////{
        //            ////    //Atend.Base.Equipment.EStreetBox answer = Atend.Base.Equipment.EStreetBox.AccessSelectByXCode(SelectedEquipEStreetBox.XCode, _transaction, _connection);
        //            ////    //if (answer.Code != -1)
        //            ////    //{
        //            ////    //    NewCode = answer.Code;
        //            ////    //}
        //            ////    //else
        //            ////    //{
        //            ////    if (SelectedEquipEStreetBox.ServerInsert(_transaction, _connection, true, false))
        //            ////    {
        //            ////        NewCode = SelectedEquipEStreetBox.Code;
        //            ////        DataTable StreetBoxPhuses = Atend.Base.Equipment.EStreetBoxPhuse.SelectByStreetBoxXCode(new Guid(dr["XCode"].ToString()));
        //            ////        foreach (DataRow StreetBoxPhuse in StreetBoxPhuses.Rows)
        //            ////        {
        //            ////            //ed.WriteMessage("110\n");
        //            ////            Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.SelectByXCode(new Guid(StreetBoxPhuse["PhuseXCode"].ToString()));
        //            ////            if (_EPhuse.Code != -1)
        //            ////            {
        //            ////                //ed.WriteMessage("111\n");
        //            ////                Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCode(_EPhuse.PhusePoleXCode);
        //            ////                if (_EPhusePole.Code != -1)
        //            ////                {
        //            ////                    //ed.WriteMessage("112\n");
        //            ////                    if (!_EPhusePole.ServerInsert(_transaction, _connection, true, true))
        //            ////                    {
        //            ////                        throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":PhusePole");
        //            ////                    }
        //            ////                }
        //            ////                else
        //            ////                {
        //            ////                    throw new System.Exception("Lack of data in StreetBox:Phuse:PhusePole");
        //            ////                }
        //            ////                //ed.WriteMessage("streetbox was :{0} \n", _EPhusePole.Code);
        //            ////                _EPhuse.PhusePoleCode = _EPhusePole.Code;
        //            ////                if (!_EPhuse.ServerInsert(_transaction, _connection, true, true))
        //            ////                {
        //            ////                    throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
        //            ////                }

        //            ////                Atend.Base.Equipment.EStreetBoxPhuse _EStreetBoxPhuse = Atend.Base.Equipment.EStreetBoxPhuse.SelectByXCode(new Guid(StreetBoxPhuse["Xcode"].ToString()));
        //            ////                if (_EStreetBoxPhuse.Code != -1)
        //            ////                {
        //            ////                    _EStreetBoxPhuse.PhuseCode = _EPhuse.Code;
        //            ////                    _EStreetBoxPhuse.StreetBoxCode = SelectedEquipEStreetBox.Code;
        //            ////                    if (!_EStreetBoxPhuse.ServerInsert(_transaction, _connection, true, false))
        //            ////                    {
        //            ////                        throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":StreetBoxPhuse");
        //            ////                    }
        //            ////                }
        //            ////                else
        //            ////                {
        //            ////                    throw new System.Exception("Lack of data in StreetBox:StreetBoxPhuse");
        //            ////                }
        //            ////            }
        //            ////            else
        //            ////            {
        //            ////                throw new System.Exception("Lack of data in StreetBox:Phuse");
        //            ////            }
        //            ////        }
        //            ////    }
        //            ////    else
        //            ////    {
        //            ////        throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
        //            ////    }
        //            ////}
        //            break;
        //        case Atend.Control.Enum.ProductType.Transformer:
        //            ed.WriteMessage("Sub Is : Transformer \n");
        //            Atend.Base.Equipment.ETransformer SelectedEquipETransformer = Atend.Base.Equipment.ETransformer.SelectByXCode(XcodeProduct);
        //            ProductCode = SelectedEquipETransformer.Code;
        //            break;

        //    }
        //    return ProductCode;
        //}

        public static bool GetFromServer(int Code, int Type)
        {
            Editor ed = Application.DocumentManager.MdiActiveDocument.Editor;
            SqlTransaction _transaction = null;
            SqlConnection _connection = new SqlConnection(Atend.Control.ConnectionString.ServercnString);

            SqlTransaction LocalTransaction = null;
            SqlConnection LocalConnection = new SqlConnection(Atend.Control.ConnectionString.LocalcnString);
            try
            {
                _connection.Open();
                LocalConnection.Open();
                try
                {
                    _transaction = _connection.BeginTransaction();
                    LocalTransaction = LocalConnection.BeginTransaction();
                    try
                    {
                        Guid NewCode = new Guid();
                        //Atend.Base.Equipment.EContainerPackage SelectedContainer = Atend.Base.Equipment.EContainerPackage.SelectByContainerXCodeAndType(LocalTransaction, LocalConnection, ContainerCode, Type);
                        //Atend.Base.Equipment.EContainerPackage ServerContainer = Atend.Base.Equipment.EContainerPackage.selectByContainerCodeAndType(_transaction, _connection, Code, Type);
                        //if (ServerContainer.ContainerCode != -1)
                        //{
                        //    //ed.WriteMessage("container was found \n ");

                        //    int LastContainerPackageCode = ServerContainer.Code;
                        //    ServerContainer.XCode = ContainerCode;
                        //    if (SelectedContainer.Code == 0)
                        //    {
                        //        if (!ServerContainer.InsertX(LocalTransaction, LocalConnection))
                        //            throw new System.Exception("SelectedContainer.ServerInsert failed");
                        //    }
                        //    else
                        //    {
                        //        if (!Atend.Base.Equipment.EProductPackage.DeleteX(LocalTransaction, LocalConnection, SelectedContainer.Code))
                        //            throw new System.Exception("Delete ProductPackage Failed");
                        //    }
                        //    //if (SelectedContainer.Insert(_transaction, _connection))
                        //    //{
                        //    DataTable Products = Atend.Base.Equipment.EProductPackage.SelectByContainerPackageCodeForLocal(LastContainerPackageCode, _transaction, _connection);
                        //    ed.WriteMessage("SubProductsCount:{0}\n", Products.Rows.Count);
                        //    //foreach (DataRow dr in Products.Rows)
                        //    //{
                        //    //    //switch access insert
                        //    //    Guid NewCode = Guid.Empty;
                        //    //    //ed.WriteMessage("~~~~~ P T : {0} ~~~~~~\n", Convert.ToInt32(Type));
                        #region Switch
                        switch ((Atend.Control.Enum.ProductType)Convert.ToInt32(Type))
                        {
                            case Atend.Control.Enum.ProductType.AirPost:
                                ed.WriteMessage("Sub Is : AirPost \n");
                                Atend.Base.Equipment.EAirPost SelectedEquipEAirPost = Atend.Base.Equipment.EAirPost.ServerSelectByCode(Convert.ToInt32(Code), _connection, _transaction);
                                Atend.Base.Equipment.EAirPost LocalSelectedEquipAirPost = Atend.Base.Equipment.EAirPost.SelectByCodeForLocal(SelectedEquipEAirPost.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipEAirPost.Code != -1)
                                {
                                    if (LocalSelectedEquipAirPost.Code == -1)
                                    {
                                        if (SelectedEquipEAirPost.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEAirPost.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {

                                        SelectedEquipEAirPost.XCode = LocalSelectedEquipAirPost.XCode;
                                        if (SelectedEquipEAirPost.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEAirPost.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                }
                                else
                                {
                                    ed.WriteMessage(Convert.ToInt32(Type).ToString() + " does not exist \n");
                                }
                                break;

                            case Atend.Control.Enum.ProductType.Arm:
                                ed.WriteMessage("Sub Is : Arm \n");
                                Atend.Base.Equipment.EArm SelectedEquipEArm = Atend.Base.Equipment.EArm.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EArm LocalSelectedArm = Atend.Base.Equipment.EArm.SelectByCodeForLocal(SelectedEquipEArm.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipEArm.Code != -1)
                                {

                                    if (LocalSelectedArm.Code == -1)
                                    {
                                        if (SelectedEquipEArm.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEArm.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("container error in LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEArm.XCode = LocalSelectedArm.XCode;
                                        if (SelectedEquipEArm.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEArm.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("container error in ServerUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.AuoKey3p:
                                ed.WriteMessage("Sub Is : AuoKey3p \n");

                                Atend.Base.Equipment.EAutoKey_3p SelectedEquipEAutoKey_3p = Atend.Base.Equipment.EAutoKey_3p.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EAutoKey_3p LocalSelectedAutokey = Atend.Base.Equipment.EAutoKey_3p.SelectByCodeForLocal(SelectedEquipEAutoKey_3p.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipEAutoKey_3p.Code != -1)
                                {

                                    if (LocalSelectedAutokey.Code == -1)
                                    {
                                        if (SelectedEquipEAutoKey_3p.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEAutoKey_3p.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEAutoKey_3p.XCode = LocalSelectedAutokey.XCode;
                                        if (SelectedEquipEAutoKey_3p.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEAutoKey_3p.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }


                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Breaker:
                                ed.WriteMessage("Sub Is : Breaker \n");
                                Atend.Base.Equipment.EBreaker SelectedEquipEBreaker = Atend.Base.Equipment.EBreaker.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EBreaker LocalSelectedBreaker = Atend.Base.Equipment.EBreaker.SelectByCodeForLocal(SelectedEquipEBreaker.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEBreaker.Code != -1)
                                {

                                    if (LocalSelectedBreaker.Code == -1)
                                    {
                                        if (SelectedEquipEBreaker.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEBreaker.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEBreaker.XCode = LocalSelectedBreaker.XCode;
                                        if (SelectedEquipEBreaker.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEBreaker.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Bus:
                                ed.WriteMessage("Sub Is : Bus \n");
                                Atend.Base.Equipment.EBus SelectedEquipEBus = Atend.Base.Equipment.EBus.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EBus LocalSelectedBus = Atend.Base.Equipment.EBus.SelectByCodeForLocal(SelectedEquipEBus.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEBus.Code != -1)
                                {

                                    if (LocalSelectedBus.Code == -1)
                                    {
                                        if (SelectedEquipEBus.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEBus.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEBus.XCode = LocalSelectedBus.XCode;

                                        if (SelectedEquipEBus.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEBus.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalrUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.CatOut:
                                ed.WriteMessage("Sub Is : CatOut \n");
                                Atend.Base.Equipment.ECatOut SelectedEquipECatOut = Atend.Base.Equipment.ECatOut.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ECatOut LocalSelectedCatout = Atend.Base.Equipment.ECatOut.SelectByCodeForLocal(SelectedEquipECatOut.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipECatOut.Code != -1)
                                {

                                    if (LocalSelectedCatout.Code == -1)
                                    {
                                        if (SelectedEquipECatOut.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECatOut.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipECatOut.XCode = LocalSelectedCatout.XCode;
                                        if (SelectedEquipECatOut.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECatOut.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Cell:
                                ed.WriteMessage("Sub Is : Cell \n");
                                Atend.Base.Equipment.ECell SelectedEquipECell = Atend.Base.Equipment.ECell.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ECell LocalSelectedCell = Atend.Base.Equipment.ECell.SelectByCodeForLocal(SelectedEquipECell.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipECell.Code != -1)
                                {

                                    if (LocalSelectedCell.Code == -1)
                                    {
                                        if (SelectedEquipECell.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECell.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipECell.XCode = LocalSelectedCell.XCode;
                                        if (SelectedEquipECell.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECell.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Conductor:
                                ed.WriteMessage("Sub Is : Conductor \n");
                                Atend.Base.Equipment.EConductor SelectedEquipEConductor = Atend.Base.Equipment.EConductor.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EConductor LocalSelectedConductor = Atend.Base.Equipment.EConductor.SelectByCodeForLocal(SelectedEquipEConductor.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEConductor.Code != -1)
                                {

                                    if (LocalSelectedConductor.Code == -1)
                                    {
                                        if (SelectedEquipEConductor.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEConductor.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {

                                        SelectedEquipEConductor.XCode = LocalSelectedConductor.XCode;
                                        if (SelectedEquipEConductor.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEConductor.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.ConductorTip:
                                ed.WriteMessage("Sub Is : Conductor \n");
                                Atend.Base.Equipment.EConductorTip SelectedEquipEConductorTip = Atend.Base.Equipment.EConductorTip.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EConductorTip LocalSelectedConductorTip = Atend.Base.Equipment.EConductorTip.SelectByCodeForLocal(SelectedEquipEConductorTip.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEConductorTip.Code != -1)
                                {
                                    Atend.Base.Equipment.EConductor SelectedEquiphaseCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedEquipEConductorTip.PhaseProductCode, _connection, _transaction);
                                    Atend.Base.Equipment.EConductor LocalSelectedEquiphaseCond = Atend.Base.Equipment.EConductor.SelectByCodeForLocal(SelectedEquiphaseCond.Code, LocalTransaction, LocalConnection);

                                    Atend.Base.Equipment.EConductor SelectedEquiNightCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedEquipEConductorTip.NightProductCode, _connection, _transaction);
                                    Atend.Base.Equipment.EConductor LocalSelectedEquiNightCond = Atend.Base.Equipment.EConductor.SelectByCodeForLocal(SelectedEquiNightCond.Code, LocalTransaction, LocalConnection);

                                    Atend.Base.Equipment.EConductor SelectedEquiNeutralCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedEquipEConductorTip.NeutralProductCode, _connection, _transaction);
                                    Atend.Base.Equipment.EConductor LocalSelectedEquiNeutralCond = Atend.Base.Equipment.EConductor.SelectByCodeForLocal(SelectedEquiNeutralCond.Code, LocalTransaction, LocalConnection);

                                    if (SelectedEquiphaseCond.Code != -1)
                                    {
                                        if (LocalSelectedEquiphaseCond.Code == -1)
                                        {
                                            if (SelectedEquiphaseCond.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedEquiphaseCond.XCode;

                                            }
                                            else
                                            {
                                                throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                            }
                                        }
                                        else
                                        {

                                            SelectedEquiphaseCond.XCode = LocalSelectedEquiphaseCond.XCode;
                                            if (SelectedEquiphaseCond.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedEquiphaseCond.XCode;
                                            }
                                            else
                                            {
                                                throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                            }

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data In SelectedEquiphaseCond in CondTip");
                                    }




                                    if (SelectedEquiNeutralCond.Code != -1)
                                    {
                                        if (LocalSelectedEquiNeutralCond.Code == -1)
                                        {
                                            if (SelectedEquiNeutralCond.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedEquiNeutralCond.XCode;

                                            }
                                            else
                                            {
                                                throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                            }
                                        }
                                        else
                                        {

                                            SelectedEquiNeutralCond.XCode = LocalSelectedEquiNeutralCond.XCode;
                                            if (SelectedEquiNeutralCond.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedEquiNeutralCond.XCode;
                                            }
                                            else
                                            {
                                                throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                            }

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data In SelectedEquiNutralCond in CondTip");
                                    }




                                    if (SelectedEquiNightCond.Code != -1)
                                    {
                                        if (LocalSelectedEquiNightCond.Code == -1)
                                        {
                                            if (SelectedEquiNightCond.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedEquiNightCond.XCode;

                                            }
                                            else
                                            {
                                                throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                            }
                                        }
                                        else
                                        {

                                            SelectedEquiNightCond.XCode = LocalSelectedEquiNightCond.XCode;
                                            if (SelectedEquiNightCond.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedEquiNightCond.XCode;
                                            }
                                            else
                                            {
                                                throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                            }

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data In SelectedEquiNightCond in CondTip");
                                    }


                                    SelectedEquipEConductorTip.NeutralProductXCode = SelectedEquiNeutralCond.XCode;
                                    SelectedEquipEConductorTip.NightProductXCode = SelectedEquiNightCond.XCode;
                                    SelectedEquipEConductorTip.PhaseProductXCode = SelectedEquiphaseCond.XCode;

                                    if (LocalSelectedConductorTip.Code == -1)
                                    {
                                        if (SelectedEquipEConductorTip.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEConductorTip.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {

                                        SelectedEquipEConductorTip.XCode = LocalSelectedConductorTip.XCode;
                                        if (SelectedEquipEConductorTip.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEConductorTip.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.Consol:
                                ed.WriteMessage("Sub Is : Consol \n");
                                //ed.WriteMessage("**XCODE={0}\n", dr["XCode"].ToString());
                                Atend.Base.Equipment.EConsol SelectedEquipEConsol = Atend.Base.Equipment.EConsol.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EConsol LocalSelectedConsol = Atend.Base.Equipment.EConsol.SelectByCodeForLocal(SelectedEquipEConsol.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEConsol.Code != -1)
                                {

                                    if (LocalSelectedConsol.Code == -1)
                                    {
                                        if (SelectedEquipEConsol.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEConsol.XCode;


                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEConsol.XCode = LocalSelectedConsol.XCode;

                                        if (SelectedEquipEConsol.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEConsol.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    // }
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Countor:
                                ed.WriteMessage("Sub Is : Countor \n");
                                Atend.Base.Equipment.ECountor SelectedEquipECountor = Atend.Base.Equipment.ECountor.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ECountor LocalSelectedCountor = Atend.Base.Equipment.ECountor.SelectByCodeForLocal(SelectedEquipECountor.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipECountor.Code != -1)
                                {

                                    if (LocalSelectedCountor.Code == -1)
                                    {
                                        if (SelectedEquipECountor.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECountor.XCode;


                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {

                                        SelectedEquipECountor.XCode = LocalSelectedCountor.XCode;
                                        if (SelectedEquipECountor.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECountor.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }


                                    // }
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.CT:
                                ed.WriteMessage("Sub Is : CT \n");
                                Atend.Base.Equipment.ECT SelectedEquipECT = Atend.Base.Equipment.ECT.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ECT LocalSelectedCT = Atend.Base.Equipment.ECT.SelectByCodeForLocal(SelectedEquipECT.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipECT.Code != -1)
                                {

                                    if (LocalSelectedCT.Code == -1)
                                    {
                                        if (SelectedEquipECT.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECT.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipECT.XCode = LocalSelectedCT.XCode;
                                        if (SelectedEquipECT.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipECT.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }

                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.DB:
                                ed.WriteMessage("Sub Is : DB 2\n");
                                Atend.Base.Equipment.EDB SelectedEquipEDB = Atend.Base.Equipment.EDB.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EDB LocalSelectedDB = Atend.Base.Equipment.EDB.SelectByCodeForLocal(SelectedEquipEDB.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEDB.Code != -1)
                                {

                                    if (LocalSelectedDB.Code == -1)
                                    {
                                        ed.WriteMessage("GO For LocalInsertX\n");
                                        if (SelectedEquipEDB.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEDB.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());

                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEDB.XCode = LocalSelectedDB.XCode;
                                        ed.WriteMessage("Go For Updatex\n");
                                        if (SelectedEquipEDB.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEDB.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());

                                        }

                                    }

                                    DataTable DBPhuses = Atend.Base.Equipment.EDBPhuse.SelectByDBCode(Convert.ToInt32(Code.ToString()), _transaction, _connection);
                                    ed.WriteMessage("DBPhuses.Count={0},DBCODE={1}\n", DBPhuses.Rows.Count, Code);
                                    if (!Atend.Base.Equipment.EDBPhuse.DeleteX(LocalTransaction, LocalConnection, SelectedEquipEDB.XCode))
                                    {
                                        throw new System.Exception("Error In Delete DBPHUSE ");
                                    }

                                    foreach (DataRow DBPhuse in DBPhuses.Rows)
                                    {
                                        Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(Convert.ToInt32(DBPhuse["Phusecode"].ToString()), _connection, _transaction);
                                        Atend.Base.Equipment.EPhuse _LocalEPhuse = Atend.Base.Equipment.EPhuse.SelectByCodeForLocal(_EPhuse.Code, LocalTransaction, LocalConnection);
                                        ed.WriteMessage("_EPhuse.code={0},_LocalEPhuse={1}_\n", _EPhuse.Code, _LocalEPhuse.Code);

                                        Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(Convert.ToInt32(_EPhuse.PhusePoleCode.ToString()), _connection, _transaction);
                                        Atend.Base.Equipment.EPhusePole _LocalEPhusePole = Atend.Base.Equipment.EPhusePole.SelectByCodeForLocal(_EPhusePole.Code, LocalTransaction, LocalConnection);

                                        if (_EPhusePole.Code != -1)
                                        {
                                            if (_LocalEPhusePole.Code == -1)
                                            {
                                                ed.WriteMessage("1\n");
                                                if (!_EPhusePole.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString() + ":Phuse");
                                                }

                                            }
                                            else
                                            {
                                                _EPhusePole.XCode = _LocalEPhusePole.XCode;
                                                ed.WriteMessage("2\n");
                                                if (!_EPhusePole.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString() + ":Phuse");
                                                }

                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack Of Data In EPhusPole inDB");
                                        }



                                        _EPhuse.PhusePoleXCode = _EPhusePole.XCode;
                                        if (_EPhuse.Code != -1)
                                        {
                                            if (_LocalEPhuse.Code == -1)
                                            {
                                                ed.WriteMessage("1\n");
                                                if (!_EPhuse.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString() + ":Phuse");
                                                }

                                            }
                                            else
                                            {
                                                _EPhuse.XCode = _LocalEPhuse.XCode;
                                                ed.WriteMessage("2\n");
                                                if (!_EPhuse.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString() + ":Phuse");
                                                }

                                            }
                                            ed.WriteMessage("100\n");
                                            Atend.Base.Equipment.EDBPhuse _edbPhuse = Atend.Base.Equipment.EDBPhuse.ServerSelectByCode(Convert.ToInt32(DBPhuse["Code"].ToString()), _connection, _transaction);
                                            ed.WriteMessage("101\n");
                                            Atend.Base.Equipment.EDBPhuse _LocaledbPhuse = Atend.Base.Equipment.EDBPhuse.SelectByCode(LocalTransaction, LocalConnection, _edbPhuse.Code);
                                            ed.WriteMessage("_LocaledbPhuse.code={0},_edbPhuse={1}\n", _LocaledbPhuse.Code, _edbPhuse.Code);
                                            if (_edbPhuse.Code != -1)
                                            {
                                                _edbPhuse.DBXCode = SelectedEquipEDB.XCode;
                                                _edbPhuse.PhuseXCode = _EPhuse.XCode;
                                                //if (_edbPhuse.Code == -1)
                                                //{
                                                ed.WriteMessage("LocalInsertX\n");
                                                if (!_edbPhuse.LocalInsertX(LocalTransaction, LocalConnection, false, false, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString() + ":DBPhuse");
                                                }

                                                //}
                                                //else
                                                //{
                                                //    _edbPhuse.XCode = _LocaledbPhuse.XCode;
                                                //    ed.WriteMessage("LocalUpdateX\n");

                                                //    if (!_edbPhuse.LocalUpdateX(LocalTransaction, LocalConnection, false, false, _transaction, _connection))
                                                //    {
                                                //        throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString() + ":DBPhuse");
                                                //    }

                                                //}
                                            }
                                            else
                                            {
                                                throw new System.Exception("Lack of Data in edbPhuse");
                                            }

                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack Of Data in DBPhuse");
                                        }

                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }


                                break;
                            case Atend.Control.Enum.ProductType.Disconnector:
                                ed.WriteMessage("Sub Is : Disconnector \n");
                                Atend.Base.Equipment.EDisconnector SelectedEquipEDisconnector = Atend.Base.Equipment.EDisconnector.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EDisconnector LocalSelectedDissconnector = Atend.Base.Equipment.EDisconnector.SelectByCodeForLocal(SelectedEquipEDisconnector.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEDisconnector.Code != -1)
                                {

                                    if (LocalSelectedDissconnector.Code == -1)
                                    {
                                        if (SelectedEquipEDisconnector.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEDisconnector.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {

                                        SelectedEquipEDisconnector.XCode = LocalSelectedDissconnector.XCode;
                                        if (SelectedEquipEDisconnector.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEDisconnector.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.Floor:
                                ed.WriteMessage("Sub Is : Floor \n");
                                Atend.Base.Equipment.EFloor SelectedEquipEFloor = Atend.Base.Equipment.EFloor.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                ed.WriteMessage("1\n");
                                Atend.Base.Equipment.EFloor LocalSelectedFloor = Atend.Base.Equipment.EFloor.SelectByCodeForLocal(SelectedEquipEFloor.Code, LocalTransaction, LocalConnection);
                                ed.WriteMessage("2\n");
                                if (SelectedEquipEFloor.Code != -1)
                                {
                                    ed.WriteMessage("3\n");
                                    if (LocalSelectedFloor.Code == -1)
                                    {
                                        ed.WriteMessage("4\n");
                                        if (SelectedEquipEFloor.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEFloor.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        ed.WriteMessage("5\n");
                                        SelectedEquipEFloor.XCode = LocalSelectedFloor.XCode;
                                        if (SelectedEquipEFloor.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEFloor.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.Ground:
                                ed.WriteMessage("Sub Is : Ground \n");
                                Atend.Base.Equipment.EGround SelectedEquipEGround = Atend.Base.Equipment.EGround.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EGround LocalSelectedGround = Atend.Base.Equipment.EGround.SelectByCodeForLocal(SelectedEquipEGround.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEGround.Code != -1)
                                {

                                    if (LocalSelectedGround.Code == -1)
                                    {
                                        if (SelectedEquipEGround.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEGround.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEGround.XCode = LocalSelectedGround.XCode;

                                        if (SelectedEquipEGround.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEGround.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());

                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.GroundCabel:
                                Atend.Base.Equipment.EGroundCabel SelectedEquipEMiddleGroundCabel = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EGroundCabel LocalSelectedMidGroundCabel = Atend.Base.Equipment.EGroundCabel.SelectByCodeForLocal(SelectedEquipEMiddleGroundCabel.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEMiddleGroundCabel.Code != -1)
                                {

                                    if (LocalSelectedMidGroundCabel.Code == -1)
                                    {
                                        if (SelectedEquipEMiddleGroundCabel.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMiddleGroundCabel.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEMiddleGroundCabel.XCode = LocalSelectedMidGroundCabel.XCode;
                                        if (SelectedEquipEMiddleGroundCabel.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMiddleGroundCabel.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpDate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;



                            case Atend.Control.Enum.ProductType.GroundCabelTip:

                                Atend.Base.Equipment.EGroundCabelTip SelectedEquipEMiddleGroundCabelTip = Atend.Base.Equipment.EGroundCabelTip.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EGroundCabelTip LocalSelectedMidGroundCabelTip = Atend.Base.Equipment.EGroundCabelTip.SelectByCodeForLocal(SelectedEquipEMiddleGroundCabelTip.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEMiddleGroundCabelTip.Code != -1)
                                {

                                    Atend.Base.Equipment.EGroundCabel SelectedMidGroundPhaseCabel = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(SelectedEquipEMiddleGroundCabelTip.PhaseProductCode, _connection, _transaction);
                                    Atend.Base.Equipment.EGroundCabel LocalSelectedMidGroundPhaseCabel = Atend.Base.Equipment.EGroundCabel.SelectByCodeForLocal(SelectedMidGroundPhaseCabel.Code, LocalTransaction, LocalConnection);


                                    Atend.Base.Equipment.EGroundCabel SelectedMidGroundNeutralCabel = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(SelectedEquipEMiddleGroundCabelTip.NeutralProductCode, _connection, _transaction);
                                    Atend.Base.Equipment.EGroundCabel LocalSelectedMidGroundNuetralCabel = Atend.Base.Equipment.EGroundCabel.SelectByCodeForLocal(SelectedMidGroundNeutralCabel.Code, LocalTransaction, LocalConnection);


                                    if (SelectedMidGroundPhaseCabel.Code != -1)
                                    {

                                        if (LocalSelectedMidGroundPhaseCabel.Code == -1)
                                        {
                                            if (SelectedMidGroundPhaseCabel.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedMidGroundPhaseCabel.XCode;

                                            }
                                            else
                                            {
                                                throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                            }
                                        }
                                        else
                                        {
                                            SelectedMidGroundPhaseCabel.XCode = LocalSelectedMidGroundPhaseCabel.XCode;
                                            if (SelectedMidGroundPhaseCabel.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedMidGroundPhaseCabel.XCode;
                                            }
                                            else
                                            {
                                                throw new System.Exception("LocalUpDate failed" + Convert.ToInt32(Type).ToString());
                                            }

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("SelectedMidGroundPhaseCabel Lack Of Data");
                                    }


                                    if (SelectedMidGroundNeutralCabel.Code != -1)
                                    {

                                        if (LocalSelectedMidGroundNuetralCabel.Code == -1)
                                        {
                                            if (SelectedMidGroundNeutralCabel.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedMidGroundNeutralCabel.XCode;

                                            }
                                            else
                                            {
                                                throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                            }
                                        }
                                        else
                                        {
                                            SelectedMidGroundNeutralCabel.XCode = LocalSelectedMidGroundNuetralCabel.XCode;
                                            if (SelectedMidGroundNeutralCabel.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedMidGroundNeutralCabel.XCode;
                                            }
                                            else
                                            {
                                                throw new System.Exception("LocalUpDate failed" + Convert.ToInt32(Type).ToString());
                                            }

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("SelectedMidGroundPhaseCabel Lack Of Data");
                                    }


                                    SelectedEquipEMiddleGroundCabelTip.NeutralProductXCode = SelectedMidGroundNeutralCabel.XCode;
                                    SelectedEquipEMiddleGroundCabelTip.PhaseProductXCode = SelectedMidGroundPhaseCabel.XCode;

                                    if (LocalSelectedMidGroundCabelTip.Code == -1)
                                    {
                                        if (SelectedEquipEMiddleGroundCabelTip.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMiddleGroundCabelTip.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEMiddleGroundCabelTip.XCode = LocalSelectedMidGroundCabelTip.XCode;
                                        if (SelectedEquipEMiddleGroundCabelTip.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMiddleGroundCabelTip.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpDate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.GroundPost:
                                ed.WriteMessage("Sub Is : GroundPost \n");
                                Atend.Base.Equipment.EGroundPost SelectedEquipEGroundPost = Atend.Base.Equipment.EGroundPost.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EGroundPost LocalSelectedGroundPost = Atend.Base.Equipment.EGroundPost.SelectByCodeForLocal(SelectedEquipEGroundPost.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEGroundPost.Code != -1)
                                {
                                    if (LocalSelectedGroundPost.Code == -1)
                                    {
                                        if (SelectedEquipEGroundPost.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEGroundPost.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEGroundPost.XCode = LocalSelectedGroundPost.XCode;
                                        if (SelectedEquipEGroundPost.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEGroundPost.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;



                            case Atend.Control.Enum.ProductType.Halter:
                                ed.WriteMessage("Sub Is : Halter \n");
                                Atend.Base.Equipment.EHalter SelectedEquipEHalter = Atend.Base.Equipment.EHalter.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EHalter LocalSelectedEquipEHalter = Atend.Base.Equipment.EHalter.SelectByCodeForLocal(Convert.ToInt32(Code.ToString()), LocalTransaction, LocalConnection);

                                if (SelectedEquipEHalter.Code != -1)
                                {

                                    if (LocalSelectedEquipEHalter.Code == -1)
                                    {
                                        if (SelectedEquipEHalter.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEHalter.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEHalter.XCode = LocalSelectedEquipEHalter.XCode;
                                        if (SelectedEquipEHalter.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEHalter.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;

                            //case Atend.Control.Enum.ProductType.Halter:
                            //    Atend.Base.Equipment. SelectedEquip = Atend.Base.Equipment.EBreaker.SelectByXCode(XCode);
                            //    if (SelectedEquip.Code != -1)
                            //    {
                            //        if (SelectedEquip.AccessInsert(_transaction, _connection))
                            //        {
                            //            NewCode = SelectedEquip.Code;
                            //        }
                            //        else
                            //        {
                            //            throw new Exception("{0}.AccessInsert failed", ((Atend.Control.Enum.ProductType)Convert.ToInt32(Type)).ToString());
                            //        }
                            //    }
                            //    break;
                            case Atend.Control.Enum.ProductType.HeaderCabel:
                                ed.WriteMessage("Sub Is : HeaderCabel \n");
                                Atend.Base.Equipment.EHeaderCabel SelectedEquipEHeaderCabel = Atend.Base.Equipment.EHeaderCabel.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EHeaderCabel LocalSelectedEquipEHeaderCabel = Atend.Base.Equipment.EHeaderCabel.SelectByCodeForLocal(Convert.ToInt32(Code.ToString()), LocalTransaction, LocalConnection);

                                if (SelectedEquipEHeaderCabel.Code != -1)
                                {

                                    if (LocalSelectedEquipEHeaderCabel.Code == -1)
                                    {
                                        if (SelectedEquipEHeaderCabel.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEHeaderCabel.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEHeaderCabel.XCode = LocalSelectedEquipEHeaderCabel.XCode;
                                        if (SelectedEquipEHeaderCabel.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEHeaderCabel.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Insulator:
                                ed.WriteMessage("Sub Is : Insulator \n");
                                Atend.Base.Equipment.EInsulator SelectedEquipEInsulator = Atend.Base.Equipment.EInsulator.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EInsulator LocalSelectedInsulator = Atend.Base.Equipment.EInsulator.SelectByCodeForLocal(SelectedEquipEInsulator.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEInsulator.Code != -1)
                                {

                                    if (LocalSelectedInsulator.Code == -1)
                                    {
                                        if (SelectedEquipEInsulator.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEInsulator.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEInsulator.XCode = LocalSelectedInsulator.XCode;
                                        if (SelectedEquipEInsulator.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEInsulator.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.InsulatorChain:
                                ed.WriteMessage("Sub Is : InsulatorChain \n");
                                Atend.Base.Equipment.EInsulatorChain SelectedEquipEInsulatorChain = Atend.Base.Equipment.EInsulatorChain.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EInsulatorChain LocalSelectedInsChain = Atend.Base.Equipment.EInsulatorChain.SelectByCodeForLocal(SelectedEquipEInsulatorChain.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEInsulatorChain.Code != -1)
                                {

                                    if (LocalSelectedInsChain.Code == -1)
                                    {
                                        if (SelectedEquipEInsulatorChain.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEInsulatorChain.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEInsulatorChain.XCode = LocalSelectedInsChain.XCode;
                                        if (SelectedEquipEInsulatorChain.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEInsulatorChain.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.InsulatorPipe:
                                ed.WriteMessage("Sub Is : InsulatorPipe \n");
                                Atend.Base.Equipment.EInsulatorPipe SelectedEquipEInsulatorPipe = Atend.Base.Equipment.EInsulatorPipe.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EInsulatorPipe LocalSelectedInsPipe = Atend.Base.Equipment.EInsulatorPipe.SelectByCodeForLocal(SelectedEquipEInsulatorPipe.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipEInsulatorPipe.Code != -1)
                                {

                                    if (LocalSelectedInsPipe.Code == -1)
                                    {
                                        if (SelectedEquipEInsulatorPipe.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEInsulatorPipe.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEInsulatorPipe.XCode = LocalSelectedInsPipe.XCode;
                                        if (SelectedEquipEInsulatorPipe.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEInsulatorPipe.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack oF Data In " + Type.ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.MiddleJackPanel:
                                ////ed.WriteMessage("AAA : {0} \n", new Guid(dr["XCode"].ToString()));
                                ed.WriteMessage("Sub Is : MiddleJackPanel \n");
                                Atend.Base.Equipment.EJAckPanel SelectedEquipEJAckPanel = Atend.Base.Equipment.EJAckPanel.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EJAckPanel LocalSelectedEJackPanel = Atend.Base.Equipment.EJAckPanel.SelectByCodeForLocal(SelectedEquipEJAckPanel.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEJAckPanel.Code != -1)
                                {

                                    Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.ServerSelectByCode(SelectedEquipEJAckPanel.MasterProductCode, _connection, _transaction);
                                    Atend.Base.Equipment.EBus _LocalBus = Atend.Base.Equipment.EBus.SelectByCodeForLocal(_eBus.Code, LocalTransaction, LocalConnection);
                                    if (_eBus.Code != -1)
                                    {
                                        if (_LocalBus.Code == -1)
                                        {
                                            if (!_eBus.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString() + ":Bus");
                                            }

                                        }
                                        else
                                        {
                                            _eBus.XCode = _LocalBus.XCode;

                                            if (!_eBus.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString() + ":Bus");
                                            }
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in MiddleJackPanel:Bus");
                                    }

                                    SelectedEquipEJAckPanel.MasterProductXCode = _eBus.XCode;
                                    if (LocalSelectedEJackPanel.Code == -1)
                                    {

                                        if (SelectedEquipEJAckPanel.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEJAckPanel.XCode;


                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert Failed in MJackPanel");
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEJAckPanel.XCode = LocalSelectedEJackPanel.XCode;
                                        if (SelectedEquipEJAckPanel.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEJAckPanel.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Serevr Update Failed in MJackPanel");
                                        }

                                    }

                                    //if (SelectedEquipEJAckPanel.ServerInsert(_transaction, _connection, true, false))
                                    //{
                                    //    NewCode = SelectedEquipEJAckPanel.Code;
                                    DataTable _JPS = Atend.Base.Equipment.EJackPanelCell.SelectByJackPanelCode(SelectedEquipEJAckPanel.Code, _transaction, _connection);

                                    if (!Atend.Base.Equipment.EJackPanelCell.DeleteX(LocalTransaction, LocalConnection, SelectedEquipEJAckPanel.XCode))
                                    {
                                        throw new System.Exception("Error in Delete JackPanelCell in GetFromServer");
                                    }

                                    foreach (DataRow _JPSdr in _JPS.Rows)
                                    {
                                        //XX1
                                        Atend.Base.Equipment.ECell _eCell = Atend.Base.Equipment.ECell.ServerSelectByCode(Convert.ToInt32(_JPSdr["ProductCode"].ToString()), _connection, _transaction);
                                        Atend.Base.Equipment.ECell _LocalSelectedeCell = Atend.Base.Equipment.ECell.SelectByCodeForLocal(_eCell.Code, LocalTransaction, LocalConnection);
                                        if (_eCell.Code != -1)
                                        {
                                            if (_LocalSelectedeCell.Code == -1)
                                            {
                                                if (!_eCell.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString() + ":Cell");
                                                }

                                            }
                                            else
                                            {
                                                _eCell.XCode = _LocalSelectedeCell.XCode;
                                                if (!_eCell.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString() + ":Cell");
                                                }

                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in MiddleJackPanel:Cell");
                                        }
                                        Atend.Base.Equipment.EJackPanelCell _EJC = Atend.Base.Equipment.EJackPanelCell.ServerSelectByCode(Convert.ToInt32(_JPSdr["Code"].ToString()), _connection, _transaction);
                                        Atend.Base.Equipment.EJackPanelCell _LocalEJC = Atend.Base.Equipment.EJackPanelCell.SelectByCodeForLocal(_EJC.Code, LocalTransaction, LocalConnection);
                                        if (_EJC.Code != -1)
                                        {
                                            _EJC.ProductXCode = _eCell.XCode;
                                            _EJC.JackPanelXCode = SelectedEquipEJAckPanel.XCode;
                                            //if (_LocalEJC.Code == -1)
                                            //{
                                            if (!_EJC.LocalInsertX(LocalTransaction, LocalConnection, false, false, _transaction, _connection))
                                            {
                                                throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString() + ":JackPanelCell");
                                            }

                                            //}
                                            //else
                                            //{
                                            //    _EJC.XCode = _LocalEJC.XCode;
                                            //    if (!_EJC.LocalUpdateX(LocalTransaction, LocalConnection, false, false, _transaction, _connection))
                                            //    {
                                            //        throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString() + ":JackPanelCell");
                                            //    }

                                            //}
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in MiddleJackPanel:JackPanelCell");
                                        }
                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of DAta in MidJackPanel");
                                }
                                //}
                                //}
                                break;


                            case Atend.Control.Enum.ProductType.WeekJackPanel:
                                ed.WriteMessage("Sub Is : WeekJackPanel \n");
                                Atend.Base.Equipment.EJackPanelWeek SelectedEquipWeekJackPanel = Atend.Base.Equipment.EJackPanelWeek.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EJackPanelWeek LocalSelectedWeekJackPanel = Atend.Base.Equipment.EJackPanelWeek.SelectByCodeForLocal(SelectedEquipWeekJackPanel.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipWeekJackPanel.Code != -1)
                                {


                                    Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.ServerSelectByCode(SelectedEquipWeekJackPanel.BusCode, _connection, _transaction);
                                    Atend.Base.Equipment.EBus _LocalBus = Atend.Base.Equipment.EBus.SelectByCodeForLocal(_eBus.Code, LocalTransaction, LocalConnection);
                                    if (_eBus.Code != -1)
                                    {
                                        if (_LocalBus.Code == -1)
                                        {
                                            if (!_eBus.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString() + ":Bus");
                                            }

                                        }
                                        else
                                        {
                                            _eBus.XCode = _LocalBus.XCode;
                                            if (!_eBus.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString() + ":Bus");
                                            }

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in WeekJackPanel:Bus");
                                    }
                                    SelectedEquipWeekJackPanel.BusXCode = _eBus.XCode;

                                    Atend.Base.Equipment.EAutoKey_3p _Key = Atend.Base.Equipment.EAutoKey_3p.ServerSelectByCode(SelectedEquipWeekJackPanel.AutoKey3pCode, _connection, _transaction);
                                    Atend.Base.Equipment.EAutoKey_3p _LocalKey = Atend.Base.Equipment.EAutoKey_3p.SelectByCodeForLocal(_Key.Code, LocalTransaction, LocalConnection);
                                    //ed.WriteMessage("1\n");

                                    if (_Key.Code != -1)
                                    {
                                        //ed.WriteMessage("2\n");
                                        if (_LocalKey.Code == -1)
                                        {
                                            if (!_Key.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                //ed.WriteMessage("3\n");
                                                throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString() + ":EAutoKey_3p");
                                            }

                                        }
                                        else
                                        {
                                            _Key.XCode = _LocalKey.XCode;
                                            if (!_Key.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                //ed.WriteMessage("3\n");
                                                throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString() + ":EAutoKey_3p");
                                            }

                                        }
                                        //ed.WriteMessage("4\n");
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in WeekJackPanel:EAutoKey_3p");
                                    }
                                    //ed.WriteMessage("insert passed \n");
                                    SelectedEquipWeekJackPanel.AutoKey3pXCode = _Key.XCode;
                                    if (LocalSelectedWeekJackPanel.Code == -1)
                                    {
                                        if (SelectedEquipWeekJackPanel.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipWeekJackPanel.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert Failed " + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        //Atend.Base.Equipment.EJackPanelWeek ServerSelectedWeekJackPanel=Atend.Base.Equipment.EJackPanelWeek.ServerSelectByXCode
                                        SelectedEquipWeekJackPanel.XCode = LocalSelectedWeekJackPanel.XCode;
                                        if (SelectedEquipWeekJackPanel.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipWeekJackPanel.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed " + Type.ToString());
                                        }
                                    }
                                    //if (SelectedEquipWeekJackPanel.ServerInsert(_transaction, _connection, true, false))
                                    //{
                                    //    NewCode = SelectedEquipWeekJackPanel.Code;

                                    DataTable _WJS = Atend.Base.Equipment.EJackPanelWeekCell.ServerSelectByJackPanelWeekCode(_transaction, _connection, SelectedEquipWeekJackPanel.Code);

                                    if (!Atend.Base.Equipment.EJackPanelWeekCell.DeleteX(LocalTransaction, LocalConnection, SelectedEquipWeekJackPanel.XCode))
                                    {
                                        throw new System.Exception("Error in Delete EJackPanelWeekCell GetFromServer");
                                    }

                                    foreach (DataRow _WJSdr in _WJS.Rows)
                                    {
                                        //ed.WriteMessage("go for cells \n");
                                        Atend.Base.Equipment.EJackPanelWeekCell _WJC = Atend.Base.Equipment.EJackPanelWeekCell.ServerSelectByCode(Convert.ToInt32(_WJSdr["Code"].ToString()), _connection, _transaction);
                                        Atend.Base.Equipment.EJackPanelWeekCell _LocalWJC = Atend.Base.Equipment.EJackPanelWeekCell.SelectByCodeForLocal(_WJC.Code, LocalTransaction, LocalConnection);
                                        if (_WJC.Code != -1)
                                        {
                                            _WJC.JackPanelWeekXCode = SelectedEquipWeekJackPanel.XCode;
                                            //if (_LocalWJC.Code == -1)
                                            //{
                                            if (!_WJC.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString() + ":WeekJackPanelCell");
                                            }
                                            else
                                            {
                                                //if (!)
                                                //{
                                                //    throw new System.Exception("UpdateX      Failed");
                                                //}
                                            }
                                            //}
                                            //else
                                            //{
                                            //    _WJC.XCode = _LocalWJC.XCode;
                                            //    if (!_WJC.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            //    {
                                            //        throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString() + ":WeekJackPanelCell");
                                            //    }

                                            //}
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in WeekJackPanel:WeekJackPanelCell");
                                        }
                                    }

                                }
                                else
                                {
                                    throw new System.Exception("Lack Of Data In Week JackPanel");
                                }
                                //}
                                break;


                            case Atend.Control.Enum.ProductType.KablSho:
                                ed.WriteMessage("Sub Is : KablSho \n");
                                Atend.Base.Equipment.EKablsho SelectedEquipEKablsho = Atend.Base.Equipment.EKablsho.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EKablsho LocalSelectedKablsho = Atend.Base.Equipment.EKablsho.SelectByCodeForLocal(SelectedEquipEKablsho.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEKablsho.Code != -1)
                                {

                                    if (LocalSelectedKablsho.Code == -1)
                                    {
                                        if (SelectedEquipEKablsho.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEKablsho.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEKablsho.XCode = LocalSelectedKablsho.XCode;
                                        if (SelectedEquipEKablsho.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEKablsho.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Kalamp:
                                ed.WriteMessage("Sub Is : Kalamp \n");
                                Atend.Base.Equipment.EClamp SelectedEquipEClamp = Atend.Base.Equipment.EClamp.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EClamp LocalSelectedCalamp = Atend.Base.Equipment.EClamp.SelectByCodeForLocal(SelectedEquipEClamp.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEClamp.Code != -1)
                                {

                                    if (LocalSelectedCalamp.Code == -1)
                                    {
                                        if (SelectedEquipEClamp.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEClamp.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEClamp.XCode = LocalSelectedCalamp.XCode;
                                        if (SelectedEquipEClamp.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEClamp.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Khazan:
                                ed.WriteMessage("Sub Is : Khazan \n");
                                Atend.Base.Equipment.EKhazan SelectedEquipEKhazan = Atend.Base.Equipment.EKhazan.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EKhazan LocalSelectedKhazan = Atend.Base.Equipment.EKhazan.SelectByCodeForLocal(SelectedEquipEKhazan.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEKhazan.Code != -1)
                                {

                                    if (LocalSelectedKhazan.Code == -1)
                                    {
                                        if (SelectedEquipEKhazan.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEKhazan.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEKhazan.XCode = LocalSelectedKhazan.XCode;
                                        if (SelectedEquipEKhazan.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEKhazan.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.BankKhazan:
                                ed.WriteMessage("Sub Is : Khazan \n");
                                Atend.Base.Equipment.EKhazanTip SelectedEquipEKhazanTip = Atend.Base.Equipment.EKhazanTip.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EKhazanTip LocalSelectedKhazanTip = Atend.Base.Equipment.EKhazanTip.SelectByCodeForLocal(SelectedEquipEKhazanTip.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEKhazanTip.Code != -1)
                                {

                                    if (LocalSelectedKhazanTip.Code == -1)
                                    {
                                        if (SelectedEquipEKhazanTip.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEKhazanTip.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEKhazanTip.XCode = LocalSelectedKhazanTip.XCode;
                                        if (SelectedEquipEKhazanTip.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEKhazanTip.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.Light:
                                ed.WriteMessage("Sub Is : Light \n");
                                Atend.Base.Equipment.ELight SelectedEquipELight = Atend.Base.Equipment.ELight.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ELight LocalSelectedLight = Atend.Base.Equipment.ELight.SelectByCodeForLocal(SelectedEquipELight.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipELight.Code != -1)
                                {

                                    if (LocalSelectedLight.Code == -1)
                                    {
                                        if (SelectedEquipELight.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipELight.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipELight.XCode = LocalSelectedLight.XCode;
                                        if (SelectedEquipELight.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipELight.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.Mafsal:
                                ed.WriteMessage("Sub Is : Mafsal \n");
                                Atend.Base.Equipment.EMafsal SelectedEquipEMafsal = Atend.Base.Equipment.EMafsal.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EMafsal LocalSelectedMafsal = Atend.Base.Equipment.EMafsal.SelectByCodeForLocal(SelectedEquipEMafsal.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEMafsal.Code != -1)
                                {

                                    if (LocalSelectedMafsal.Code == -1)
                                    {
                                        if (SelectedEquipEMafsal.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMafsal.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEMafsal.XCode = LocalSelectedMafsal.XCode;
                                        if (SelectedEquipEMafsal.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMafsal.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.MeasuredJackPanel:
                                ed.WriteMessage("Sub Is : MeasuredJackPanel \n");
                                Atend.Base.Equipment.EMeasuredJackPanel SelectedEquipEMeasuredJackPanel = Atend.Base.Equipment.EMeasuredJackPanel.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EMeasuredJackPanel LocalselectedMeasureJackPAnel = Atend.Base.Equipment.EMeasuredJackPanel.SelectByCodeForLocal(SelectedEquipEMeasuredJackPanel.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEMeasuredJackPanel.Code != -1)
                                {

                                    if (LocalselectedMeasureJackPAnel.Code == -1)
                                    {
                                        if (SelectedEquipEMeasuredJackPanel.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMeasuredJackPanel.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEMeasuredJackPanel.XCode = LocalselectedMeasureJackPAnel.XCode;
                                        if (SelectedEquipEMeasuredJackPanel.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMeasuredJackPanel.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }


                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.MiniatureKey:
                                ed.WriteMessage("Sub Is : MiniatureKey \n");
                                Atend.Base.Equipment.EMiniatorKey SelectedEquipEMiniatorKey = Atend.Base.Equipment.EMiniatorKey.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EMiniatorKey LocalSelectedMiniatorKey = Atend.Base.Equipment.EMiniatorKey.SelectByCodeForLocal(SelectedEquipEMiniatorKey.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEMiniatorKey.Code != -1)
                                {

                                    //{
                                    if (LocalSelectedMiniatorKey.Code == -1)
                                    {
                                        if (SelectedEquipEMiniatorKey.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMiniatorKey.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEMiniatorKey.XCode = LocalSelectedMiniatorKey.XCode;
                                        if (SelectedEquipEMiniatorKey.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEMiniatorKey.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.PhotoCell:
                                ed.WriteMessage("Sub Is : PhotoCell \n");
                                Atend.Base.Equipment.EPhotoCell SelectedEquipEPhotoCell = Atend.Base.Equipment.EPhotoCell.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EPhotoCell LocalSelectedPhotoCell = Atend.Base.Equipment.EPhotoCell.SelectByCodeForLocal(SelectedEquipEPhotoCell.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEPhotoCell.Code != -1)
                                {

                                    if (LocalSelectedPhotoCell.Code == -1)
                                    {
                                        if (SelectedEquipEPhotoCell.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPhotoCell.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEPhotoCell.XCode = LocalSelectedPhotoCell.XCode;
                                        if (SelectedEquipEPhotoCell.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPhotoCell.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Phuse:
                                ed.WriteMessage("Sub Is : Phuse \n");
                                Atend.Base.Equipment.EPhuse SelectedEquipEPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EPhuse LocalSelectedPhuse = Atend.Base.Equipment.EPhuse.SelectByCodeForLocal(SelectedEquipEPhuse.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEPhuse.Code != -1)
                                {

                                    Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(SelectedEquipEPhuse.PhusePoleCode, _connection, _transaction);
                                    Atend.Base.Equipment.EPhusePole _LocalPhusePole = Atend.Base.Equipment.EPhusePole.SelectByCodeForLocal(_EPhusePole.Code, LocalTransaction, LocalConnection);
                                    if (_EPhusePole.Code != -1)
                                    {
                                        if (_LocalPhusePole.Code == -1)
                                        {
                                            if (!_EPhusePole.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString() + ":PhusePole");
                                            }

                                        }
                                        else
                                        {
                                            _EPhusePole.XCode = _LocalPhusePole.XCode;
                                            if (!_EPhusePole.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                throw new System.Exception("Local Update phusePole Failed");
                                            }

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in Phuse:PhusePole");
                                    }
                                    ed.WriteMessage("PhusePoleCode:{0}\n", _EPhusePole.Code);
                                    SelectedEquipEPhuse.PhusePoleXCode = _EPhusePole.XCode;
                                    if (LocalSelectedPhuse.Code == -1)
                                    {
                                        if (SelectedEquipEPhuse.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPhuse.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEPhuse.XCode = LocalSelectedPhuse.XCode;
                                        if (!SelectedEquipEPhuse.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            throw new System.Exception("Local Update Failed in Phuse");
                                        }


                                    }


                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.PhuseKey:
                                ed.WriteMessage("Sub Is : PhuseKey \n");
                                Atend.Base.Equipment.EPhuseKey SelectedEquipEPhuseKey = Atend.Base.Equipment.EPhuseKey.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EPhuseKey LocalSelectedPhuseKey = Atend.Base.Equipment.EPhuseKey.SelectByCodeForLocal(SelectedEquipEPhuseKey.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEPhuseKey.Code != -1)
                                {

                                    if (LocalSelectedPhuseKey.Code == -1)
                                    {
                                        if (SelectedEquipEPhuseKey.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPhuseKey.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEPhuseKey.XCode = LocalSelectedPhuseKey.XCode;
                                        if (SelectedEquipEPhuseKey.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPhuseKey.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }


                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.PhusePole:
                                ed.WriteMessage("Sub Is : PhusePole \n");
                                Atend.Base.Equipment.EPhusePole SelectedEquipEPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EPhusePole LocalSelectedPhusePole = Atend.Base.Equipment.EPhusePole.SelectByCodeForLocal(SelectedEquipEPhusePole.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEPhusePole.Code != -1)
                                {

                                    if (LocalSelectedPhusePole.Code == -1)
                                    {
                                        if (SelectedEquipEPhusePole.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPhusePole.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEPhusePole.XCode = LocalSelectedPhusePole.XCode;
                                        if (SelectedEquipEPhusePole.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPhusePole.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Pole:
                                ed.WriteMessage("Sub Is : Pole \n");
                                Atend.Base.Equipment.EPole SelectedEquipEPole = Atend.Base.Equipment.EPole.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EPole LocalSelectedPole = Atend.Base.Equipment.EPole.SelectByCodeForLocal(SelectedEquipEPole.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEPole.Code != -1)
                                {
                                    ed.WriteMessage("LocalSelectedPole={0}\n", LocalSelectedPole.Code);
                                    if (LocalSelectedPole.Code == -1)
                                    {
                                        if (SelectedEquipEPole.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPole.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEPole.XCode = LocalSelectedPole.XCode;
                                        if (SelectedEquipEPole.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPole.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;



                            case Atend.Control.Enum.ProductType.PoleTip:
                                ed.WriteMessage("Sub Is : Pole \n");
                                Atend.Base.Equipment.EPoleTip SelectedEquipEPoleTip = Atend.Base.Equipment.EPoleTip.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EPoleTip LocalSelectedPoleTip = Atend.Base.Equipment.EPoleTip.SelectByCodeForLocal(SelectedEquipEPoleTip.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEPoleTip.Code != -1)
                                {
                                    Atend.Base.Equipment.EPole SelectedEquipPole = Atend.Base.Equipment.EPole.ServerSelectByCode(SelectedEquipEPoleTip.PoleCode, _connection, _transaction);
                                    Atend.Base.Equipment.EPole LocalSelectedequipPole = Atend.Base.Equipment.EPole.SelectByCodeForLocal(SelectedEquipPole.Code, LocalTransaction, LocalConnection);
                                    if (SelectedEquipPole.Code != -1)
                                    {
                                        if (LocalSelectedequipPole.Code == -1)
                                        {
                                            if (SelectedEquipPole.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedEquipPole.XCode;

                                            }
                                            else
                                            {
                                                throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                            }
                                        }
                                        else
                                        {
                                            SelectedEquipPole.XCode = LocalSelectedequipPole.XCode;
                                            if (SelectedEquipPole.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedEquipPole.XCode;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                            }

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of Data In Pole in PoleTip");
                                    }


                                    Atend.Base.Equipment.EHalter SelectedEquipHalter = Atend.Base.Equipment.EHalter.ServerSelectByCode(SelectedEquipEPoleTip.HalterID, _connection, _transaction);
                                    Atend.Base.Equipment.EHalter LocalSelectedequipHalter = Atend.Base.Equipment.EHalter.SelectByCodeForLocal(SelectedEquipHalter.Code, LocalTransaction, LocalConnection);
                                    if (SelectedEquipHalter.Code != -1)
                                    {
                                        if (LocalSelectedequipHalter.Code == -1)
                                        {
                                            if (SelectedEquipHalter.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedEquipHalter.XCode;

                                            }
                                            else
                                            {
                                                throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                            }
                                        }
                                        else
                                        {
                                            SelectedEquipHalter.XCode = LocalSelectedequipHalter.XCode;
                                            if (SelectedEquipHalter.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedEquipHalter.XCode;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                            }

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of Data In Pole in PoleTip");
                                    }



                                    SelectedEquipEPoleTip.PoleXCode = SelectedEquipPole.XCode;
                                    SelectedEquipEPoleTip.HalterXID = SelectedEquipHalter.XCode;
                                    if (LocalSelectedPoleTip.Code == -1)
                                    {
                                        if (SelectedEquipEPoleTip.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPoleTip.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEPoleTip.XCode = LocalSelectedPoleTip.XCode;
                                        if (SelectedEquipEPoleTip.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPoleTip.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;

                            ////case Atend.Control.Enum.ProductType.PoleTip:
                            ////    ed.WriteMessage("Sub Is : PoleTip \n");
                            ////    Atend.Base.Equipment.EPoleTip SelectedEquipEPoleTip = Atend.Base.Equipment.EPoleTip.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                            ////    if (SelectedEquipEPoleTip.Code != -1)
                            ////    {
                            ////        //Atend.Base.Equipment.EPoleTip answer = Atend.Base.Equipment.EPoleTip.AccessSelectByXCode(SelectedEquipEPoleTip.XCode, _transaction, _connection);
                            ////        //if (answer.Code != -1)
                            ////        //{
                            ////        //    NewCode = answer.Code;
                            ////        //}
                            ////        //else
                            ////        //{

                            ////        Atend.Base.Equipment.EPole _ePole = Atend.Base.Equipment.EPole.SelectByXCode(SelectedEquipEPoleTip.PoleXCode);
                            ////        if (_ePole.Code != -1)
                            ////        {
                            ////            if (!_ePole.AccessInsert(_transaction, _connection, true, true))
                            ////            {
                            ////                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(Type).ToString() + ":POle");
                            ////            }
                            ////        }
                            ////        else
                            ////        {
                            ////            throw new System.Exception("Lack of data in poleTip:Pole");
                            ////        }

                            ////        Atend.Base.Equipment.EHalter _eHalter = Atend.Base.Equipment.EHalter.SelectByXCode(SelectedEquipEPoleTip.HalterXID);
                            ////        if (_eHalter.Code != -1)
                            ////        {
                            ////            if (!_eHalter.AccessInsert(_transaction, _connection, true, true))
                            ////            {
                            ////                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(Type).ToString() + ":Halter");
                            ////            }
                            ////        }
                            ////        else
                            ////        {
                            ////            throw new System.Exception("Lack of data in poleTip:Halter");
                            ////        }

                            ////        SelectedEquipEPoleTip.PoleCode = _ePole.Code;
                            ////        SelectedEquipEPoleTip.HalterID = _eHalter.Code;
                            ////        if (SelectedEquipEPoleTip.AccessInsert(_transaction, _connection, true, false))
                            ////        {
                            ////            NewCode = SelectedEquipEPoleTip.Code;
                            ////        }
                            ////        else
                            ////        {
                            ////            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(Type).ToString());
                            ////        }



                            ////        //}
                            ////    }
                            ////    break;
                            case Atend.Control.Enum.ProductType.Prop:
                                ed.WriteMessage("Sub Is : Prop \n");
                                Atend.Base.Equipment.EProp SelectedEquipEProp = Atend.Base.Equipment.EProp.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EProp LocalSelectedProp = Atend.Base.Equipment.EProp.SelectByCodeForLocal(SelectedEquipEProp.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEProp.Code != -1)
                                {

                                    if (LocalSelectedProp.Code == -1)
                                    {
                                        if (SelectedEquipEProp.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEProp.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("container error in Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEProp.XCode = LocalSelectedProp.XCode;
                                        if (SelectedEquipEProp.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEProp.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("container error in Server Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.PT:
                                ed.WriteMessage("Sub Is : PT \n");
                                Atend.Base.Equipment.EPT SelectedEquipEPT = Atend.Base.Equipment.EPT.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EPT LocalSelectedPT = Atend.Base.Equipment.EPT.SelectByCodeForLocal(SelectedEquipEPT.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEPT.Code != -1)
                                {

                                    if (LocalSelectedPT.Code == -1)
                                    {
                                        if (SelectedEquipEPT.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPT.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEPT.XCode = LocalSelectedPT.XCode;
                                        if (SelectedEquipEPT.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEPT.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;



                            case Atend.Control.Enum.ProductType.Ramp:
                                ed.WriteMessage("Sub Is : Ramp \n");
                                Atend.Base.Equipment.ERamp SelectedEquipERamp = Atend.Base.Equipment.ERamp.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ERamp LocalSelectedRamp = Atend.Base.Equipment.ERamp.SelectByCodeForLocal(SelectedEquipERamp.Code, LocalTransaction, LocalConnection);

                                if (SelectedEquipERamp.Code != -1)
                                {

                                    if (LocalSelectedRamp.Code == -1)
                                    {
                                        if (SelectedEquipERamp.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipERamp.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipERamp.XCode = LocalSelectedRamp.XCode;

                                        if (SelectedEquipERamp.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipERamp.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.ReCloser:
                                ed.WriteMessage("Sub Is : ReCloser \n");
                                Atend.Base.Equipment.EReCloser SelectedEquipEReCloser = Atend.Base.Equipment.EReCloser.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EReCloser LocalSelectedReCloser = Atend.Base.Equipment.EReCloser.SelectByCodeForLocal(SelectedEquipEReCloser.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEReCloser.Code != -1)
                                {

                                    if (LocalSelectedReCloser.Code == -1)
                                    {
                                        if (SelectedEquipEReCloser.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEReCloser.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEReCloser.XCode = LocalSelectedReCloser.XCode;
                                        if (SelectedEquipEReCloser.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEReCloser.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.Rod:
                                ed.WriteMessage("Sub Is : Rod \n");
                                Atend.Base.Equipment.ERod SelectedEquipERod = Atend.Base.Equipment.ERod.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ERod LocalSelectedRod = Atend.Base.Equipment.ERod.SelectByCodeForLocal(SelectedEquipERod.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipERod.Code != -1)
                                {

                                    if (LocalSelectedRod.Code == -1)
                                    {
                                        if (SelectedEquipERod.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipERod.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipERod.XCode = SelectedEquipERod.XCode;
                                        if (SelectedEquipERod.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipERod.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.SectionLizer:
                                ed.WriteMessage("Sub Is : SectionLizer \n");
                                Atend.Base.Equipment.ESectionLizer SelectedEquipESectionLizer = Atend.Base.Equipment.ESectionLizer.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ESectionLizer LocalSelectedSectionLizer = Atend.Base.Equipment.ESectionLizer.SelectByCodeForLocal(SelectedEquipESectionLizer.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipESectionLizer.Code != -1)
                                {

                                    if (LocalSelectedSectionLizer.Code == -1)
                                    {
                                        if (SelectedEquipESectionLizer.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipESectionLizer.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipESectionLizer.XCode = LocalSelectedSectionLizer.XCode;
                                        if (SelectedEquipESectionLizer.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipESectionLizer.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;

                            case Atend.Control.Enum.ProductType.SelfKeeper:
                                ed.WriteMessage("Sub Is : SelfKeeper \n");
                                Atend.Base.Equipment.ESelfKeeper SelectedEquipESelfKeeper = Atend.Base.Equipment.ESelfKeeper.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ESelfKeeper LocalSelectedSelfKeeper = Atend.Base.Equipment.ESelfKeeper.SelectByCodeForLocal(SelectedEquipESelfKeeper.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipESelfKeeper.Code != -1)
                                {

                                    if (LocalSelectedSelfKeeper.Code == -1)
                                    {
                                        if (SelectedEquipESelfKeeper.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipESelfKeeper.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipESelfKeeper.XCode = LocalSelectedSelfKeeper.XCode;
                                        if (SelectedEquipESelfKeeper.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipESelfKeeper.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;


                            case Atend.Control.Enum.ProductType.SelfKeeperTip:
                                ed.WriteMessage("Sub Is : SelfKeeper \n");
                                Atend.Base.Equipment.ESelfKeeperTip SelectedEquipESelfKeeperTip = Atend.Base.Equipment.ESelfKeeperTip.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ESelfKeeperTip LocalSelectedSelfKeeperTip = Atend.Base.Equipment.ESelfKeeperTip.SelectByCodeForLocal(SelectedEquipESelfKeeperTip.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipESelfKeeperTip.Code != -1)
                                {

                                    Atend.Base.Equipment.ESelfKeeper SelectedPhaseSelf = Atend.Base.Equipment.ESelfKeeper.ServerSelectByCode(SelectedEquipESelfKeeperTip.PhaseProductCode, _connection, _transaction);
                                    Atend.Base.Equipment.ESelfKeeper LocalSelectedPhaseSelf = Atend.Base.Equipment.ESelfKeeper.SelectByCodeForLocal(SelectedPhaseSelf.Code, LocalTransaction, LocalConnection);

                                    Atend.Base.Equipment.ESelfKeeper SelectedNeutralSelf = Atend.Base.Equipment.ESelfKeeper.ServerSelectByCode(SelectedEquipESelfKeeperTip.NeutralProductCode, _connection, _transaction);
                                    Atend.Base.Equipment.ESelfKeeper LocalSelectedNeutralSelf = Atend.Base.Equipment.ESelfKeeper.SelectByCodeForLocal(SelectedNeutralSelf.Code, LocalTransaction, LocalConnection);

                                    Atend.Base.Equipment.ESelfKeeper SelectedNightSelf = Atend.Base.Equipment.ESelfKeeper.ServerSelectByCode(SelectedEquipESelfKeeperTip.NightProductCode, _connection, _transaction);
                                    Atend.Base.Equipment.ESelfKeeper LocalSelectedNightSelf = Atend.Base.Equipment.ESelfKeeper.SelectByCodeForLocal(SelectedNightSelf.Code, LocalTransaction, LocalConnection);


                                    if (SelectedPhaseSelf.Code != -1)
                                    {
                                        if (LocalSelectedPhaseSelf.Code == -1)
                                        {
                                            if (SelectedPhaseSelf.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedPhaseSelf.XCode;

                                            }
                                            else
                                            {
                                                throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                            }
                                        }
                                        else
                                        {
                                            SelectedPhaseSelf.XCode = LocalSelectedPhaseSelf.XCode;
                                            if (SelectedPhaseSelf.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedPhaseSelf.XCode;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(Type).ToString());
                                            }

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in SelectedPhaseSelf ");
                                    }




                                    if (SelectedNeutralSelf.Code != -1)
                                    {
                                        if (LocalSelectedNeutralSelf.Code == -1)
                                        {
                                            if (SelectedNeutralSelf.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedNeutralSelf.XCode;

                                            }
                                            else
                                            {
                                                throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                            }
                                        }
                                        else
                                        {
                                            SelectedNeutralSelf.XCode = LocalSelectedNeutralSelf.XCode;
                                            if (SelectedNeutralSelf.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedNeutralSelf.XCode;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(Type).ToString());
                                            }

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in SelectedPhaseSelf ");
                                    }


                                    if (SelectedNightSelf.Code != -1)
                                    {
                                        if (LocalSelectedNightSelf.Code == -1)
                                        {
                                            if (SelectedNightSelf.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedNightSelf.XCode;

                                            }
                                            else
                                            {
                                                throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                            }
                                        }
                                        else
                                        {
                                            SelectedNightSelf.XCode = LocalSelectedNightSelf.XCode;
                                            if (SelectedNightSelf.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                            {
                                                NewCode = SelectedNightSelf.XCode;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Server Update failed" + Convert.ToInt32(Type).ToString());
                                            }

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in SelectedPhaseSelf ");
                                    }


                                    SelectedEquipESelfKeeperTip.PhaseProductxCode = LocalSelectedPhaseSelf.XCode;
                                    SelectedEquipESelfKeeperTip.NeutralProductxCode = LocalSelectedNeutralSelf.XCode;
                                    SelectedEquipESelfKeeperTip.NightProductxCode = LocalSelectedNightSelf.XCode;

                                    if (LocalSelectedSelfKeeperTip.Code == -1)
                                    {
                                        if (SelectedEquipESelfKeeperTip.LocalInsertX(LocalTransaction, LocalConnection))//, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipESelfKeeperTip.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipESelfKeeperTip.XCode = LocalSelectedSelfKeeperTip.XCode;
                                        if (SelectedEquipESelfKeeperTip.LocalUpdateX(LocalTransaction, LocalConnection))//, true, false, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipESelfKeeperTip.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data in " + Type.ToString());
                                }
                                break;


                            //case Atend.Control.Enum.ProductType.SelfKeeperTip:
                            //    ed.WriteMessage("Sub Is : SelfKeeperTip \n");
                            //    Atend.Base.Equipment.ESelfKeeperTip SelectedEquipESelfKeeperTip = Atend.Base.Equipment.ESelfKeeperTip.SelectByXCode(new Guid(dr["XCode"].ToString()));
                            //    if (SelectedEquipESelfKeeperTip.Code != -1)
                            //    {
                            //        //Atend.Base.Equipment.ESelfKeeperTip answer = Atend.Base.Equipment.ESelfKeeperTip.AccessSelectByXCode(SelectedEquipESelfKeeperTip.XCode, _transaction, _connection);
                            //        //if (answer.Code != -1)
                            //        //{
                            //        //    NewCode = answer.Code;
                            //        //}
                            //        //else
                            //        //{
                            //        if (SelectedEquipESelfKeeperTip.AccessInsert(_transaction, _connection))
                            //        {
                            //            NewCode = SelectedEquipESelfKeeperTip.Code;
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(Type).ToString());
                            //        }
                            //        //}
                            //    }
                            //    break;

                            case Atend.Control.Enum.ProductType.StreetBox:
                                ed.WriteMessage("Sub Is : StreetBox \n");
                                Atend.Base.Equipment.EStreetBox SelectedEquipEStreetBox = Atend.Base.Equipment.EStreetBox.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.EStreetBox LocalSelectedStreetBox = Atend.Base.Equipment.EStreetBox.SelectByCodeForLocal(SelectedEquipEStreetBox.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipEStreetBox.Code != -1)
                                {

                                    if (LocalSelectedStreetBox.Code == -1)
                                    {
                                        if (SelectedEquipEStreetBox.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEStreetBox.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Local InSert Failed " + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipEStreetBox.XCode = LocalSelectedStreetBox.XCode;
                                        if (SelectedEquipEStreetBox.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipEStreetBox.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Local Update Failed " + Type.ToString());
                                        }


                                    }
                                    //if (SelectedEquipEStreetBox.ServerInsert(_transaction, _connection, true, false))
                                    //{
                                    //    NewCode = SelectedEquipEStreetBox.Code;
                                    DataTable StreetBoxPhuses = Atend.Base.Equipment.EStreetBoxPhuse.ServerSelectByStreetBoxCode(SelectedEquipEStreetBox.Code, _transaction, _connection);
                                    if (!Atend.Base.Equipment.EStreetBoxPhuse.DeleteX(LocalTransaction, LocalConnection, SelectedEquipEStreetBox.XCode))
                                    {
                                        throw new System.Exception("Error in Delete StreetBoxPhuse");
                                    }

                                    foreach (DataRow StreetBoxPhuse in StreetBoxPhuses.Rows)
                                    {
                                        //ed.WriteMessage("110\n");
                                        Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(Convert.ToInt32(StreetBoxPhuse["PhuseCode"].ToString()), _connection, _transaction);
                                        Atend.Base.Equipment.EPhuse _LocalPhuse = Atend.Base.Equipment.EPhuse.SelectByCodeForLocal(_EPhuse.Code, LocalTransaction, LocalConnection);
                                        if (_EPhuse.Code != -1)
                                        {
                                            //ed.WriteMessage("111\n");
                                            Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(_EPhuse.PhusePoleCode, _connection, _transaction);
                                            Atend.Base.Equipment.EPhusePole _LocalPhusePole = Atend.Base.Equipment.EPhusePole.SelectByCodeForLocal(_EPhusePole.Code, LocalTransaction, LocalConnection);
                                            if (_EPhusePole.Code != -1)
                                            {
                                                //ed.WriteMessage("112\n");
                                                if (_LocalPhusePole.Code == -1)
                                                {
                                                    if (!_EPhusePole.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                    {
                                                        throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString() + ":PhusePole");
                                                    }

                                                }
                                                else
                                                {
                                                    _EPhusePole.XCode = _LocalPhusePole.XCode;
                                                    if (!_EPhusePole.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                    {
                                                        throw new System.Exception("LocalrUpdate failed" + Convert.ToInt32(Type).ToString() + ":PhusePole");
                                                    }

                                                }
                                            }
                                            else
                                            {
                                                throw new System.Exception("Lack of data in StreetBox:Phuse:PhusePole");
                                            }
                                            //ed.WriteMessage("streetbox was :{0} \n", _EPhusePole.Code);
                                            _EPhuse.PhusePoleXCode = _EPhusePole.XCode;
                                            if (_LocalPhuse.Code == -1)
                                            {
                                                if (!_EPhuse.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString() + ":Phuse");
                                                }

                                            }
                                            else
                                            {
                                                _EPhuse.XCode = _LocalPhuse.XCode;

                                                if (!_EPhuse.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString() + ":Phuse");
                                                }

                                            }

                                            Atend.Base.Equipment.EStreetBoxPhuse _EStreetBoxPhuse = Atend.Base.Equipment.EStreetBoxPhuse.ServerSelectByCode(Convert.ToInt32(StreetBoxPhuse["code"].ToString()), _connection, _transaction);
                                            Atend.Base.Equipment.EStreetBoxPhuse _LocalStreetBoxPhuse = Atend.Base.Equipment.EStreetBoxPhuse.SelectByCodeForLocal(_EStreetBoxPhuse.Code, LocalTransaction, LocalConnection);
                                            if (_EStreetBoxPhuse.Code != -1)
                                            {
                                                _EStreetBoxPhuse.PhuseXCode = _EPhuse.XCode;
                                                _EStreetBoxPhuse.StreetBoxXCode = SelectedEquipEStreetBox.XCode;
                                                //if (_LocalStreetBoxPhuse.Code == -1)
                                                //{
                                                if (!_EStreetBoxPhuse.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                                {
                                                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString() + ":StreetBoxPhuse");
                                                }

                                                //}
                                                //else
                                                //{

                                                //    _EStreetBoxPhuse.XCode = _LocalStreetBoxPhuse.XCode;
                                                //    if (!_EStreetBoxPhuse.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                                                //    {
                                                //        throw new System.Exception("Local Update failed" + Convert.ToInt32(Type).ToString() + ":StreetBoxPhuse");
                                                //    }

                                                //}
                                            }
                                            else
                                            {
                                                throw new System.Exception("Lack of data in StreetBox:StreetBoxPhuse");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in StreetBox:Phuse");
                                        }
                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of DAta in StreetBox");
                                }
                                //}
                                break;
                            case Atend.Control.Enum.ProductType.Transformer:
                                ed.WriteMessage("Sub Is : Transformer \n");
                                Atend.Base.Equipment.ETransformer SelectedEquipETransformer = Atend.Base.Equipment.ETransformer.ServerSelectByCode(Convert.ToInt32(Code.ToString()), _connection, _transaction);
                                Atend.Base.Equipment.ETransformer LocalSelectedTransformer = Atend.Base.Equipment.ETransformer.SelectByCodeForLocal(SelectedEquipETransformer.Code, LocalTransaction, LocalConnection);
                                if (SelectedEquipETransformer.Code != -1)
                                {

                                    if (LocalSelectedTransformer.Code == -1)
                                    {
                                        if (SelectedEquipETransformer.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipETransformer.XCode;

                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                                        }
                                    }
                                    else
                                    {
                                        SelectedEquipETransformer.XCode = LocalSelectedTransformer.XCode;
                                        if (SelectedEquipETransformer.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                                        {
                                            NewCode = SelectedEquipETransformer.XCode;
                                        }
                                        else
                                        {
                                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                                        }

                                    }
                                    //}
                                }
                                break;

                        }
                        #endregion
                        //    if (NewCode != Guid.Empty)
                        //    {
                        //        //ed.WriteMessage("NewCode:{0}\n", NewCode);
                        //        Atend.Base.Equipment.EProductPackage _EProductPackage = new EProductPackage();
                        //        _EProductPackage.ContainerPackageCode = ServerContainer.code;
                        //        _EProductPackage.XCode = NewCode;
                        //        _EProductPackage.Count = Convert.ToInt32(dr["Count"]);
                        //        _EProductPackage.TableType = Convert.ToInt16(Type);
                        //        if (!_EProductPackage.InsertX(LocalTransaction, LocalConnection))
                        //        {
                        //            throw new System.Exception("_EProductPackage.ServerInsert failed");
                        //        }

                        //        if (!SentFromServerToLocal(Convert.ToInt32(dr["Code"].ToString()), Convert.ToInt32(Type), NewCode, _transaction, _connection, LocalTransaction, LocalConnection))
                        //        {
                        //            throw new System.Exception("SentFromLocalToServer inside failed");
                        //        }
                        //    }
                        //    else
                        //    {
                        //        //throw new System.Exception("Pro was not inserted or Pro was not in switch");
                        //    }
                        //}
                        ////}
                        ////else
                        ////{
                        ////    throw new System.Exception("SelectedContainer.AccessInsert failed");
                        ////}
                        //}
                        //else
                        //{
                        //    ed.WriteMessage("No container Package was found\n");
                        //    //No container Package was found
                        //}
                    }
                    catch (System.Exception ex)
                    {
                        ed.WriteMessage("###ERROR EContainerPackage.SentFromLocalToServer :{0} \n", ex.Message);
                        _transaction.Rollback();
                        ed.WriteMessage("1\n");
                        _connection.Close();
                        ed.WriteMessage("2\n");

                        LocalTransaction.Rollback();
                        LocalConnection.Close();
                        ed.WriteMessage("************FALSE1\n");
                        return false;
                    }
                }
                catch (System.Exception ex1)
                {
                    ed.WriteMessage("Error in Catch1={0}\n", ex1.Message);
                    _transaction.Rollback();
                    _connection.Close();
                    ed.WriteMessage("3\n");

                    LocalTransaction.Rollback();
                    LocalConnection.Close();
                    ed.WriteMessage("************FALSE2\n");

                    return false;
                }

                //_transaction.Commit();
                //_connection.Close();

                //LocalTransaction.Commit();
                //LocalConnection.Close();
            }
            catch (System.Exception ex2)
            {
                ed.WriteMessage("Error in Catch2={0}\n", ex2.Message);
                _connection.Close();
                LocalConnection.Close();
                ed.WriteMessage("************FALSE3\n");

                return false;
            }
            _transaction.Commit();
            _connection.Close();

            LocalTransaction.Commit();
            LocalConnection.Close();
            return true;
        }

        public static bool ShareOnServer(int Type, Guid xCodeProduct)
        {
            Editor ed = Application.DocumentManager.MdiActiveDocument.Editor;
            SqlTransaction ServerTransaction = null;
            SqlConnection ServerConnection = new SqlConnection(Atend.Control.ConnectionString.ServercnString);

            SqlTransaction LocalTransaction = null;
            SqlConnection LocalConnection = new SqlConnection(Atend.Control.ConnectionString.LocalcnString);
            try
            {
                ServerConnection.Open();
                LocalConnection.Open();
                try
                {
                    ServerTransaction = ServerConnection.BeginTransaction();
                    LocalTransaction = LocalConnection.BeginTransaction();
                    //int ServerCode = FindCode(xCodeProduct, Type);
                    int NewCode = 0;
                    #region Switch
                    switch ((Atend.Control.Enum.ProductType)Convert.ToInt32(Type))
                    {

                        case Atend.Control.Enum.ProductType.AirPost:
                            ed.WriteMessage("Sub Is : AirPost \n");
                            Atend.Base.Equipment.EAirPost SelectedEquipEAirPost = Atend.Base.Equipment.EAirPost.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEAirPost.Code != -1)
                            {
                                if (SelectedEquipEAirPost.Code == 0)
                                {
                                    if (SelectedEquipEAirPost.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEAirPost.Code;
                                        if (!SelectedEquipEAirPost.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX Airpost Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EAirPost ServerSelectedEquipAirPost = Atend.Base.Equipment.EAirPost.ServerSelectByCode(SelectedEquipEAirPost.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedEquipAirPost.Code != -1)
                                    {
                                        if (SelectedEquipEAirPost.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEAirPost.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("airpost:There Is No Row On Server For Update " + Type.ToString());
                                    }
                                }
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;

                        case Atend.Control.Enum.ProductType.Arm:
                            ed.WriteMessage("Sub Is : Arm \n");
                            Atend.Base.Equipment.EArm SelectedEquipEArm = Atend.Base.Equipment.EArm.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEArm.Code != -1)
                            {
                                //Atend.Base.Equipment.EProp answer = Atend.Base.Equipment.EProp.AccessSelectByXCode(SelectedEquipEProp.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEArm.Code == 0)
                                {//confirm
                                    if (SelectedEquipEArm.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEArm.Code;
                                        if (!SelectedEquipEArm.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("Error in Updatex in Arm");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("container error in ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EArm ServerSelectedArm = Atend.Base.Equipment.EArm.ServerSelectByCode(SelectedEquipEArm.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedArm.Code != -1)
                                    {
                                        if (SelectedEquipEArm.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEArm.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("container error in ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("arm:There Is No Row On Server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;

                        case Atend.Control.Enum.ProductType.AuoKey3p:
                            ed.WriteMessage("Sub Is : AuoKey3p \n");

                            Atend.Base.Equipment.EAutoKey_3p SelectedEquipEAutoKey_3p = Atend.Base.Equipment.EAutoKey_3p.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEAutoKey_3p.Code != -1)
                            {
                                //Atend.Base.Equipment.EAutoKey_3p answer = Atend.Base.Equipment.EAutoKey_3p.AccessSelectByXCode(SelectedEquipEAutoKey_3p.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEAutoKey_3p.Code == 0)
                                {//confirm
                                    if (SelectedEquipEAutoKey_3p.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEAutoKey_3p.Code;
                                        if (!SelectedEquipEAutoKey_3p.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX AuoKey3p Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EAutoKey_3p ServerSelectedAutoKey3p = Atend.Base.Equipment.EAutoKey_3p.ServerSelectByCode(SelectedEquipEAutoKey_3p.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedAutoKey3p.Code != -1)
                                    {
                                        if (SelectedEquipEAutoKey_3p.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEAutoKey_3p.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("AuoKey3p:There Is No Row On Server For Update " + Type.ToString());
                                    }

                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.Breaker:
                            ed.WriteMessage("Sub Is : Breaker \n");
                            Atend.Base.Equipment.EBreaker SelectedEquipEBreaker = Atend.Base.Equipment.EBreaker.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEBreaker.Code != -1)
                            {
                                //Atend.Base.Equipment.EBreaker answer = Atend.Base.Equipment.EBreaker.AccessSelectByXCode(SelectedEquipEBreaker.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEBreaker.Code == 0)
                                {//confirm
                                    if (SelectedEquipEBreaker.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEBreaker.Code;
                                        if (!SelectedEquipEBreaker.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX Breaker Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("AccessInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EBreaker ServerSelectedBreaker = Atend.Base.Equipment.EBreaker.ServerSelectByCode(SelectedEquipEBreaker.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedBreaker.Code != -1)
                                    {
                                        if (SelectedEquipEBreaker.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEBreaker.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Breaker:There Is No Row On Server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.Bus:
                            ed.WriteMessage("Sub Is : Bus \n");
                            Atend.Base.Equipment.EBus SelectedEquipEBus = Atend.Base.Equipment.EBus.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEBus.Code != -1)
                            {
                                //Atend.Base.Equipment.EBus answer = Atend.Base.Equipment.EBus.AccessSelectByXCode(SelectedEquipEBus.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEBus.Code == 0)
                                {//confirm
                                    if (SelectedEquipEBus.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEBus.Code;
                                        if (!SelectedEquipEBus.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX Bus Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EBus ServerSelectedBus = Atend.Base.Equipment.EBus.ServerSelectByCode(SelectedEquipEBus.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedBus.Code != -1)
                                    {
                                        if (SelectedEquipEBus.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEBus.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Bus:There Is No Row On Server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.CatOut:
                            ed.WriteMessage("ShareOnServer Sub Is : CatOut \n");
                            #region Catout
                            Atend.Base.Equipment.ECatOut SelectedEquipECatOut = Atend.Base.Equipment.ECatOut.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipECatOut.Code != -1)
                            {
                                //Atend.Base.Equipment.ECatOut answer = Atend.Base.Equipment.ECatOut.AccessSelectByXCode(SelectedEquipECatOut.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipECatOut.Code == 0)
                                {//confirm
                                    if (SelectedEquipECatOut.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipECatOut.Code;
                                        if (!SelectedEquipECatOut.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateXCatOut Failed ");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.ECatOut ServerSelectedCatout = Atend.Base.Equipment.ECatOut.ServerSelectByCode(SelectedEquipECatOut.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedCatout.Code != -1)
                                    {
                                        if (SelectedEquipECatOut.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipECatOut.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("CatOut:There Is No Row On Server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            #endregion
                            break;
                        case Atend.Control.Enum.ProductType.Cell:
                            ed.WriteMessage("Sub Is : Cell \n");
                            Atend.Base.Equipment.ECell SelectedEquipECell = Atend.Base.Equipment.ECell.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipECell.Code != -1)
                            {
                                //Atend.Base.Equipment.ECell answer = Atend.Base.Equipment.ECell.AccessSelectByXCode(SelectedEquipECell.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipECell.Code == 0)
                                {//confirm
                                    if (SelectedEquipECell.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipECell.Code;
                                        if (!SelectedEquipECell.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX   Cell Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.ECell serverSelectedCell = Atend.Base.Equipment.ECell.ServerSelectByCode(SelectedEquipECell.Code, ServerConnection, ServerTransaction);
                                    if (serverSelectedCell.Code != -1)
                                    {
                                        if (SelectedEquipECell.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipECell.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Cell:There Is No Row On Server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.Conductor:
                            ed.WriteMessage("Sub Is : Conductor \n");
                            Atend.Base.Equipment.EConductor SelectedEquipEConductor = Atend.Base.Equipment.EConductor.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEConductor.Code != -1)
                            {
                                //Atend.Base.Equipment.EConductor answer = Atend.Base.Equipment.EConductor.AccessSelectByXCode(SelectedEquipEConductor.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEConductor.Code == 0)
                                {//confirm
                                    if (SelectedEquipEConductor.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEConductor.Code;
                                        if (!SelectedEquipEConductor.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX    Conductor     Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EConductor ServerSelectedConductor = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedEquipEConductor.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedConductor.Code != -1)
                                    {
                                        if (SelectedEquipEConductor.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEConductor.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Conductor:There Is No Row On Server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;

                        case Atend.Control.Enum.ProductType.ConductorTip:
                            ed.WriteMessage("Sub Is : ConductorTip \n");

                            Atend.Base.Equipment.EConductorTip SelectedequipEConductorTip = Atend.Base.Equipment.EConductorTip.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);




                            if (SelectedequipEConductorTip.Code != -1)
                            {

                                Atend.Base.Equipment.EConductor SelectedPhaseConductor = Atend.Base.Equipment.EConductor.SelectByXCodeForDesign(SelectedequipEConductorTip.PhaseProductXCode, LocalConnection, LocalTransaction);
                                Atend.Base.Equipment.EConductor SelectedNeutralConductor = Atend.Base.Equipment.EConductor.SelectByXCodeForDesign(SelectedequipEConductorTip.NeutralProductXCode, LocalConnection, LocalTransaction);
                                Atend.Base.Equipment.EConductor SelectedNightConductor = Atend.Base.Equipment.EConductor.SelectByXCodeForDesign(SelectedequipEConductorTip.NightProductXCode, LocalConnection, LocalTransaction);

                                if (SelectedPhaseConductor.Code != -1)
                                {
                                    if (SelectedPhaseConductor.Code == 0)
                                    {
                                        if (SelectedPhaseConductor.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedPhaseConductor.Code;
                                            if (!SelectedPhaseConductor.UpdateX(LocalTransaction, LocalConnection))
                                                throw new System.Exception("SelectedPhaseConductor Updatex Failed");
                                        }
                                        else
                                        {
                                            throw new System.Exception("Conductor ServerInsert failed in CondTip");
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EConductor ServerCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedPhaseConductor.Code, ServerConnection, ServerTransaction);
                                        if (ServerCond.Code != -1)
                                        {
                                            if (SelectedPhaseConductor.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedPhaseConductor.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("PhaseCond ServerUpdate Failed in CondTip");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("There Is No Row On Server in CondPhase in CondTip");
                                        }
                                    }

                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data In Phase Conductor in Conductor Tip");
                                }




                                if (SelectedNightConductor.Code != -1)
                                {
                                    if (SelectedNightConductor.Code == 0)
                                    {
                                        if (SelectedNightConductor.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedNightConductor.Code;
                                            if (!SelectedNightConductor.UpdateX(LocalTransaction, LocalConnection))
                                                throw new System.Exception("SelectedNightConductor Updatex Failed");
                                        }
                                        else
                                        {
                                            throw new System.Exception("NightConductor ServerInsert failed in CondTip");
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EConductor ServerNightCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedNightConductor.Code, ServerConnection, ServerTransaction);
                                        if (ServerNightCond.Code != -1)
                                        {
                                            if (ServerNightCond.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = ServerNightCond.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("NightCond ServerUpdate Failed in CondTip");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("There Is No Row On Server in CondNight in CondTip");
                                        }
                                    }

                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data In Night Conductor in Conductor Tip");
                                }




                                if (SelectedNeutralConductor.Code != -1)
                                {
                                    if (SelectedNeutralConductor.Code == 0)
                                    {
                                        if (SelectedNeutralConductor.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedNeutralConductor.Code;
                                            if (!SelectedNeutralConductor.UpdateX(LocalTransaction, LocalConnection))
                                                throw new System.Exception("SelectedNeutralConductor Updatex Failed");
                                        }
                                        else
                                        {
                                            throw new System.Exception("NeutralConductor ServerInsert failed in CondTip");
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EConductor ServerNeutralCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedNeutralConductor.Code, ServerConnection, ServerTransaction);
                                        if (ServerNeutralCond.Code != -1)
                                        {
                                            if (SelectedNeutralConductor.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedNeutralConductor.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("NeutralCond ServerUpdate Failed in CondTip");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("There Is No Row On Server in CondNeutral in CondTip");
                                        }
                                    }

                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data In PNetral Conductor in Conductor Tip");
                                }


                                SelectedequipEConductorTip.PhaseProductCode = SelectedPhaseConductor.Code;
                                SelectedequipEConductorTip.NeutralProductCode = SelectedNeutralConductor.Code;
                                SelectedequipEConductorTip.NightProductCode = SelectedNightConductor.Code;
                                ed.WriteMessage("**ShareOnServer:SelectedequipEConductorTip.Code={0}\n", SelectedequipEConductorTip.Code);
                                if (SelectedequipEConductorTip.Code == 0)
                                {
                                    if (SelectedequipEConductorTip.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedequipEConductorTip.Code;
                                        if (!SelectedequipEConductorTip.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX    ConductorTip     Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EConductorTip ServerSelectedConductorTip = Atend.Base.Equipment.EConductorTip.ServerSelectByCode(SelectedequipEConductorTip.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedConductorTip.Code != -1)
                                    {
                                        if (SelectedequipEConductorTip.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedequipEConductorTip.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Conductor:There Is No Row On Server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.Consol:
                            ed.WriteMessage("Sub Is : Consol \n");
                            //ed.WriteMessage("**XCODE={0}\n", dr["XCode"].ToString());
                            Atend.Base.Equipment.EConsol SelectedEquipEConsol = Atend.Base.Equipment.EConsol.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEConsol.Code != -1)
                            {
                                //Atend.Base.Equipment.EConsol answer = Atend.Base.Equipment.EConsol.AccessSelectByXCode(SelectedEquipEConsol.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEConsol.Code == 0)
                                {//confirm
                                    if (SelectedEquipEConsol.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEConsol.Code;
                                        if (!SelectedEquipEConsol.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX   Consol      Failed");
                                        }

                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EConsol ServerSelectedConsol = Atend.Base.Equipment.EConsol.ServerSelectByCode(SelectedEquipEConsol.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedConsol.Code != -1)
                                    {
                                        if (SelectedEquipEConsol.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEConsol.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Consol:There Is No Row On Server For Update " + Type.ToString());
                                    }
                                }
                                // }
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.Countor:
                            ed.WriteMessage("Sub Is : Countor \n");
                            Atend.Base.Equipment.ECountor SelectedEquipECountor = Atend.Base.Equipment.ECountor.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipECountor.Code != -1)
                            {
                                //Atend.Base.Equipment.ECountor answer = Atend.Base.Equipment.ECountor.AccessSelectByXCode(SelectedEquipECountor.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipECountor.Code == 0)
                                {//confirm
                                    if (SelectedEquipECountor.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipECountor.Code;
                                        if (!SelectedEquipECountor.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX  Countor  Failed");
                                        }

                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.ECountor ServerSelectedCountor = Atend.Base.Equipment.ECountor.ServerSelectByCode(SelectedEquipECountor.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedCountor.Code != -1)
                                    {
                                        if (SelectedEquipECountor.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipECountor.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Countor:There Is No Row On Server For Update " + Type.ToString());
                                    }
                                }


                                // }
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.CT:
                            ed.WriteMessage("Sub Is : CT \n");
                            Atend.Base.Equipment.ECT SelectedEquipECT = Atend.Base.Equipment.ECT.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipECT.Code != -1)
                            {
                                //Atend.Base.Equipment.ECT answer = Atend.Base.Equipment.ECT.AccessSelectByXCode(SelectedEquipECT.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipECT.Code == 0)
                                {//confirm
                                    if (SelectedEquipECT.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipECT.Code;
                                        if (!SelectedEquipECT.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX  CT  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.ECT ServerSelectedCT = Atend.Base.Equipment.ECT.ServerSelectByCode(SelectedEquipECT.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedCT.Code != -1)
                                    {
                                        if (SelectedEquipECT.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipECT.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("CT:There Is No Row On Server For Update " + Type.ToString());
                                    }
                                }

                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.DB:
                            ed.WriteMessage("Sub Is : DB 3 \n");
                            ed.WriteMessage("{0}\n", xCodeProduct);
                            Atend.Base.Equipment.EDB SelectedEquipEDB = Atend.Base.Equipment.EDB.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            ed.WriteMessage("SelectedEquipEDB:{0}\n", SelectedEquipEDB.Code);
                            if (SelectedEquipEDB.Code != -1)
                            {
                                if (SelectedEquipEDB.Code == 0)
                                {
                                    ed.WriteMessage("GO FOR DB INSERT\n");
                                    if (SelectedEquipEDB.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEDB.Code;
                                        ed.WriteMessage("DB.Code={0}\n", NewCode);
                                        if (!SelectedEquipEDB.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX  DB  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());

                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EDB ServerSelectedDB = Atend.Base.Equipment.EDB.ServerSelectByCode(SelectedEquipEDB.Code, ServerConnection, ServerTransaction);
                                    ed.WriteMessage("ServerSelectedDB={0}\n", ServerSelectedDB.Code);
                                    if (ServerSelectedDB.Code != -1)
                                    {
                                        ed.WriteMessage("GO For Update\n");
                                        if (SelectedEquipEDB.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEDB.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());

                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("DB:There Is No Row On Server For Update " + Type.ToString());
                                    }
                                }

                                ed.WriteMessage("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\n");
                                DataTable DBPhuses = Atend.Base.Equipment.EDBPhuse.SelectByDBXCode(xCodeProduct, LocalTransaction, LocalConnection);
                                ed.WriteMessage("DBPHUSES Rows.Count={0}\n", DBPhuses.Rows.Count);
                                if (!Atend.Base.Equipment.EDBPhuse.Delete(ServerTransaction, ServerConnection, SelectedEquipEDB.Code))
                                {
                                    throw new System.Exception("Error In Delete DbPhuse In DB ");
                                }
                                foreach (DataRow DBPhuse in DBPhuses.Rows)
                                {
                                    Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.SelectByXCodeForDesign(new Guid(DBPhuse["PhuseXcode"].ToString()), LocalConnection, LocalTransaction);
                                    ed.WriteMessage("Phuse.Code={0},{1},PhusePoleXCode={2}\n", _EPhuse.Code, DBPhuse["PhuseXcode"], _EPhuse.PhusePoleXCode);
                                    Atend.Base.Equipment.EPhusePole _EphusePole = Atend.Base.Equipment.EPhusePole.SelectByXCodeForDesign(_EPhuse.PhusePoleXCode, LocalConnection, LocalTransaction);
                                    ed.WriteMessage("_EphusePole.Code :{0}\n", _EphusePole.Code);
                                    if (_EphusePole.Code != -1)
                                    {
                                        if (_EphusePole.Code == 0)
                                        {
                                            ed.WriteMessage("__ insert\nn");
                                            if (!_EphusePole.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("ServerInsert failed" + Type.ToString() + ":PhusePole");
                                            }
                                            else
                                            {

                                                if (!_EphusePole.UpdateX(LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception(" UpdateX  EPhusePole  Failed");
                                                }

                                            }
                                        }
                                        else
                                        {
                                            Atend.Base.Equipment.EPhusePole ServerSelectedPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(_EphusePole.Code, ServerConnection, ServerTransaction);
                                            if (ServerSelectedPhusePole.Code != -1)
                                            {
                                                if (!_EphusePole.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("ServerUpdate failed" + Type.ToString() + ":PhusePole");
                                                }
                                            }
                                            else
                                            {
                                                throw new System.Exception("There Is No Row on Server For update " + Type.ToString());
                                            }
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data In PhusePole inDB");
                                    }



                                    _EPhuse.PhusePoleCode = _EphusePole.Code;
                                    if (_EPhuse.Code != -1)
                                    {
                                        if (_EPhuse.Code == 0)
                                        {
                                            if (!_EPhuse.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("ServerInsert failed" + Type.ToString() + ":Phuse");
                                            }
                                            else
                                            {

                                                if (!_EPhuse.UpdateX(LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception(" UpdateX  EPhuse  Failed");
                                                }

                                            }
                                        }
                                        else
                                        {
                                            Atend.Base.Equipment.EPhuse ServerSelectedPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(_EPhuse.Code, ServerConnection, ServerTransaction);
                                            if (ServerSelectedPhuse.Code != -1)
                                            {
                                                if (!_EPhuse.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("ServerUpdate failed" + Type.ToString() + ":Phuse");
                                                }
                                            }
                                            else
                                            {
                                                throw new System.Exception("There Is No Row on Server For update " + Type.ToString());
                                            }
                                        }

                                        Atend.Base.Equipment.EDBPhuse _edbPhuse = Atend.Base.Equipment.EDBPhuse.SelectByXCodeForDesign(new Guid(DBPhuse["XCode"].ToString()), LocalConnection, LocalTransaction);
                                        ed.WriteMessage("dbPhuse.Code={0}\n", _edbPhuse.Code);
                                        if (_edbPhuse.Code != -1)
                                        {
                                            _edbPhuse.DBCode = SelectedEquipEDB.Code;
                                            _edbPhuse.PhuseCode = _EPhuse.Code;
                                            //if (_edbPhuse.Code == 0)
                                            //{
                                            ed.WriteMessage("go for Insert dbPhuse\n");
                                            if (!_edbPhuse.ServerInsert(ServerTransaction, ServerConnection, false, false, LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("ServerInsert failed" + Type.ToString() + ":DBPhuse");
                                            }
                                            else
                                            {

                                                if (!_edbPhuse.UpdateX(LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception(" UpdateX  dbPhuse  Failed");
                                                }
                                            }
                                            //}
                                            //else
                                            //{
                                            //    Atend.Base.Equipment.EDBPhuse ServerSelectedDBPhuse = Atend.Base.Equipment.EDBPhuse.ServerSelectByCode(_edbPhuse.Code, ServerConnection, ServerTransaction);
                                            //    ed.WriteMessage("ServerSelectedDBPhuse.Code={0}\n", ServerSelectedDBPhuse.Code);
                                            //    if (ServerSelectedDBPhuse.Code != -1)
                                            //    {
                                            //        if (!_edbPhuse.ServerUpdate(ServerTransaction, ServerConnection, false, false, LocalTransaction, LocalConnection))
                                            //        {
                                            //            throw new System.Exception("ServerUpdate failed" + Type.ToString() + ":DBPhuse");
                                            //        }
                                            //    }
                                            //    else
                                            //    {
                                            //        throw new System.Exception("DBPhuse:There Is No Row on Server For update " + Type.ToString());
                                            //    }
                                            //}
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of Data in edbPhuse");
                                        }

                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in DBPhuse");
                                    }

                                }
                            }
                            else
                            {
                                throw new System.Exception("AccessInsert failed" + Type.ToString());
                            }


                            break;
                        case Atend.Control.Enum.ProductType.Disconnector:
                            ed.WriteMessage("Sub Is : Disconnector \n");
                            Atend.Base.Equipment.EDisconnector SelectedEquipEDisconnector = Atend.Base.Equipment.EDisconnector.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEDisconnector.Code != -1)
                            {
                                //Atend.Base.Equipment.EDisconnector answer = Atend.Base.Equipment.EDisconnector.AccessSelectByXCode(SelectedEquipEDisconnector.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEDisconnector.Code == 0)
                                {//confirm
                                    if (SelectedEquipEDisconnector.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEDisconnector.Code;
                                        if (!SelectedEquipEDisconnector.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX Disconnector   Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EDisconnector ServerSelectedDisconnector = Atend.Base.Equipment.EDisconnector.ServerSelectByCode(SelectedEquipEDisconnector.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedDisconnector.Code != -1)
                                    {
                                        if (SelectedEquipEDisconnector.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEDisconnector.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Disconnector:There Is No Row on Server For update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;

                        case Atend.Control.Enum.ProductType.Floor:
                            ed.WriteMessage("Sub Is : Floor \n");
                            Atend.Base.Equipment.EFloor SelectedEquipEFloor = Atend.Base.Equipment.EFloor.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEFloor.Code != -1)
                            {
                                //Atend.Base.Equipment.EFloor answer = Atend.Base.Equipment.EFloor.AccessSelectByXCode(SelectedEquipEFloor.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEFloor.Code == 0)
                                {//confirm
                                    if (SelectedEquipEFloor.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEFloor.Code;
                                        if (!SelectedEquipEFloor.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX   Floor Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EFloor ServerSelectedFloor = Atend.Base.Equipment.EFloor.ServerSelectByCode(SelectedEquipEFloor.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedFloor.Code != -1)
                                    {
                                        if (SelectedEquipEFloor.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEFloor.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Floor:There Is No Row on Server For update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;


                        case Atend.Control.Enum.ProductType.Ground:
                            ed.WriteMessage("Sub Is : Ground \n");
                            Atend.Base.Equipment.EGround SelectedEquipEGround = Atend.Base.Equipment.EGround.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEGround.Code != -1)
                            {
                                //Atend.Base.Equipment.EGround answer = Atend.Base.Equipment.EGround.AccessSelectByXCode(SelectedEquipEGround.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEGround.Code == 0)
                                {
                                    if (SelectedEquipEGround.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEGround.Code;
                                        if (!SelectedEquipEGround.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX  Ground  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {

                                    Atend.Base.Equipment.EGround ServerSelectedGround = Atend.Base.Equipment.EGround.ServerSelectByCode(SelectedEquipEGround.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedGround.Code != -1)
                                    {
                                        if (SelectedEquipEGround.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEGround.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Ground:There Is No Row on Server For update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;


                        case Atend.Control.Enum.ProductType.GroundCabel:
                            //ed.WriteMessage("Sub Is : MiddleCabel :={0}\n", dr["XCode"].ToString());
                            Atend.Base.Equipment.EGroundCabel SelectedEquipEMiddleGroundCabel = Atend.Base.Equipment.EGroundCabel.SelectByXCodeForDeign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEMiddleGroundCabel.Code != -1)
                            {
                                //Atend.Base.Equipment.EGroundCabel answer = Atend.Base.Equipment.EGroundCabel.AccessSelectByXCode(SelectedEquipEMiddleGroundCabel.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEMiddleGroundCabel.Code == 0)
                                {//confirm
                                    if (SelectedEquipEMiddleGroundCabel.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEMiddleGroundCabel.Code;
                                        if (!SelectedEquipEMiddleGroundCabel.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX  GroundCabel  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EGroundCabel ServerSelectedGroundCabel = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(SelectedEquipEMiddleGroundCabel.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedGroundCabel.Code != -1)
                                    {
                                        if (SelectedEquipEMiddleGroundCabel.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEMiddleGroundCabel.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpDate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("GroundCabel:There Is No Row on Server For update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;


                        case Atend.Control.Enum.ProductType.GroundCabelTip:
                            ed.WriteMessage("Sub Is : MiddleCabel :={0}\n", xCodeProduct);
                            Atend.Base.Equipment.EGroundCabelTip SelectedEquipEMiddleGroundCabelTip = Atend.Base.Equipment.EGroundCabelTip.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEMiddleGroundCabelTip.Code != -1)
                            {

                                Atend.Base.Equipment.EGroundCabel SelectedMidGroundPhase = Atend.Base.Equipment.EGroundCabel.SelectByXCode(LocalTransaction, LocalConnection, SelectedEquipEMiddleGroundCabelTip.PhaseProductXCode);
                                Atend.Base.Equipment.EGroundCabel SeletedMidGroundNeutral = Atend.Base.Equipment.EGroundCabel.SelectByXCode(LocalTransaction, LocalConnection, SelectedEquipEMiddleGroundCabelTip.NeutralProductXCode);
                                if (SelectedMidGroundPhase.Code != -1)
                                {
                                    if (SelectedMidGroundPhase.Code == 0)
                                    {
                                        if (SelectedMidGroundPhase.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedMidGroundPhase.Code;
                                            if (!SelectedMidGroundPhase.UpdateX(LocalTransaction, LocalConnection))
                                                throw new System.Exception("SelectedMidGroundPhase Updatex Failed");
                                        }
                                        else
                                        {
                                            throw new System.Exception("SelectedMidGroundPhase ServerInser Failed");
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EGroundCabel ServerMidGroundPhase = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(SelectedMidGroundPhase.Code, ServerConnection, ServerTransaction);
                                        if (ServerMidGroundPhase.Code != -1)
                                        {
                                            if (SelectedMidGroundPhase.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedMidGroundPhase.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("SelectedMidGroundPhase Server Update Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("There Is No Row On Server For Update SelectedMidGroundPhase");
                                        }
                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of Data SelectedMidGroundPhase");
                                }





                                if (SeletedMidGroundNeutral.Code != -1)
                                {
                                    if (SeletedMidGroundNeutral.Code == 0)
                                    {
                                        if (SeletedMidGroundNeutral.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SeletedMidGroundNeutral.Code;
                                            if (!SeletedMidGroundNeutral.UpdateX(LocalTransaction, LocalConnection))
                                                throw new System.Exception("SeletedMidGroundNeutral Updatex Failed");
                                        }
                                        else
                                        {
                                            throw new System.Exception("SeletedMidGroundNeutral ServerInser Failed");
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EGroundCabel ServerMidGroundNeutral = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(SeletedMidGroundNeutral.Code, ServerConnection, ServerTransaction);
                                        if (ServerMidGroundNeutral.Code != -1)
                                        {
                                            if (SeletedMidGroundNeutral.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SeletedMidGroundNeutral.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("SeletedMidGroundNeutral Server Update Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("There Is No Row On Server For Update SeletedMidGroundNeutral");
                                        }
                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack Of Data SeletedMidGroundNeutral");
                                }



                                SelectedEquipEMiddleGroundCabelTip.PhaseProductCode = SelectedMidGroundPhase.Code;
                                SelectedEquipEMiddleGroundCabelTip.NeutralProductCode = SeletedMidGroundNeutral.Code;

                                if (SelectedEquipEMiddleGroundCabelTip.Code == 0)
                                {//confirm
                                    if (SelectedEquipEMiddleGroundCabelTip.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEMiddleGroundCabelTip.Code;
                                        if (!SelectedEquipEMiddleGroundCabelTip.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX  GroundCabel  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EGroundCabel ServerSelectedGroundCabel = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(SelectedEquipEMiddleGroundCabelTip.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedGroundCabel.Code != -1)
                                    {
                                        if (SelectedEquipEMiddleGroundCabelTip.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEMiddleGroundCabelTip.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpDate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("GroundCabel:There Is No Row on Server For update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;


                        case Atend.Control.Enum.ProductType.GroundPost:
                            ed.WriteMessage("Sub Is : GroundPost \n");
                            Atend.Base.Equipment.EGroundPost SelectedEquipEGroundPost = Atend.Base.Equipment.EGroundPost.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEGroundPost.Code != -1)
                            {
                                if (SelectedEquipEGroundPost.Code == 0)
                                {//confirm
                                    if (SelectedEquipEGroundPost.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEGroundPost.Code;
                                        if (!SelectedEquipEGroundPost.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX  GroundPost  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EGroundPost SereverSelectedGroundPost = Atend.Base.Equipment.EGroundPost.ServerSelectByCode(SelectedEquipEGroundPost.Code, ServerConnection, ServerTransaction);
                                    if (SereverSelectedGroundPost.Code != -1)
                                    {
                                        if (SelectedEquipEGroundPost.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEGroundPost.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("GroundPost:There Is No Row on Server For update " + Type.ToString());
                                    }
                                }
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;



                        case Atend.Control.Enum.ProductType.Halter:
                            ed.WriteMessage("Sub Is : Halter \n");
                            Atend.Base.Equipment.EHalter SelectedEquipEHalter = Atend.Base.Equipment.EHalter.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEHalter.Code != -1)
                            {
                                //Atend.Base.Equipment.EHalter answer = Atend.Base.Equipment.EHalter.AccessSelectByXCode(SelectedEquipEHalter.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEHalter.Code == 0)
                                {//confirm
                                    if (SelectedEquipEHalter.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEHalter.Code;
                                        if (!SelectedEquipEHalter.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX  Halter  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EHalter ServerSelectedHalter = Atend.Base.Equipment.EHalter.ServerSelectByCode(SelectedEquipEHalter.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedHalter.Code != -1)
                                    {
                                        if (SelectedEquipEHalter.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEHalter.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Halter:There Is No Row on Server For update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;

                        //case Atend.Control.Enum.ProductType.Halter:
                        //    Atend.Base.Equipment. SelectedEquip = Atend.Base.Equipment.EBreaker.SelectByXCode(XCode);
                        //    if (SelectedEquip.Code != -1)
                        //    {
                        //        if (SelectedEquip.AccessInsert(_transaction, _connection))
                        //        {
                        //            NewCode = SelectedEquip.Code;
                        //        }
                        //        else
                        //        {
                        //            throw new Exception("{0}.AccessInsert failed", ((Atend.Control.Enum.ProductType)Convert.ToInt32(dr["TableType"])).ToString());
                        //        }
                        //    }
                        //    break;
                        case Atend.Control.Enum.ProductType.HeaderCabel:
                            ed.WriteMessage("Sub Is : HeaderCabel \n");
                            Atend.Base.Equipment.EHeaderCabel SelectedEquipEHeaderCabel = Atend.Base.Equipment.EHeaderCabel.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEHeaderCabel.Code != -1)
                            {
                                //Atend.Base.Equipment.EHeaderCabel answer = Atend.Base.Equipment.EHeaderCabel.AccessSelectByXCode(SelectedEquipEHeaderCabel.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEHeaderCabel.Code == 0)
                                {//confirm
                                    if (SelectedEquipEHeaderCabel.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEHeaderCabel.Code;
                                        if (!SelectedEquipEHeaderCabel.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX  HeaderCabel  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EHeaderCabel ServerSelectedHeaderCabel = Atend.Base.Equipment.EHeaderCabel.ServerSelectByCode(SelectedEquipEHeaderCabel.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedHeaderCabel.Code != -1)
                                    {
                                        if (SelectedEquipEHeaderCabel.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEHeaderCabel.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("HeaderCabel:There Is No Row on Server For update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.Insulator:
                            ed.WriteMessage("Sub Is : Insulator \n");
                            Atend.Base.Equipment.EInsulator SelectedEquipEInsulator = Atend.Base.Equipment.EInsulator.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEInsulator.Code != -1)
                            {
                                //Atend.Base.Equipment.EInsulator answer = Atend.Base.Equipment.EInsulator.AccessSelectByXCode(SelectedEquipEInsulator.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEInsulator.Code == 0)
                                {//confirm
                                    if (SelectedEquipEInsulator.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEInsulator.Code;
                                        if (!SelectedEquipEInsulator.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX    Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EInsulator ServerSelectedInsulator = Atend.Base.Equipment.EInsulator.ServerSelectByCode(SelectedEquipEInsulator.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedInsulator.Code != -1)
                                    {
                                        if (SelectedEquipEInsulator.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEInsulator.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Insulator:There Is No Row on Server For update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;


                        case Atend.Control.Enum.ProductType.InsulatorChain:
                            ed.WriteMessage("Sub Is : InsulatorChain \n");
                            Atend.Base.Equipment.EInsulatorChain SelectedEquipEInsulatorChain = Atend.Base.Equipment.EInsulatorChain.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEInsulatorChain.Code != -1)
                            {
                                //Atend.Base.Equipment.EInsulatorChain answer = Atend.Base.Equipment.EInsulatorChain.AccessSelectByXCode(SelectedEquipEInsulatorChain.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEInsulatorChain.Code == 0)
                                {//confirm
                                    if (SelectedEquipEInsulatorChain.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEInsulatorChain.Code;
                                        if (!SelectedEquipEInsulatorChain.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX  InsulatorChain  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EInsulatorChain ServerSelectedInsulatorChain = Atend.Base.Equipment.EInsulatorChain.ServerSelectByCode(SelectedEquipEInsulatorChain.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedInsulatorChain.Code != -1)
                                    {

                                        if (SelectedEquipEInsulatorChain.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEInsulatorChain.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("InsulatorChain:There Is No Row on Server For update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;

                        case Atend.Control.Enum.ProductType.InsulatorPipe:
                            ed.WriteMessage("Sub Is : InsulatorPipe \n");
                            Atend.Base.Equipment.EInsulatorPipe SelectedEquipEInsulatorPipe = Atend.Base.Equipment.EInsulatorPipe.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEInsulatorPipe.Code != -1)
                            {
                                //Atend.Base.Equipment.EInsulatorPipe answer = Atend.Base.Equipment.EInsulatorPipe.AccessSelectByXCode(SelectedEquipEInsulatorPipe.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEInsulatorPipe.Code == 0)
                                {//confirm
                                    if (SelectedEquipEInsulatorPipe.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEInsulatorPipe.Code;
                                        if (!SelectedEquipEInsulatorPipe.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX  InsulatorPipe  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EInsulatorPipe ServerSelectedInsulatorPipe = Atend.Base.Equipment.EInsulatorPipe.ServerSelectByCode(SelectedEquipEInsulatorPipe.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedInsulatorPipe.Code != 0)
                                    {
                                        if (SelectedEquipEInsulatorPipe.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEInsulatorPipe.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("InsulatorPipe:There Is No Row OnServer For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;


                        case Atend.Control.Enum.ProductType.MiddleJackPanel:
                            ////ed.WriteMessage("AAA : {0} \n", new Guid(dr["XCode"].ToString()));
                            ed.WriteMessage("Sub Is : MiddleJackPanel \n");
                            Atend.Base.Equipment.EJAckPanel SelectedEquipEJAckPanel = Atend.Base.Equipment.EJAckPanel.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEJAckPanel.Code != -1)
                            {
                                //Atend.Base.Equipment.EJAckPanel answer = Atend.Base.Equipment.EJAckPanel.AccessSelectByXCode(SelectedEquipEJAckPanel.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{

                                Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.SelectByXCodeForDesign(SelectedEquipEJAckPanel.MasterProductXCode, LocalConnection, LocalTransaction);
                                if (_eBus.Code != -1)
                                {
                                    if (_eBus.Code == 0)
                                    {
                                        if (!_eBus.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("ServerInsert failed" + Type.ToString() + ":Bus");
                                        }
                                        else
                                        {

                                            if (!_eBus.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX  eBus  Failed");
                                            }



                                        }
                                    }
                                    else
                                    {

                                        Atend.Base.Equipment.EBus SeverSelectedBus = Atend.Base.Equipment.EBus.ServerSelectByCode(_eBus.Code, ServerConnection, ServerTransaction);
                                        if (SeverSelectedBus.Code != -1)
                                        {
                                            if (!_eBus.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("ServerUpdate failed" + Type.ToString() + ":Bus");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("MiddleJackPanel:There is No row On server For Update " + Type.ToString());
                                        }
                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack of data in MiddleJackPanel:Bus");
                                }

                                SelectedEquipEJAckPanel.MasterProductCode = _eBus.Code;
                                if (SelectedEquipEJAckPanel.Code == 0)
                                {
                                    //confirm
                                    if (SelectedEquipEJAckPanel.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEJAckPanel.Code;

                                        if (!SelectedEquipEJAckPanel.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX    Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Serevr Insert Failed in MJackPanel");
                                    }
                                }
                                else
                                {

                                    Atend.Base.Equipment.EJAckPanel ServerSelectedJackPanel = Atend.Base.Equipment.EJAckPanel.ServerSelectByCode(SelectedEquipEJAckPanel.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedJackPanel.Code != -1)
                                    {
                                        if (SelectedEquipEJAckPanel.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEJAckPanel.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Serevr Update Failed in MJackPanel");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("There is No row On server For Update " + Type.ToString());
                                    }
                                }

                                //if (SelectedEquipEJAckPanel.ServerInsert(_transaction, _connection, true, false))
                                //{
                                //    NewCode = SelectedEquipEJAckPanel.Code;
                                DataTable _JPS = Atend.Base.Equipment.EJackPanelCell.SelectByJackPanelXCode(LocalConnection, LocalTransaction, SelectedEquipEJAckPanel.XCode);
                                if (!Atend.Base.Equipment.EJackPanelCell.Delete(ServerTransaction, ServerConnection, SelectedEquipEJAckPanel.Code))
                                {
                                    throw new System.Exception("Error in Delete JackPanelCell in Share Onserver");
                                }

                                foreach (DataRow _JPSdr in _JPS.Rows)
                                {
                                    Atend.Base.Equipment.ECell _eCell = Atend.Base.Equipment.ECell.SelectByXCodeForDesign(new Guid(_JPSdr["ProductXCode"].ToString()), LocalConnection, LocalTransaction);
                                    if (_eCell.Code != -1)
                                    {
                                        if (_eCell.Code == 0)
                                        {
                                            if (!_eCell.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("Server Insert failed" + Type.ToString() + ":Cell");
                                            }
                                            else
                                            {

                                                if (!_eCell.UpdateX(LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception(" UpdateX Cell   Failed");
                                                }

                                            }
                                        }
                                        else
                                        {
                                            Atend.Base.Equipment.ECell ServerSelectedCell = Atend.Base.Equipment.ECell.ServerSelectByCode(_eCell.Code, ServerConnection, ServerTransaction);
                                            if (ServerSelectedCell.Code != -1)
                                            {
                                                if (!_eCell.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("ServerUpdate failed" + Type.ToString() + ":Cell");
                                                }
                                            }
                                            else
                                            {
                                                throw new System.Exception("cellINjackpanel:There is No row On server For Update " + Type.ToString());
                                            }
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in MiddleJackPanel:Cell");
                                    }
                                    Atend.Base.Equipment.EJackPanelCell _EJC = Atend.Base.Equipment.EJackPanelCell.SelectByXCode(new Guid(_JPSdr["XCode"].ToString()), LocalConnection, LocalTransaction);

                                    if (_EJC.Code != -1)
                                    {
                                        _EJC.ProductCode = _eCell.Code;
                                        _EJC.JackPanelCode = SelectedEquipEJAckPanel.Code;
                                        //if (_EJC.Code == 0)
                                        //{
                                        if (!_EJC.ServerInsert(ServerTransaction, ServerConnection, false, false, LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("ServerInsert failed" + Type.ToString() + ":JackPanelCell");
                                        }
                                        else
                                        {
                                            if (!_EJC.UpdateX(LocalConnection, LocalTransaction))
                                            {
                                                throw new System.Exception(" UpdateX    Failed");
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    Atend.Base.Equipment.EJackPanelCell ServerSelectedJackPanelCell = Atend.Base.Equipment.EJackPanelCell.ServerSelectByCode(_EJC.Code, ServerConnection, ServerTransaction);
                                        //    if (ServerSelectedJackPanelCell.Code != -1)
                                        //    {
                                        //        if (!_EJC.ServerUpdate(ServerTransaction, ServerConnection, false, false, LocalTransaction, LocalConnection))
                                        //        {
                                        //            throw new System.Exception("Server Update failed" + Type.ToString() + ":JackPanelCell");
                                        //        }
                                        //    }
                                        //    else
                                        //    {
                                        //        throw new System.Exception("JackPanelCell:There Is no Row On server For Update " + Type.ToString());
                                        //    }
                                        //}
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in MiddleJackPanel:JackPanelCell");
                                    }
                                }
                            }
                            else
                            {
                                throw new System.Exception("Lack Of DAta in MidJackPanel");
                            }
                            //}
                            //}
                            break;


                        case Atend.Control.Enum.ProductType.WeekJackPanel:
                            ed.WriteMessage("Sub Is : WeekJackPanel \n");
                            Atend.Base.Equipment.EJackPanelWeek SelectedEquipWeekJackPanel = Atend.Base.Equipment.EJackPanelWeek.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipWeekJackPanel.Code != -1)
                            {


                                Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.SelectByXCodeForDesign(SelectedEquipWeekJackPanel.BusXCode, LocalConnection, LocalTransaction);
                                if (_eBus.Code != -1)
                                {
                                    if (_eBus.Code == 0)
                                    {
                                        if (!_eBus.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("Server Insert failed" + Type.ToString() + ":Bus");
                                        }
                                        else
                                        {
                                            if (!_eBus.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX  Bus  Failed");
                                            }
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EBus ServerSelectedBus = Atend.Base.Equipment.EBus.ServerSelectByCode(_eBus.Code, ServerConnection, ServerTransaction);
                                        if (ServerSelectedBus.Code != -1)
                                        {
                                            if (!_eBus.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("Server Update failed" + Type.ToString() + ":Bus");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("WeekJackPanel:There is No row On server For Update " + Type.ToString());
                                        }
                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack of data in WeekJackPanel:Bus");
                                }
                                SelectedEquipWeekJackPanel.BusCode = _eBus.Code;

                                Atend.Base.Equipment.EAutoKey_3p _Key = Atend.Base.Equipment.EAutoKey_3p.SelectByXCodeForDesign(SelectedEquipWeekJackPanel.AutoKey3pXCode, LocalConnection, LocalTransaction);
                                //ed.WriteMessage("1\n");

                                if (_Key.Code != -1)
                                {
                                    //ed.WriteMessage("2\n");
                                    if (_Key.Code == 0)
                                    {
                                        if (!_Key.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            //ed.WriteMessage("3\n");
                                            throw new System.Exception("Server Insert failed" + Type.ToString() + ":EAutoKey_3p");
                                        }
                                        else
                                        {
                                            if (!_Key.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception(" UpdateX  Key  Failed");
                                            }
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EAutoKey_3p ServerSelectedAutokeyAuto3p = Atend.Base.Equipment.EAutoKey_3p.ServerSelectByCode(_Key.Code, ServerConnection, ServerTransaction);
                                        if (ServerSelectedAutokeyAuto3p.Code != -1)
                                        {
                                            if (!_Key.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                //ed.WriteMessage("3\n");
                                                throw new System.Exception("Server Update failed" + Type.ToString() + ":EAutoKey_3p");
                                            }
                                        }

                                        else
                                        {
                                            throw new System.Exception("AutoKey_3pINpanel:There is No row On server For Update " + Type.ToString());
                                        }
                                    }
                                    //ed.WriteMessage("4\n");
                                }
                                else
                                {
                                    throw new System.Exception("Lack of data in WeekJackPanel:EAutoKey_3p");
                                }
                                //ed.WriteMessage("insert passed \n");
                                SelectedEquipWeekJackPanel.AutoKey3pCode = _Key.Code;
                                if (SelectedEquipWeekJackPanel.Code == 0)
                                {
                                    if (SelectedEquipWeekJackPanel.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipWeekJackPanel.Code;
                                        if (!SelectedEquipWeekJackPanel.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception(" UpdateX  WeekJackPanel  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert Failed " + Type.ToString());
                                    }
                                }
                                else
                                {
                                    //Atend.Base.Equipment.EJackPanelWeek ServerSelectedWeekJackPanel=Atend.Base.Equipment.EJackPanelWeek.ServerSelectByXCode
                                    if (SelectedEquipWeekJackPanel.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipWeekJackPanel.Code;
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerUpdate failed " + Type.ToString());
                                    }
                                }
                                //if (SelectedEquipWeekJackPanel.ServerInsert(_transaction, _connection, true, false))
                                //{
                                //    NewCode = SelectedEquipWeekJackPanel.Code;

                                DataTable _WJS = Atend.Base.Equipment.EJackPanelWeekCell.SelectByJackPanelWeekXCode(LocalTransaction, LocalConnection, SelectedEquipWeekJackPanel.XCode);

                                if (!Atend.Base.Equipment.EJackPanelWeekCell.Delete(ServerTransaction, ServerConnection, SelectedEquipWeekJackPanel.Code))
                                {
                                    throw new System.Exception("Error in Delete EJackPanelWeekCell in Share On Server");
                                }

                                foreach (DataRow _WJSdr in _WJS.Rows)
                                {
                                    //ed.WriteMessage("go for cells \n");
                                    Atend.Base.Equipment.EJackPanelWeekCell _WJC = Atend.Base.Equipment.EJackPanelWeekCell.SelectByXCodeForDesign(new Guid(_WJSdr["XCode"].ToString()), LocalConnection, LocalTransaction);
                                    if (_WJC.Code != -1)
                                    {
                                        _WJC.JackPanelWeekCode = SelectedEquipWeekJackPanel.Code;
                                        //if (_WJC.Code == 0)
                                        //{
                                        if (!_WJC.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("Server Insert failed" + Type.ToString() + ":WeekJackPanelCell");
                                        }
                                        else
                                        {
                                            //if (!)
                                            //{
                                            //    throw new System.Exception("UpdateX      Failed");
                                            //}
                                        }
                                        //}
                                        //else
                                        //{
                                        //    Atend.Base.Equipment.EJackPanelWeekCell ServerSelectedJackPanelWeekCell = Atend.Base.Equipment.EJackPanelWeekCell.ServerSelectByCode(_WJC.Code, ServerConnection, ServerTransaction);
                                        //    if (ServerSelectedJackPanelWeekCell.Code != -1)
                                        //    {
                                        //        if (!_WJC.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        //        {
                                        //            throw new System.Exception("Server Update failed" + Type.ToString() + ":WeekJackPanelCell");
                                        //        }
                                        //    }
                                        //    else
                                        //    {
                                        //        throw new System.Exception("JackPanelWeekCellINpanel:There is No row On server For Update " + Type.ToString());
                                        //    }
                                        //}
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in WeekJackPanel:WeekJackPanelCell");
                                    }
                                }

                            }
                            else
                            {
                                throw new System.Exception("Lack Of Data In Week JackPanel");
                            }
                            //}
                            break;


                        case Atend.Control.Enum.ProductType.KablSho:
                            ed.WriteMessage("Sub Is : KablSho \n");
                            Atend.Base.Equipment.EKablsho SelectedEquipEKablsho = Atend.Base.Equipment.EKablsho.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEKablsho.Code != -1)
                            {
                                //Atend.Base.Equipment.EKablsho answer = Atend.Base.Equipment.EKablsho.AccessSelectByXCode(SelectedEquipEKablsho.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEKablsho.Code == 0)
                                {//confirm
                                    if (SelectedEquipEKablsho.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEKablsho.Code;
                                        if (!SelectedEquipEKablsho.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX   Kablsho   Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EKablsho ServerSelectedKablsho = Atend.Base.Equipment.EKablsho.ServerSelectByCode(SelectedEquipEKablsho.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedKablsho.Code != -1)
                                    {
                                        if (SelectedEquipEKablsho.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEKablsho.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("KablSho:There is No row On server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.Kalamp:
                            ed.WriteMessage("Sub Is : Kalamp \n");
                            Atend.Base.Equipment.EClamp SelectedEquipEClamp = Atend.Base.Equipment.EClamp.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEClamp.Code != -1)
                            {
                                //Atend.Base.Equipment.EClamp answer = Atend.Base.Equipment.EClamp.AccessSelectByXCode(SelectedEquipEClamp.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEClamp.Code == 0)
                                {//confirm
                                    if (SelectedEquipEClamp.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEClamp.Code;
                                        if (!SelectedEquipEClamp.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX   Calamp   Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EClamp ServerSelectedCalamp = Atend.Base.Equipment.EClamp.ServerSelectByCode(SelectedEquipEClamp.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedCalamp.Code != -1)
                                    {
                                        if (SelectedEquipEClamp.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEClamp.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Kalamp:There is No row On server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.Khazan:
                            ed.WriteMessage("Sub Is : Khazan \n");
                            Atend.Base.Equipment.EKhazan SelectedEquipEKhazan = Atend.Base.Equipment.EKhazan.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEKhazan.Code != -1)
                            {
                                //Atend.Base.Equipment.EKhazan answer = Atend.Base.Equipment.EKhazan.AccessSelectByXCode(SelectedEquipEKhazan.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEKhazan.Code == 0)
                                {//confirm
                                    if (SelectedEquipEKhazan.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEKhazan.Code;
                                        if (!SelectedEquipEKhazan.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX  Khazan    Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EKhazan ServerSelectedKhazan = Atend.Base.Equipment.EKhazan.ServerSelectByCode(SelectedEquipEKhazan.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedKhazan.Code != -1)
                                    {
                                        if (SelectedEquipEKhazan.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEKhazan.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Khazan:There is No row On server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;


                        case Atend.Control.Enum.ProductType.BankKhazan:
                            ed.WriteMessage("Sub Is : Khazan \n");
                            Atend.Base.Equipment.EKhazanTip SelectedEquipEKhazanTip = Atend.Base.Equipment.EKhazanTip.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEKhazanTip.Code != -1)
                            {
                                //Atend.Base.Equipment.EKhazan answer = Atend.Base.Equipment.EKhazan.AccessSelectByXCode(SelectedEquipEKhazan.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEKhazanTip.Code == 0)
                                {//confirm
                                    if (SelectedEquipEKhazanTip.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEKhazanTip.Code;
                                        if (!SelectedEquipEKhazanTip.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX  Khazan    Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EKhazanTip ServerSelectedKhazanTip = Atend.Base.Equipment.EKhazanTip.ServerSelectByCode(SelectedEquipEKhazanTip.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedKhazanTip.Code != -1)
                                    {
                                        if (SelectedEquipEKhazanTip.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEKhazanTip.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Khazan:There is No row On server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;




                        case Atend.Control.Enum.ProductType.Light:
                            ed.WriteMessage("Sub Is : Light \n");
                            Atend.Base.Equipment.ELight SelectedEquipELight = Atend.Base.Equipment.ELight.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipELight.Code != -1)
                            {
                                //Atend.Base.Equipment.ELight answer = Atend.Base.Equipment.ELight.AccessSelectByXCode(SelectedEquipELight.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipELight.Code == 0)
                                {//confirm
                                    if (SelectedEquipELight.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipELight.Code;
                                        if (!SelectedEquipELight.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX  Light  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.ELight ServerSelectedLight = Atend.Base.Equipment.ELight.ServerSelectByCode(SelectedEquipELight.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedLight.Code != -1)
                                    {
                                        if (SelectedEquipELight.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipELight.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Light:There is No row On server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;

                        case Atend.Control.Enum.ProductType.Mafsal:
                            ed.WriteMessage("Sub Is : Mafsal \n");
                            Atend.Base.Equipment.EMafsal SelectedEquipEMafsal = Atend.Base.Equipment.EMafsal.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEMafsal.Code != -1)
                            {
                                //Atend.Base.Equipment.EMafsal answer = Atend.Base.Equipment.EMafsal.AccessSelectByXCode(SelectedEquipEMafsal.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEMafsal.Code == 0)
                                {//confirm
                                    if (SelectedEquipEMafsal.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEMafsal.Code;
                                        if (!SelectedEquipEMafsal.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX  Mafsal Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EMafsal ServerSelectedMafsal = Atend.Base.Equipment.EMafsal.ServerSelectByCode(SelectedEquipEMafsal.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedMafsal.Code != -1)
                                    {
                                        if (SelectedEquipEMafsal.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEMafsal.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Mafsal:There is No row On server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;

                        case Atend.Control.Enum.ProductType.MeasuredJackPanel:
                            ed.WriteMessage("Sub Is : MeasuredJackPanel \n");
                            Atend.Base.Equipment.EMeasuredJackPanel SelectedEquipEMeasuredJackPanel = Atend.Base.Equipment.EMeasuredJackPanel.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEMeasuredJackPanel.Code != -1)
                            {
                                //Atend.Base.Equipment.EMeasuredJackPanel answer = Atend.Base.Equipment.EMeasuredJackPanel.AccessSelectByXCode(SelectedEquipEMeasuredJackPanel.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEMeasuredJackPanel.Code == 0)
                                {//confirm
                                    if (SelectedEquipEMeasuredJackPanel.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEMeasuredJackPanel.Code;
                                        if (!SelectedEquipEMeasuredJackPanel.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX MeasureJackPAnel  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EMeasuredJackPanel ServerSelectedMeasureJackpanel = Atend.Base.Equipment.EMeasuredJackPanel.ServerSelectByCode(SelectedEquipEMeasuredJackPanel.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedMeasureJackpanel.Code != -1)
                                    {
                                        if (SelectedEquipEMeasuredJackPanel.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEMeasuredJackPanel.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("MeasuredJackPanel:There is No row On server For Update " + Type.ToString());
                                    }

                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;


                        case Atend.Control.Enum.ProductType.MiniatureKey:
                            ed.WriteMessage("Sub Is : MiniatureKey \n");
                            Atend.Base.Equipment.EMiniatorKey SelectedEquipEMiniatorKey = Atend.Base.Equipment.EMiniatorKey.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEMiniatorKey.Code != -1)
                            {
                                //Atend.Base.Equipment.EMiniatorKey answer = Atend.Base.Equipment.EMiniatorKey.AccessSelectByXCode(SelectedEquipEMiniatorKey.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEMiniatorKey.Code == 0)
                                {//confirm
                                    if (SelectedEquipEMiniatorKey.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEMiniatorKey.Code;
                                        if (!SelectedEquipEMiniatorKey.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX  MiniatorKey Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EMiniatorKey ServerSelectedMiniatorKey = Atend.Base.Equipment.EMiniatorKey.ServerSelectByCode(SelectedEquipEMiniatorKey.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedMiniatorKey.Code != -1)
                                    {
                                        if (SelectedEquipEMiniatorKey.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEMiniatorKey.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("MiniatureKey:There is No row On server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.PhotoCell:
                            ed.WriteMessage("Sub Is : PhotoCell \n");
                            Atend.Base.Equipment.EPhotoCell SelectedEquipEPhotoCell = Atend.Base.Equipment.EPhotoCell.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEPhotoCell.Code != -1)
                            {
                                //Atend.Base.Equipment.EPhotoCell answer = Atend.Base.Equipment.EPhotoCell.AccessSelectByXCode(SelectedEquipEPhotoCell.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEPhotoCell.Code == 0)
                                {//confirm
                                    if (SelectedEquipEPhotoCell.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEPhotoCell.Code;
                                        if (!SelectedEquipEPhotoCell.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX  PhotoCell Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EPhotoCell ServerSelectedPhotoCell = Atend.Base.Equipment.EPhotoCell.ServerSelectByCode(SelectedEquipEPhotoCell.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedPhotoCell.Code != -1)
                                    {
                                        if (SelectedEquipEPhotoCell.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEPhotoCell.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("PhotoCell:There is No row On server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.Phuse:
                            ed.WriteMessage("Sub Is : Phuse \n");
                            Atend.Base.Equipment.EPhuse SelectedEquipEPhuse = Atend.Base.Equipment.EPhuse.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEPhuse.Code != -1)
                            {
                                //Atend.Base.Equipment.EPhuse answer = Atend.Base.Equipment.EPhuse.AccessSelectByXCode(SelectedEquipEPhuse.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCodeForDesign(SelectedEquipEPhuse.PhusePoleXCode, LocalConnection, LocalTransaction);
                                if (_EPhusePole.Code != -1)
                                {
                                    if (_EPhusePole.Code == 0)
                                    {
                                        if (!_EPhusePole.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("Server Insert failed" + Type.ToString() + ":PhusePole");
                                        }
                                        else
                                        {
                                            if (!_EPhusePole.UpdateX(LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("UpdateX  PhusePole Failed");
                                            }
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EPhusePole ServerSelectedPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(_EPhusePole.Code, ServerConnection, ServerTransaction);
                                        if (ServerSelectedPhusePole.Code != -1)
                                        {
                                            if (!_EPhusePole.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("Server Update phusePole Failed");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("PhusepoleINphuse:There is No row On server For Update " + Type.ToString());
                                        }
                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack of data in Phuse:PhusePole");
                                }
                                ed.WriteMessage("PhusePoleCode:{0}\n", _EPhusePole.Code);
                                SelectedEquipEPhuse.PhusePoleCode = _EPhusePole.Code;
                                if (SelectedEquipEPhuse.Code == 0)
                                {//confirm
                                    if (SelectedEquipEPhuse.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEPhuse.Code;
                                        if (!SelectedEquipEPhuse.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX Phuse  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EPhuse ServerSelectedPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(SelectedEquipEPhuse.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedPhuse.Code != -1)
                                    {
                                        if (!SelectedEquipEPhuse.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("Server Update Failed in Phuse");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Phuse:There Is No Row on Server For Upadte " + Type.ToString());
                                    }

                                }


                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.PhuseKey:
                            ed.WriteMessage("Sub Is : PhuseKey \n");
                            Atend.Base.Equipment.EPhuseKey SelectedEquipEPhuseKey = Atend.Base.Equipment.EPhuseKey.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            ed.WriteMessage("PhuseKey.Code={0}\n", SelectedEquipEPhuseKey.Code);
                            if (SelectedEquipEPhuseKey.Code != -1)
                            {

                                if (SelectedEquipEPhuseKey.Code == 0)
                                {//confirm
                                    if (SelectedEquipEPhuseKey.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEPhuseKey.Code;
                                        if (!SelectedEquipEPhuseKey.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX PhuseKey  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EPhuseKey ServerSelectedPhuseKey = Atend.Base.Equipment.EPhuseKey.ServerSelectByCode(SelectedEquipEPhuseKey.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedPhuseKey.Code != -1)
                                    {
                                        if (SelectedEquipEPhuseKey.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEPhuseKey.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("PhuseKey:There Is No Row on Server For Upadte " + Type.ToString());
                                    }

                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.PhusePole:
                            ed.WriteMessage("Sub Is : PhusePole \n");
                            Atend.Base.Equipment.EPhusePole SelectedEquipEPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEPhusePole.Code != -1)
                            {
                                //Atend.Base.Equipment.EPhusePole answer = Atend.Base.Equipment.EPhusePole.AccessSelectByXCode(SelectedEquipEPhusePole.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEPhusePole.Code == 0)
                                {//confirm
                                    if (SelectedEquipEPhusePole.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEPhusePole.Code;
                                        if (!SelectedEquipEPhusePole.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX  PhusePole Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EPhusePole ServerSelectedPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(SelectedEquipEPhusePole.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedPhusePole.Code != -1)
                                    {
                                        if (SelectedEquipEPhusePole.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEPhusePole.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("PhusePole:There Is No Row on Server For Upadte " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.Pole:
                            ed.WriteMessage("Sub Is : Pole \n");
                            Atend.Base.Equipment.EPole SelectedEquipEPole = Atend.Base.Equipment.EPole.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEPole.Code != -1)
                            {
                                //Atend.Base.Equipment.EPole answer = Atend.Base.Equipment.EPole.AccessSelectByXCode(SelectedEquipEPole.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEPole.Code == 0)
                                {//confirm
                                    if (SelectedEquipEPole.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEPole.Code;
                                        if (!SelectedEquipEPole.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX  Pole Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EPole ServerSelectedPole = Atend.Base.Equipment.EPole.ServerSelectByCode(SelectedEquipEPole.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedPole.Code != -1)
                                    {
                                        if (SelectedEquipEPole.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEPole.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Pole:There Is No Row on Server For Upadte " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.PoleTip:
                            ed.WriteMessage("Sub Is : PoleTip,XCodeProduct={0} \n", xCodeProduct);
                            Atend.Base.Equipment.EPoleTip SelectedEquipEPoleTip = Atend.Base.Equipment.EPoleTip.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            ed.WriteMessage("SelectedEquipEPoleTip.code={0}\n", SelectedEquipEPoleTip.Code);
                            if (SelectedEquipEPoleTip.Code != -1)
                            {

                                Atend.Base.Equipment.EPole _ePole = Atend.Base.Equipment.EPole.SelectByXCodeForDesign(SelectedEquipEPoleTip.PoleXCode, LocalConnection, LocalTransaction);
                                ed.WriteMessage("ePole.Code={0}\n", _ePole.Code);
                                if (_ePole.Code != -1)
                                {
                                    if (_ePole.Code == 0)
                                    {
                                        if (_ePole.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = _ePole.Code;
                                            if (!_ePole.UpdateX(LocalTransaction, LocalConnection))
                                                throw new System.Exception("epole.Updatex Failed");
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(Type.ToString()) + ":POle");

                                        }

                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EPole _ServerPole = Atend.Base.Equipment.EPole.ServerSelectByCode(_ePole.Code, ServerConnection, ServerTransaction);
                                        if (!_ePole.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            throw new System.Exception("_epole serverUpdate Failed in PoleTip");
                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack of data in poleTip:Pole");
                                }

                                Atend.Base.Equipment.EHalter _eHalter = Atend.Base.Equipment.EHalter.SelectByXCodeForDesign(SelectedEquipEPoleTip.HalterXID, LocalConnection, LocalTransaction);
                                if (_eHalter.Code != -1)
                                {

                                    if (_eHalter.Code == 0)
                                    {

                                        if (_eHalter.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = _eHalter.Code;
                                            if (!_eHalter.UpdateX(LocalTransaction, LocalConnection))
                                                throw new System.Exception("eHalter Updatex Failed in PoleTip");
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerInsert failed" + Convert.ToInt32(Type).ToString() + ":Halter");

                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.EHalter ServerHalter = Atend.Base.Equipment.EHalter.ServerSelectByCode(_eHalter.Code, ServerConnection, ServerTransaction);
                                        if (_eHalter.Code != -1)
                                        {
                                            if (_eHalter.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = _eHalter.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("Ehalter ServerUpdate Failed in Poletip");
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    throw new System.Exception("Lack of data in poleTip:Halter");
                                }

                                SelectedEquipEPoleTip.PoleCode = _ePole.Code;
                                SelectedEquipEPoleTip.HalterID = _eHalter.Code;

                                if (SelectedEquipEPoleTip.Code == 0)
                                {
                                    if (SelectedEquipEPoleTip.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEPoleTip.Code;
                                        if (!SelectedEquipEPoleTip.UpdateX(LocalTransaction, LocalConnection))
                                            throw new System.Exception("SelectedEquipEPoleTip Updatex Failed in Poletip");
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Convert.ToInt32(Type).ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EPoleTip ServerPoleTip = Atend.Base.Equipment.EPoleTip.ServerSelectByCode(SelectedEquipEPoleTip.Code, ServerConnection, ServerTransaction);
                                    if (ServerPoleTip.Code != -1)
                                    {
                                        if (SelectedEquipEPoleTip.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEPoleTip.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("SelectedEquipEPoleTip Server Update in PoleTip");
                                        }
                                    }
                                }


                                //}
                            }
                            else
                            {
                                throw new System.Exception("Lack Of Data In PoleTip");
                            }
                            break;
                        case Atend.Control.Enum.ProductType.Prop:
                            ed.WriteMessage("Sub Is : Prop \n");
                            Atend.Base.Equipment.EProp SelectedEquipEProp = Atend.Base.Equipment.EProp.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEProp.Code != -1)
                            {
                                //Atend.Base.Equipment.EProp answer = Atend.Base.Equipment.EProp.AccessSelectByXCode(SelectedEquipEProp.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEProp.Code == 0)
                                {//confirm
                                    if (SelectedEquipEProp.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEProp.Code;
                                        if (!SelectedEquipEProp.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX  Prop Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("container error in Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EProp ServerSelectedProp = Atend.Base.Equipment.EProp.ServerSelectByCode(SelectedEquipEProp.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedProp.Code != -1)
                                    {
                                        if (SelectedEquipEProp.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEProp.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("container error in Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Prop:There Is No Row on Server For Upadte " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;

                        case Atend.Control.Enum.ProductType.PT:
                            ed.WriteMessage("Sub Is : PT \n");
                            Atend.Base.Equipment.EPT SelectedEquipEPT = Atend.Base.Equipment.EPT.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEPT.Code != -1)
                            {
                                //Atend.Base.Equipment.EPT answer = Atend.Base.Equipment.EPT.AccessSelectByXCode(SelectedEquipEPT.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEPT.Code == 0)
                                {//confirm
                                    if (SelectedEquipEPT.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEPT.Code;
                                        if (!SelectedEquipEPT.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX PT  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EPT ServerSelectedPT = Atend.Base.Equipment.EPT.ServerSelectByCode(SelectedEquipEPT.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedPT.Code != -1)
                                    {
                                        if (SelectedEquipEPT.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEPT.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("PT:There Is No Row on Server For Upadte " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;



                        case Atend.Control.Enum.ProductType.Ramp:
                            ed.WriteMessage("Sub Is : Ramp \n");
                            Atend.Base.Equipment.ERamp SelectedEquipERamp = Atend.Base.Equipment.ERamp.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipERamp.Code != -1)
                            {
                                //Atend.Base.Equipment.ERamp answer = Atend.Base.Equipment.ERamp.AccessSelectByXCode(SelectedEquipERamp.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipERamp.Code == 0)
                                {//confirm
                                    if (SelectedEquipERamp.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipERamp.Code;
                                        if (!SelectedEquipERamp.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX Ramp  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.ERamp ServerSelectedRamp = Atend.Base.Equipment.ERamp.ServerSelectByCode(SelectedEquipERamp.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedRamp.Code != -1)
                                    {
                                        if (SelectedEquipERamp.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipERamp.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Ramp:There Is No Row on Server For Upadte " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;


                        case Atend.Control.Enum.ProductType.ReCloser:
                            ed.WriteMessage("Sub Is : ReCloser \n");
                            Atend.Base.Equipment.EReCloser SelectedEquipEReCloser = Atend.Base.Equipment.EReCloser.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEReCloser.Code != -1)
                            {
                                //Atend.Base.Equipment.EReCloser answer = Atend.Base.Equipment.EReCloser.AccessSelectByXCode(SelectedEquipEReCloser.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEReCloser.Code == 0)
                                {//confirm
                                    if (SelectedEquipEReCloser.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEReCloser.Code;
                                        if (!SelectedEquipEReCloser.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX ReCloser  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EReCloser ServerSelectedReCloser = Atend.Base.Equipment.EReCloser.ServerSelectByCode(SelectedEquipEReCloser.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedReCloser.Code != -1)
                                    {
                                        if (SelectedEquipEReCloser.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEReCloser.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ReCloser:There Is No Row on Server For Upadte " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;

                        case Atend.Control.Enum.ProductType.Rod:
                            ed.WriteMessage("Sub Is : Rod \n");
                            Atend.Base.Equipment.ERod SelectedEquipERod = Atend.Base.Equipment.ERod.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipERod.Code != -1)
                            {
                                //Atend.Base.Equipment.ERod answer = Atend.Base.Equipment.ERod.AccessSelectByXCode(SelectedEquipERod.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipERod.Code == 0)
                                {//confirm
                                    if (SelectedEquipERod.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipERod.Code;
                                        if (!SelectedEquipERod.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX Rod  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.ERod ServerSelectedRod = Atend.Base.Equipment.ERod.ServerSelectByCode(SelectedEquipERod.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedRod.Code != -1)
                                    {
                                        if (SelectedEquipERod.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipERod.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Rod:There Is No Row on Server For Upadte " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;

                        case Atend.Control.Enum.ProductType.SectionLizer:
                            ed.WriteMessage("Sub Is : SectionLizer \n");
                            Atend.Base.Equipment.ESectionLizer SelectedEquipESectionLizer = Atend.Base.Equipment.ESectionLizer.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipESectionLizer.Code != -1)
                            {
                                //Atend.Base.Equipment.ESectionLizer answer = Atend.Base.Equipment.ESectionLizer.AccessSelectByXCode(SelectedEquipESectionLizer.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipESectionLizer.Code == 0)
                                {//confirm
                                    if (SelectedEquipESectionLizer.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipESectionLizer.Code;
                                        if (!SelectedEquipESectionLizer.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX   Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.ESectionLizer ServerSelectedSectionLizer = Atend.Base.Equipment.ESectionLizer.ServerSelectByCode(SelectedEquipESectionLizer.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedSectionLizer.Code != -1)
                                    {
                                        if (SelectedEquipESectionLizer.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipESectionLizer.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("SectionLizer:There Is No Row on Server For Upadte " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;

                        case Atend.Control.Enum.ProductType.SelfKeeper:
                            ed.WriteMessage("Sub Is : SelfKeeper \n");
                            Atend.Base.Equipment.ESelfKeeper SelectedEquipESelfKeeper = Atend.Base.Equipment.ESelfKeeper.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipESelfKeeper.Code != -1)
                            {
                                //Atend.Base.Equipment.ESelfKeeper answer = Atend.Base.Equipment.ESelfKeeper.AccessSelectByXCode(SelectedEquipESelfKeeper.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipESelfKeeper.Code == 0)
                                {
                                    if (SelectedEquipESelfKeeper.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipESelfKeeper.Code;
                                        if (!SelectedEquipESelfKeeper.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX SelfKeeper  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server Insert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.ESelfKeeper ServerSelectedSelfKeeper = Atend.Base.Equipment.ESelfKeeper.ServerSelectByCode(SelectedEquipESelfKeeper.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedSelfKeeper.Code != -1)
                                    {
                                        if (SelectedEquipESelfKeeper.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipESelfKeeper.Code;

                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("SelfKeeper:There Is No Row on Server For Upadte " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;


                        case Atend.Control.Enum.ProductType.SelfKeeperTip:
                            ed.WriteMessage("Sub Is : SelfkeeperTip \n");

                            Atend.Base.Equipment.ESelfKeeperTip SelectedequipESelfKeeperTip = Atend.Base.Equipment.ESelfKeeperTip.SelectByXCodeForDesign(LocalTransaction, LocalConnection, xCodeProduct);




                            if (SelectedequipESelfKeeperTip.Code != -1)
                            {

                                Atend.Base.Equipment.ESelfKeeper SelectedPhaseSelfKeeper = Atend.Base.Equipment.ESelfKeeper.SelectByXCodeForDesign(SelectedequipESelfKeeperTip.PhaseProductxCode, LocalConnection, LocalTransaction);
                                Atend.Base.Equipment.ESelfKeeper SelectedNeutralSelfKeeper = Atend.Base.Equipment.ESelfKeeper.SelectByXCodeForDesign(SelectedequipESelfKeeperTip.NeutralProductxCode, LocalConnection, LocalTransaction);
                                Atend.Base.Equipment.ESelfKeeper SelectedNightSelfKeeper = Atend.Base.Equipment.ESelfKeeper.SelectByXCodeForDesign(SelectedequipESelfKeeperTip.NightProductxCode, LocalConnection, LocalTransaction);

                                if (SelectedPhaseSelfKeeper.Code != -1)
                                {
                                    if (SelectedPhaseSelfKeeper.Code == 0)
                                    {
                                        if (SelectedPhaseSelfKeeper.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedPhaseSelfKeeper.Code;
                                            if (!SelectedPhaseSelfKeeper.UpdateX(LocalTransaction, LocalConnection))
                                                throw new System.Exception("SelectedPhaseSelfKeeper Updatex Failed");
                                        }
                                        else
                                        {
                                            throw new System.Exception("SelfKeeper ServerInsert failed in SelfTip");
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.ESelfKeeper ServerSelf = Atend.Base.Equipment.ESelfKeeper.ServerSelectByCode(SelectedPhaseSelfKeeper.Code, ServerConnection, ServerTransaction);
                                        if (ServerSelf.Code != -1)
                                        {
                                            if (SelectedPhaseSelfKeeper.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedPhaseSelfKeeper.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("PhaseSelf ServerUpdate Failed in SelfTip");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("There Is No Row On Server in SelfPhase in SelfTip");
                                        }
                                    }

                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data In Phase Self in Self Tip");
                                }




                                if (SelectedNightSelfKeeper.Code != -1)
                                {
                                    if (SelectedNightSelfKeeper.Code == 0)
                                    {
                                        if (SelectedNightSelfKeeper.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedNightSelfKeeper.Code;
                                            if (!SelectedNightSelfKeeper.UpdateX(LocalTransaction, LocalConnection))
                                                throw new System.Exception("SelectedNightSelfKeeper Updatex Failed");
                                        }
                                        else
                                        {
                                            throw new System.Exception("NightSelf ServerInsert failed in SelfTip");
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.ESelfKeeper ServerNightSelf = Atend.Base.Equipment.ESelfKeeper.ServerSelectByCode(SelectedNightSelfKeeper.Code, ServerConnection, ServerTransaction);
                                        if (ServerNightSelf.Code != -1)
                                        {
                                            if (SelectedNightSelfKeeper.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedNightSelfKeeper.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("NightCond ServerUpdate Failed in CondTip");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("There Is No Row On Server in CondNight in CondTip");
                                        }
                                    }

                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data In Night Conductor in Conductor Tip");
                                }




                                if (SelectedNeutralSelfKeeper.Code != -1)
                                {
                                    if (SelectedNeutralSelfKeeper.Code == 0)
                                    {
                                        if (SelectedNeutralSelfKeeper.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedNeutralSelfKeeper.Code;
                                            if (!SelectedNeutralSelfKeeper.UpdateX(LocalTransaction, LocalConnection))
                                                throw new System.Exception("SelectedNeutralSelfKeeper Updatex Failed");
                                        }
                                        else
                                        {
                                            throw new System.Exception("NeutralConductor ServerInsert failed in CondTip");
                                        }
                                    }
                                    else
                                    {
                                        Atend.Base.Equipment.ESelfKeeper ServerNeutralSelf = Atend.Base.Equipment.ESelfKeeper.ServerSelectByCode(SelectedNeutralSelfKeeper.Code, ServerConnection, ServerTransaction);
                                        if (ServerNeutralSelf.Code != -1)
                                        {
                                            if (SelectedNeutralSelfKeeper.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                NewCode = SelectedNeutralSelfKeeper.Code;
                                            }
                                            else
                                            {
                                                throw new System.Exception("NeutralCond ServerUpdate Failed in CondTip");
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("There Is No Row On Server in CondNeutral in CondTip");
                                        }
                                    }

                                }
                                else
                                {
                                    throw new System.Exception("Lack Of data In PNetral Conductor in Conductor Tip");
                                }


                                SelectedequipESelfKeeperTip.PhaseProductCode = SelectedPhaseSelfKeeper.Code;
                                SelectedequipESelfKeeperTip.NeutralProductCode = SelectedNeutralSelfKeeper.Code;
                                SelectedequipESelfKeeperTip.NightProductCode = SelectedNightSelfKeeper.Code;
                                if (SelectedequipESelfKeeperTip.Code == 0)
                                {
                                    if (SelectedequipESelfKeeperTip.ServerInsert(ServerTransaction, ServerConnection))//, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedequipESelfKeeperTip.Code;
                                        if (!SelectedequipESelfKeeperTip.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX    ConductorTip     Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    //Atend.Base.Equipment.EConductor ServerSelectedSelfKeeper = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedequipESelfKeeperTip.Code, ServerConnection, ServerTransaction);
                                    Atend.Base.Equipment.ESelfKeeperTip ServerSelectedSelfKeeper = Atend.Base.Equipment.ESelfKeeperTip.ServerSelectByCode(SelectedequipESelfKeeperTip.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedSelfKeeper.Code != -1)
                                    {
                                        if (SelectedequipESelfKeeperTip.ServerUpdate(ServerTransaction, ServerConnection))//, true, false, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedequipESelfKeeperTip.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Conductor:There Is No Row On Server For Update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;




                        //case Atend.Control.Enum.ProductType.SelfKeeperTip:
                        //    ed.WriteMessage("Sub Is : SelfKeeperTip \n");
                        //    Atend.Base.Equipment.ESelfKeeperTip SelectedEquipESelfKeeperTip = Atend.Base.Equipment.ESelfKeeperTip.SelectByXCode(new Guid(dr["XCode"].ToString()));
                        //    if (SelectedEquipESelfKeeperTip.Code != -1)
                        //    {
                        //        //Atend.Base.Equipment.ESelfKeeperTip answer = Atend.Base.Equipment.ESelfKeeperTip.AccessSelectByXCode(SelectedEquipESelfKeeperTip.XCode, _transaction, _connection);
                        //        //if (answer.Code != -1)
                        //        //{
                        //        //    NewCode = answer.Code;
                        //        //}
                        //        //else
                        //        //{
                        //        if (SelectedEquipESelfKeeperTip.AccessInsert(_transaction, _connection))
                        //        {
                        //            NewCode = SelectedEquipESelfKeeperTip.Code;
                        //        }
                        //        else
                        //        {
                        //            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                        //        }
                        //        //}
                        //    }
                        //    break;

                        case Atend.Control.Enum.ProductType.StreetBox:
                            ed.WriteMessage("Sub Is : StreetBox \n");
                            Atend.Base.Equipment.EStreetBox SelectedEquipEStreetBox = Atend.Base.Equipment.EStreetBox.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipEStreetBox.Code != -1)
                            {
                                //Atend.Base.Equipment.EStreetBox answer = Atend.Base.Equipment.EStreetBox.AccessSelectByXCode(SelectedEquipEStreetBox.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipEStreetBox.Code == 0)
                                {//confirm
                                    if (SelectedEquipEStreetBox.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipEStreetBox.Code;
                                        if (!SelectedEquipEStreetBox.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX StreetBox  Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Server InSert Failed " + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.EStreetBox ServerSelectedStreetBox = Atend.Base.Equipment.EStreetBox.ServerSelectByCode(SelectedEquipEStreetBox.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedStreetBox.Code != -1)
                                    {
                                        if (SelectedEquipEStreetBox.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipEStreetBox.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Server Update Failed " + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("StreetBox:There is no row on server for update " + Type.ToString());
                                    }

                                }
                                //if (SelectedEquipEStreetBox.ServerInsert(_transaction, _connection, true, false))
                                //{
                                //    NewCode = SelectedEquipEStreetBox.Code;
                                DataTable StreetBoxPhuses = Atend.Base.Equipment.EStreetBoxPhuse.SelectByStreetBoxXCode(xCodeProduct, LocalTransaction, LocalConnection);
                                ed.WriteMessage("StrretBoxPhuse={0}\n", StreetBoxPhuses.Rows.Count);

                                if (!Atend.Base.Equipment.EStreetBoxPhuse.Delete(ServerTransaction, ServerConnection, SelectedEquipEStreetBox.Code))
                                {
                                    throw new System.Exception("Error In Delete StreetBoxPhuse");
                                }

                                foreach (DataRow StreetBoxPhuse in StreetBoxPhuses.Rows)
                                {
                                    //ed.WriteMessage("110\n");
                                    Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.SelectByXCodeForDesign(new Guid(StreetBoxPhuse["PhuseXCode"].ToString()), LocalConnection, LocalTransaction);
                                    ed.WriteMessage("_EPhuse.Code={0}\n", _EPhuse.Code);
                                    if (_EPhuse.Code != -1)
                                    {
                                        //ed.WriteMessage("111\n");
                                        Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCodeForDesign(_EPhuse.PhusePoleXCode, LocalConnection, LocalTransaction);
                                        ed.WriteMessage("_EPhusePole.Code={0}\n", _EPhusePole.Code);
                                        if (_EPhusePole.Code != -1)
                                        {
                                            //ed.WriteMessage("112\n");
                                            if (_EPhusePole.Code == 0)
                                            {
                                                ed.WriteMessage("_EPhusePole\n");
                                                if (!_EPhusePole.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("ServerInsert failed" + Type.ToString() + ":PhusePole");
                                                }
                                                else
                                                {
                                                    if (!_EPhusePole.UpdateX(LocalTransaction, LocalConnection))
                                                    {
                                                        throw new System.Exception("UpdateX PhusePole  Failed");
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                Atend.Base.Equipment.EPhusePole ServerSelectedPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(_EPhusePole.Code, ServerConnection, ServerTransaction);
                                                ed.WriteMessage("ServerSelectedPhusePole={0}\n", ServerSelectedPhusePole.Code);
                                                if (ServerSelectedPhusePole.Code != -1)
                                                {
                                                    if (!_EPhusePole.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                                    {
                                                        throw new System.Exception("ServerUpdate failed" + Type.ToString() + ":PhusePole");
                                                    }
                                                }
                                                else
                                                {
                                                    throw new System.Exception("phusePoleINStreetBox:There Is No Row on Server For Update PhusePole in StreetBox");
                                                }
                                            }
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in StreetBox:Phuse:PhusePole");
                                        }
                                        //ed.WriteMessage("streetbox was :{0} \n", _EPhusePole.Code);
                                        _EPhuse.PhusePoleCode = _EPhusePole.Code;
                                        if (_EPhuse.Code == 0)
                                        {
                                            if (!_EPhuse.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("ServerInsert failed" + Type.ToString() + ":Phuse");
                                            }
                                            else
                                            {
                                                if (!_EPhuse.UpdateX(LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("UpdateX Phuse  Failed");
                                                }
                                            }
                                        }
                                        else
                                        {

                                            Atend.Base.Equipment.EPhuse ServerSelectedPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(_EPhuse.Code, ServerConnection, ServerTransaction);
                                            if (ServerSelectedPhuse.Code != -1)
                                            {
                                                if (!_EPhuse.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("ServerUpdate failed" + Type.ToString() + ":Phuse");
                                                }
                                            }
                                            else
                                            {
                                                throw new System.Exception("PhuseINStreetBox:There is no row on server for update " + Type.ToString());
                                            }
                                        }

                                        Atend.Base.Equipment.EStreetBoxPhuse _EStreetBoxPhuse = Atend.Base.Equipment.EStreetBoxPhuse.SelectByXCodeForDesign(new Guid(StreetBoxPhuse["Xcode"].ToString()), LocalConnection, LocalTransaction);
                                        if (_EStreetBoxPhuse.Code != -1)
                                        {
                                            _EStreetBoxPhuse.PhuseCode = _EPhuse.Code;
                                            _EStreetBoxPhuse.StreetBoxCode = SelectedEquipEStreetBox.Code;
                                            //if (_EStreetBoxPhuse.Code == 0)
                                            //{//confirm
                                            if (!_EStreetBoxPhuse.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
                                            {
                                                throw new System.Exception("ServerInsert failed" + Type.ToString() + ":StreetBoxPhuse");
                                            }
                                            else
                                            {
                                                if (!_EStreetBoxPhuse.UpdateX(LocalTransaction, LocalConnection))
                                                {
                                                    throw new System.Exception("UpdateX StreetBoxPhuse  Failed");
                                                }
                                            }
                                            //}
                                            //else
                                            //{
                                            //    Atend.Base.Equipment.EStreetBoxPhuse ServerSelectedStreetBoxPhuse = Atend.Base.Equipment.EStreetBoxPhuse.ServerSelectByCode(_EStreetBoxPhuse.Code, ServerConnection, ServerTransaction);
                                            //    if (ServerSelectedStreetBoxPhuse.Code != -1)
                                            //    {

                                            //        if (!_EStreetBoxPhuse.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
                                            //        {
                                            //            throw new System.Exception("Server Update failed" + Type.ToString() + ":StreetBoxPhuse");
                                            //        }
                                            //    }
                                            //    else
                                            //    {
                                            //        throw new System.Exception("StreetBoxPhuseINStreetBox:There is no row on server for update " + Type.ToString());
                                            //    }
                                            //}
                                        }
                                        else
                                        {
                                            throw new System.Exception("Lack of data in StreetBox:StreetBoxPhuse");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack of data in StreetBox:Phuse");
                                    }
                                }
                            }
                            else
                            {
                                throw new System.Exception("Lack Of DAta in StreetBox");
                            }
                            //}
                            break;
                        case Atend.Control.Enum.ProductType.Transformer:
                            ed.WriteMessage("Sub Is : Transformer \n");
                            Atend.Base.Equipment.ETransformer SelectedEquipETransformer = Atend.Base.Equipment.ETransformer.SelectByXCodeForDesign(xCodeProduct, LocalConnection, LocalTransaction);
                            if (SelectedEquipETransformer.Code != -1)
                            {
                                //Atend.Base.Equipment.ETransformer answer = Atend.Base.Equipment.ETransformer.AccessSelectByXCode(SelectedEquipETransformer.XCode, _transaction, _connection);
                                //if (answer.Code != -1)
                                //{
                                //    NewCode = answer.Code;
                                //}
                                //else
                                //{
                                if (SelectedEquipETransformer.Code == 0)
                                {//confirm
                                    if (SelectedEquipETransformer.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                    {
                                        NewCode = SelectedEquipETransformer.Code;
                                        if (!SelectedEquipETransformer.UpdateX(LocalTransaction, LocalConnection))
                                        {
                                            throw new System.Exception("UpdateX   Failed");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("ServerInsert failed" + Type.ToString());
                                    }
                                }
                                else
                                {
                                    Atend.Base.Equipment.ETransformer ServerSelectedTransform = Atend.Base.Equipment.ETransformer.ServerSelectByCode(SelectedEquipETransformer.Code, ServerConnection, ServerTransaction);
                                    if (ServerSelectedTransform.Code != -1)
                                    {
                                        if (SelectedEquipETransformer.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
                                        {
                                            NewCode = SelectedEquipETransformer.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("ServerUpdate failed" + Type.ToString());
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Transformer:There is no row on server for update " + Type.ToString());
                                    }
                                }
                                //}
                            }
                            else
                            {
                                ed.WriteMessage(Type.ToString() + " does not exist \n");
                            }
                            break;

                    }
                    #endregion

                }
                catch (System.Exception ex)
                {
                    ed.WriteMessage("ERROR ShareOnServer catch 1: {0} \n", ex.Message);
                    ServerTransaction.Rollback();
                    ServerConnection.Close();

                    LocalTransaction.Rollback();
                    LocalConnection.Close();
                    return false;
                }

                ServerTransaction.Commit();
                ServerConnection.Close();

                LocalTransaction.Commit();
                LocalConnection.Close();
            }
            catch (System.Exception ex1)
            {
                ed.WriteMessage("ERROR ShareOnServer catch 2: {0} \n", ex1.Message);
                ServerConnection.Close();
                LocalConnection.Close();
                return false;
            }

            return true;

        }



        public static bool SentFromAccessToAccess(int OldCode, int Type, int ContainerCode, OleDbTransaction OldTransaction, OleDbConnection OldConnection, OleDbTransaction NewTransaction, OleDbConnection NewConnection)
        {
            Editor ed = Application.DocumentManager.MdiActiveDocument.Editor;
            ed.WriteMessage("parent is : {0} \n", Type);
            try
            {
                Atend.Base.Equipment.EContainerPackage SelectedContainer = Atend.Base.Equipment.EContainerPackage.AccessSelectByContainerCodeAndType(OldCode, Type, OldTransaction, OldConnection);
                //Atend.Base.Equipment.EContainerPackage ServerContainer = Atend.Base.Equipment.EContainerPackage.selectByContainerCodeAndType(_transaction, _connection, Code, Type);
                if (SelectedContainer.ContainerCode != -1)
                {
                    ed.WriteMessage("container was found,ContainerCode={0} \n ", ContainerCode);

                    int LastContainerPackageCode = SelectedContainer.Code;
                    //ServerContainer.XCode = ContainerCode;
                    SelectedContainer.ContainerCode = ContainerCode;
                    ed.WriteMessage("****SelectedContainer.Code={0}\n", SelectedContainer.Code);
                    //if (SelectedContainer.Code == 0)
                    //{
                    if (!SelectedContainer.AccessInsert(NewTransaction, NewConnection))
                        throw new System.Exception("SelectedContainer.NewAcessInsert failed");
                    //}
                    //else
                    //{
                    //    if (!Atend.Base.Equipment.EProductPackage.DeleteX(LocalTransaction, LocalConnection, SelectedContainer.Code))
                    //        throw new System.Exception("Delete ProductPackage Failed");
                    //}

                    System.Data.DataTable Products = Atend.Base.Equipment.EProductPackage.AccessSelectByContainerPackageCode(LastContainerPackageCode, OldTransaction, OldConnection);
                    ed.WriteMessage("___SubProductsCount:{0},Type:{1}\n", Products.Rows.Count, Type);
                    foreach (DataRow dr in Products.Rows)
                    {
                        //switch access insert
                        int NewCode = 0;
                        //ed.WriteMessage("~~~~~ P T : {0} ~~~~~~\n", Convert.ToInt32(dr["TableType"]));
                        #region Switch
                        switch ((Atend.Control.Enum.ProductType)Convert.ToInt32(dr["TableType"]))
                        {
                            //    case Atend.Control.Enum.ProductType.AirPost:
                            //        ed.WriteMessage("Sub Is : AirPost \n");
                            //        Atend.Base.Equipment.EAirPost SelectedEquipEAirPost = Atend.Base.Equipment.EAirPost.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //        Atend.Base.Equipment.EAirPost LocalSelectedEquipAirPost = Atend.Base.Equipment.EAirPost.SelectByCodeForLocal(SelectedEquipEAirPost.Code, LocalTransaction, LocalConnection);

                            //        if (SelectedEquipEAirPost.Code != -1)
                            //        {
                            //            if (LocalSelectedEquipAirPost.Code == -1)
                            //            {
                            //                if (SelectedEquipEAirPost.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipEAirPost.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }
                            //            }
                            //            else
                            //            {

                            //                SelectedEquipEAirPost.XCode = LocalSelectedEquipAirPost.XCode;
                            //                if (SelectedEquipEAirPost.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipEAirPost.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }

                            //            }
                            //        }
                            //        else
                            //        {
                            //            ed.WriteMessage(Convert.ToInt32(dr["TableType"]).ToString() + " does not exist \n");
                            //        }
                            //        break;

                            case Atend.Control.Enum.ProductType.Arm:
                                ed.WriteMessage("Sub Is : Arm \n");


                                DataRow[] drConv = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConv.Length == 0)
                                {
                                    Atend.Base.Equipment.EArm SelectedEquipEArm = Atend.Base.Equipment.EArm.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEArm.Code != -1)
                                    {
                                        if (SelectedEquipEArm.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEArm.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEArm.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Arm");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Arm");
                                    }
                                }

                                break;

                            case Atend.Control.Enum.ProductType.AuoKey3p:
                                ed.WriteMessage("Sub Is : AuoKey3p \n");

                                DataRow[] drConvAutoKey = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvAutoKey.Length == 0)
                                {
                                    Atend.Base.Equipment.EAutoKey_3p SelectedEquipEAutoKey = Atend.Base.Equipment.EAutoKey_3p.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEAutoKey.Code != -1)
                                    {
                                        if (SelectedEquipEAutoKey.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductType"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEAutoKey.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEAutoKey.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in AutoKey");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in AutoKey");
                                    }
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Breaker:
                                ed.WriteMessage("Sub Is : Breaker \n");
                                DataRow[] drConvBreaker = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvBreaker.Length == 0)
                                {
                                    Atend.Base.Equipment.EBreaker SelectedEquipEBreaker = Atend.Base.Equipment.EBreaker.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEBreaker.Code != -1)
                                    {
                                        if (SelectedEquipEBreaker.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEBreaker.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEBreaker.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in AutoKey");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in AutoKey");
                                    }
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Bus:
                                ed.WriteMessage("Sub Is : Bus \n");
                                DataRow[] drConvBus = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvBus.Length == 0)
                                {
                                    Atend.Base.Equipment.EBus SelectedEquipEBus = Atend.Base.Equipment.EBus.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEBus.Code != -1)
                                    {
                                        if (SelectedEquipEBus.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEBus.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEBus.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in AutoKey");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in AutoKey");
                                    }
                                }
                                break;
                            case Atend.Control.Enum.ProductType.CatOut:
                                ed.WriteMessage("Sub Is : CatOut \n");
                                DataRow[] drConvCatOut = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvCatOut.Length == 0)
                                {
                                    Atend.Base.Equipment.ECatOut SelectedEquipECatout = Atend.Base.Equipment.ECatOut.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipECatout.Code != -1)
                                    {
                                        if (SelectedEquipECatout.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {
                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipECatout.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipECatout.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in AutoKey");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in AutoKey");
                                    }
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Cell:
                                ed.WriteMessage("Sub Is : Cell \n");
                                DataRow[] drConvCell = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvCell.Length == 0)
                                {
                                    Atend.Base.Equipment.ECell SelectedEquipECell = Atend.Base.Equipment.ECell.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipECell.Code != -1)
                                    {
                                        if (SelectedEquipECell.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {
                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipECell.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipECell.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Cell");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Cell");
                                    }
                                }
                                break;
                            case Atend.Control.Enum.ProductType.Conductor:
                                ed.WriteMessage("Sub Is : Conductor \n");
                                DataRow[] drConvConductor = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvConductor.Length == 0)
                                {
                                    Atend.Base.Equipment.EConductor SelectedEquipEConductor = Atend.Base.Equipment.EConductor.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEConductor.Code != -1)
                                    {
                                        if (SelectedEquipEConductor.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {
                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEConductor.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEConductor.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Conductor");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Conductor");
                                    }
                                }
                                break;

                            //    //case Atend.Control.Enum.ProductType.ConductorTip:
                            //    //    ed.WriteMessage("Sub Is : Conductor \n");
                            //    //    Atend.Base.Equipment.EConductorTip SelectedEquipEConductorTip = Atend.Base.Equipment.EConductorTip.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //    //    Atend.Base.Equipment.EConductorTip LocalSelectedConductorTip = Atend.Base.Equipment.EConductorTip.SelectByCodeForLocal(SelectedEquipEConductorTip.Code, LocalTransaction, LocalConnection);
                            //    //    if (SelectedEquipEConductorTip.Code != -1)
                            //    //    {
                            //    //        Atend.Base.Equipment.EConductor SelectedEquiphaseCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedEquipEConductorTip.PhaseProductCode, _connection, _transaction);
                            //    //        Atend.Base.Equipment.EConductor LocalSelectedEquiphaseCond = Atend.Base.Equipment.EConductor.SelectByCodeForLocal(SelectedEquiphaseCond.Code, LocalTransaction, LocalConnection);

                            //    //        Atend.Base.Equipment.EConductor SelectedEquiNightCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedEquipEConductorTip.NightProductCode, _connection, _transaction);
                            //    //        Atend.Base.Equipment.EConductor LocalSelectedEquiNightCond = Atend.Base.Equipment.EConductor.SelectByCodeForLocal(SelectedEquiNightCond.Code, LocalTransaction, LocalConnection);

                            //    //        Atend.Base.Equipment.EConductor SelectedEquiNeutralCond = Atend.Base.Equipment.EConductor.ServerSelectByCode(SelectedEquipEConductorTip.NeutralProductCode, _connection, _transaction);
                            //    //        Atend.Base.Equipment.EConductor LocalSelectedEquiNeutralCond = Atend.Base.Equipment.EConductor.SelectByCodeForLocal(SelectedEquiNeutralCond.Code, LocalTransaction, LocalConnection);

                            //    //        if (SelectedEquiphaseCond.Code != -1)
                            //    //        {
                            //    //            if (LocalSelectedEquiphaseCond.Code == -1)
                            //    //            {
                            //    //                if (SelectedEquiphaseCond.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //    //                {
                            //    //                    NewCode = SelectedEquiphaseCond.XCode;

                            //    //                }
                            //    //                else
                            //    //                {
                            //    //                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                            //    //                }
                            //    //            }
                            //    //            else
                            //    //            {

                            //    //                SelectedEquiphaseCond.XCode = LocalSelectedEquiphaseCond.XCode;
                            //    //                if (SelectedEquiphaseCond.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //    //                {
                            //    //                    NewCode = SelectedEquiphaseCond.XCode;
                            //    //                }
                            //    //                else
                            //    //                {
                            //    //                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                            //    //                }

                            //    //            }
                            //    //        }
                            //    //        else
                            //    //        {
                            //    //            throw new System.Exception("Lack Of Data In SelectedEquiphaseCond in CondTip");
                            //    //        }




                            //    //        if (SelectedEquiNeutralCond.Code != -1)
                            //    //        {
                            //    //            if (LocalSelectedEquiNeutralCond.Code == -1)
                            //    //            {
                            //    //                if (SelectedEquiNeutralCond.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //    //                {
                            //    //                    NewCode = SelectedEquiNeutralCond.XCode;

                            //    //                }
                            //    //                else
                            //    //                {
                            //    //                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                            //    //                }
                            //    //            }
                            //    //            else
                            //    //            {

                            //    //                SelectedEquiNeutralCond.XCode = LocalSelectedEquiNeutralCond.XCode;
                            //    //                if (SelectedEquiNeutralCond.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //    //                {
                            //    //                    NewCode = SelectedEquiNeutralCond.XCode;
                            //    //                }
                            //    //                else
                            //    //                {
                            //    //                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                            //    //                }

                            //    //            }
                            //    //        }
                            //    //        else
                            //    //        {
                            //    //            throw new System.Exception("Lack Of Data In SelectedEquiNutralCond in CondTip");
                            //    //        }




                            //    //        if (SelectedEquiNightCond.Code != -1)
                            //    //        {
                            //    //            if (LocalSelectedEquiNightCond.Code == -1)
                            //    //            {
                            //    //                if (SelectedEquiNightCond.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //    //                {
                            //    //                    NewCode = SelectedEquiNightCond.XCode;

                            //    //                }
                            //    //                else
                            //    //                {
                            //    //                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                            //    //                }
                            //    //            }
                            //    //            else
                            //    //            {

                            //    //                SelectedEquiNightCond.XCode = LocalSelectedEquiNightCond.XCode;
                            //    //                if (SelectedEquiNightCond.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //    //                {
                            //    //                    NewCode = SelectedEquiNightCond.XCode;
                            //    //                }
                            //    //                else
                            //    //                {
                            //    //                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                            //    //                }

                            //    //            }
                            //    //        }
                            //    //        else
                            //    //        {
                            //    //            throw new System.Exception("Lack Of Data In SelectedEquiNightCond in CondTip");
                            //    //        }


                            //    //        SelectedEquipEConductorTip.NeutralProductXCode = SelectedEquiNeutralCond.XCode;
                            //    //        SelectedEquipEConductorTip.NightProductXCode = SelectedEquiNightCond.XCode;
                            //    //        SelectedEquipEConductorTip.PhaseProductXCode = SelectedEquiphaseCond.XCode;



                            //    //        if (LocalSelectedConductorTip.Code == -1)
                            //    //        {
                            //    //            if (SelectedEquipEConductorTip.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //    //            {
                            //    //                NewCode = SelectedEquipEConductorTip.XCode;

                            //    //            }
                            //    //            else
                            //    //            {
                            //    //                throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                            //    //            }
                            //    //        }
                            //    //        else
                            //    //        {

                            //    //            SelectedEquipEConductorTip.XCode = LocalSelectedConductorTip.XCode;
                            //    //            if (SelectedEquipEConductorTip.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //    //            {
                            //    //                NewCode = SelectedEquipEConductorTip.XCode;
                            //    //            }
                            //    //            else
                            //    //            {
                            //    //                throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(Type).ToString());
                            //    //            }

                            //    //        }
                            //    //        //}
                            //    //    }
                            //    //    else
                            //    //    {
                            //    //        throw new System.Exception("Lack oF Data In " + Type.ToString());
                            //    //    }
                            //    //    break;


                            case Atend.Control.Enum.ProductType.Consol:
                                ed.WriteMessage("Sub Is : Consol \n");
                                DataRow[] drConvConsol = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvConsol.Length == 0)
                                {
                                    Atend.Base.Equipment.EConsol SelectedEquipEConsol = Atend.Base.Equipment.EConsol.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEConsol.Code != -1)
                                    {
                                        if (SelectedEquipEConsol.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEConsol.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEConsol.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Consol");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Consol");
                                    }
                                }

                                break;
                            case Atend.Control.Enum.ProductType.Countor:
                                ed.WriteMessage("Sub Is : Countor \n");
                                DataRow[] drConvCountor = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvCountor.Length == 0)
                                {
                                    Atend.Base.Equipment.ECountor SelectedEquipECountor = Atend.Base.Equipment.ECountor.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipECountor.Code != -1)
                                    {
                                        if (SelectedEquipECountor.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipECountor.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipECountor.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Countor");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Countor");
                                    }
                                }

                                break;
                            case Atend.Control.Enum.ProductType.CT:
                                ed.WriteMessage("Sub Is : CT \n");
                                DataRow[] drConvCT = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvCT.Length == 0)
                                {
                                    Atend.Base.Equipment.ECT SelectedEquipECT = Atend.Base.Equipment.ECT.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipECT.Code != -1)
                                    {
                                        if (SelectedEquipECT.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipECT.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipECT.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in CT");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in CT");
                                    }
                                }

                                break;
                            //    case Atend.Control.Enum.ProductType.DB:
                            //        ed.WriteMessage("Sub Is : DB 5\n");
                            //        Atend.Base.Equipment.EDB SelectedEquipEDB = Atend.Base.Equipment.EDB.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //        Atend.Base.Equipment.EDB LocalSelectedDB = Atend.Base.Equipment.EDB.SelectByCodeForLocal(SelectedEquipEDB.Code, LocalTransaction, LocalConnection);
                            //        if (SelectedEquipEDB.Code != -1)
                            //        {
                            //            if (LocalSelectedDB.Code == -1)
                            //            {
                            //                if (SelectedEquipEDB.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipEDB.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());

                            //                }
                            //            }
                            //            else
                            //            {
                            //                SelectedEquipEDB.XCode = LocalSelectedDB.XCode;
                            //                if (SelectedEquipEDB.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipEDB.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());

                            //                }

                            //            }
                            //            DataTable DBPhuses = Atend.Base.Equipment.EDBPhuse.SelectByDBCode(Convert.ToInt32(dr["ProductCode"].ToString()), _transaction, _connection);
                            //            if (!Atend.Base.Equipment.EDBPhuse.DeleteX(LocalTransaction, LocalConnection, SelectedEquipEDB.XCode))
                            //            {
                            //                throw new System.Exception("Delete EDBPHUSE in DB ");
                            //            }

                            //            ed.WriteMessage("d1\n");
                            //            foreach (DataRow DBPhuse in DBPhuses.Rows)
                            //            {
                            //                ed.WriteMessage("d2\n");
                            //                Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(Convert.ToInt32(DBPhuse["Phusecode"].ToString()), _connection, _transaction);
                            //                ed.WriteMessage("d3\n");
                            //                Atend.Base.Equipment.EPhuse _LocalEPhuse = Atend.Base.Equipment.EPhuse.SelectByCodeForLocal(_EPhuse.Code, LocalTransaction, LocalConnection);
                            //                ed.WriteMessage("d4 :{0}\n", _EPhuse.Code);

                            //                Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(Convert.ToInt32(_EPhuse.Code.ToString()), _connection, _transaction);
                            //                ed.WriteMessage("d5 :{0}\n", _EPhusePole.Code);
                            //                Atend.Base.Equipment.EPhusePole _LocalEPhusePole = Atend.Base.Equipment.EPhusePole.SelectByCodeForLocal(_EPhusePole.Code, LocalTransaction, LocalConnection);
                            //                ed.WriteMessage("d6 :{0}\n", _LocalEPhusePole.Code);

                            //                if (_EPhusePole.Code != -1)
                            //                {

                            //                    ed.WriteMessage("d7\n");
                            //                    if (_LocalEPhusePole.Code == -1)
                            //                    {
                            //                        ed.WriteMessage("d8\n");
                            //                        if (!_EPhusePole.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                        {
                            //                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                            //                        }

                            //                    }
                            //                    else
                            //                    {
                            //                        _EPhusePole.XCode = _LocalEPhusePole.XCode;
                            //                        ed.WriteMessage("d9\n");
                            //                        if (!_EPhusePole.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                        {
                            //                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                            //                        }

                            //                    }

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Lack Of Data In PhusePole In DB");
                            //                }




                            //                if (_EPhuse.Code != -1)
                            //                {
                            //                    if (_LocalEPhuse.Code == -1)
                            //                    {
                            //                        if (!_EPhuse.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                        {
                            //                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                            //                        }

                            //                    }
                            //                    else
                            //                    {
                            //                        _EPhuse.XCode = _LocalEPhuse.XCode;

                            //                        if (!_EPhuse.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                        {
                            //                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                            //                        }

                            //                    }

                            //                    Atend.Base.Equipment.EDBPhuse _edbPhuse = Atend.Base.Equipment.EDBPhuse.ServerSelectByCode(Convert.ToInt32(DBPhuse["Code"].ToString()), LocalConnection, LocalTransaction);
                            //                    Atend.Base.Equipment.EDBPhuse _LocaledbPhuse = Atend.Base.Equipment.EDBPhuse.SelectByCode(LocalTransaction, LocalConnection, _edbPhuse.Code);
                            //                    if (_edbPhuse.Code != -1)
                            //                    {
                            //                        _edbPhuse.DBXCode = SelectedEquipEDB.XCode;
                            //                        ed.WriteMessage("PhuseCode={0}\n", _EPhuse.XCode);
                            //                        _edbPhuse.PhuseXCode = _EPhuse.XCode;
                            //                        //if (_edbPhuse.Code == -1)
                            //                        //{
                            //                        if (!_edbPhuse.LocalInsertX(LocalTransaction, LocalConnection, false, false, _transaction, _connection))
                            //                        {
                            //                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":DBPhuse");
                            //                        }

                            //                        //}
                            //                        //else
                            //                        //{
                            //                        //    _edbPhuse.XCode = _LocaledbPhuse.XCode;
                            //                        //    if (!_edbPhuse.LocalUpdateX(LocalTransaction, LocalConnection, false, false, _transaction, _connection))
                            //                        //    {
                            //                        //        throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":DBPhuse");
                            //                        //    }

                            //                        //}
                            //                    }
                            //                    else
                            //                    {
                            //                        throw new System.Exception("Lack of Data in edbPhuse");
                            //                    }

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Lack Of Data in DBPhuse");
                            //                }

                            //            }
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack oF Data In " + dr["TableType"].ToString());
                            //        }


                            //        break;
                            case Atend.Control.Enum.ProductType.Disconnector:
                                ed.WriteMessage("Sub Is : Disconnector \n");
                                DataRow[] drConvDisconnector = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvDisconnector.Length == 0)
                                {
                                    Atend.Base.Equipment.EDisconnector SelectedEquipEDisconnector = Atend.Base.Equipment.EDisconnector.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEDisconnector.Code != -1)
                                    {
                                        if (SelectedEquipEDisconnector.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEDisconnector.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEDisconnector.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Disconnector");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Disconnecor");
                                    }
                                }

                                break;

                            case Atend.Control.Enum.ProductType.Floor:
                                ed.WriteMessage("Sub Is : Floor \n");
                                DataRow[] drConvFloor = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvFloor.Length == 0)
                                {
                                    Atend.Base.Equipment.EFloor SelectedEquipEFloor = Atend.Base.Equipment.EFloor.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEFloor.Code != -1)
                                    {
                                        if (SelectedEquipEFloor.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEFloor.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEFloor.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Floor");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Floor");
                                    }
                                }

                                break;


                            case Atend.Control.Enum.ProductType.Ground:
                                ed.WriteMessage("Sub Is : Ground \n");
                                DataRow[] drConvGround = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvGround.Length == 0)
                                {
                                    Atend.Base.Equipment.EGround SelectedEquipEGround = Atend.Base.Equipment.EGround.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEGround.Code != -1)
                                    {
                                        if (SelectedEquipEGround.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEGround.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEGround.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Ground");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Ground");
                                    }
                                }

                                break;


                            case Atend.Control.Enum.ProductType.GroundCabel:
                                ed.WriteMessage("Sub Is : MiddleCabel :={0}\n", dr["XCode"].ToString());
                                DataRow[] drConvGroundCabel = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvGroundCabel.Length == 0)
                                {
                                    Atend.Base.Equipment.EGroundCabel SelectedEquipEGroundCabel = Atend.Base.Equipment.EGroundCabel.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEGroundCabel.Code != -1)
                                    {
                                        if (SelectedEquipEGroundCabel.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEGroundCabel.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEGroundCabel.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in GroundCabel");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in GroundCabel");
                                    }
                                }

                                break;

                            //    //case Atend.Control.Enum.ProductType.GroundCabelTip:

                            //    //    Atend.Base.Equipment.EGroundCabelTip SelectedEquipEMiddleGroundCabelTip = Atend.Base.Equipment.EGroundCabelTip.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //    //    Atend.Base.Equipment.EGroundCabelTip LocalSelectedMidGroundCabelTip = Atend.Base.Equipment.EGroundCabelTip.SelectByCodeForLocal(SelectedEquipEMiddleGroundCabel.Code, LocalTransaction, LocalConnection);
                            //    //    if (SelectedEquipEMiddleGroundCabelTip.Code != -1)
                            //    //    {

                            //    //        Atend.Base.Equipment.EGroundCabel SelectedMidGroundPhaseCabel = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(SelectedEquipEMiddleGroundCabelTip.PhaseProductCode, _connection, _transaction);
                            //    //        Atend.Base.Equipment.EGroundCabel LocalSelectedMidGroundPhaseCabel = Atend.Base.Equipment.EGroundCabel.SelectByCodeForLocal(SelectedMidGroundPhaseCabel.Code, LocalTransaction, LocalConnection);


                            //    //        Atend.Base.Equipment.EGroundCabel SelectedMidGroundNeutralCabel = Atend.Base.Equipment.EGroundCabel.ServerSelectByCode(SelectedEquipEMiddleGroundCabelTip.NeutralProductCode, _connection, _transaction);
                            //    //        Atend.Base.Equipment.EGroundCabel LocalSelectedMidGroundNuetralCabel = Atend.Base.Equipment.EGroundCabel.SelectByCodeForLocal(SelectedMidGroundNeutralCabel.Code, LocalTransaction, LocalConnection);


                            //    //        if (SelectedMidGroundPhaseCabel.Code != -1)
                            //    //        {

                            //    //            if (LocalSelectedMidGroundPhaseCabel.Code == -1)
                            //    //            {
                            //    //                if (SelectedMidGroundPhaseCabel.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //    //                {
                            //    //                    NewCode = SelectedMidGroundPhaseCabel.XCode;

                            //    //                }
                            //    //                else
                            //    //                {
                            //    //                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                            //    //                }
                            //    //            }
                            //    //            else
                            //    //            {
                            //    //                SelectedMidGroundPhaseCabel.XCode = LocalSelectedMidGroundPhaseCabel.XCode;
                            //    //                if (SelectedMidGroundPhaseCabel.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //    //                {
                            //    //                    NewCode = SelectedMidGroundPhaseCabel.XCode;
                            //    //                }
                            //    //                else
                            //    //                {
                            //    //                    throw new System.Exception("LocalUpDate failed" + Convert.ToInt32(Type).ToString());
                            //    //                }

                            //    //            }
                            //    //        }
                            //    //        else
                            //    //        {
                            //    //            throw new System.Exception("SelectedMidGroundPhaseCabel Lack Of Data");
                            //    //        }


                            //    //        if (SelectedMidGroundNeutralCabel.Code != -1)
                            //    //        {

                            //    //            if (LocalSelectedMidGroundNuetralCabel.Code == -1)
                            //    //            {
                            //    //                if (SelectedMidGroundNeutralCabel.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //    //                {
                            //    //                    NewCode = SelectedMidGroundNeutralCabel.XCode;

                            //    //                }
                            //    //                else
                            //    //                {
                            //    //                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                            //    //                }
                            //    //            }
                            //    //            else
                            //    //            {
                            //    //                SelectedMidGroundNeutralCabel.XCode = LocalSelectedMidGroundNuetralCabel.XCode;
                            //    //                if (SelectedMidGroundNeutralCabel.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //    //                {
                            //    //                    NewCode = SelectedMidGroundNeutralCabel.XCode;
                            //    //                }
                            //    //                else
                            //    //                {
                            //    //                    throw new System.Exception("LocalUpDate failed" + Convert.ToInt32(Type).ToString());
                            //    //                }

                            //    //            }
                            //    //        }
                            //    //        else
                            //    //        {
                            //    //            throw new System.Exception("SelectedMidGroundPhaseCabel Lack Of Data");
                            //    //        }




                            //    //        if (LocalSelectedMidGroundCabelTip.Code == -1)
                            //    //        {
                            //    //            if (SelectedEquipEMiddleGroundCabelTip.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //    //            {
                            //    //                NewCode = SelectedEquipEMiddleGroundCabelTip.XCode;

                            //    //            }
                            //    //            else
                            //    //            {
                            //    //                throw new System.Exception("LocalInsert failed" + Convert.ToInt32(Type).ToString());
                            //    //            }
                            //    //        }
                            //    //        else
                            //    //        {
                            //    //            SelectedEquipEMiddleGroundCabelTip.XCode = LocalSelectedMidGroundCabelTip.XCode;
                            //    //            if (SelectedEquipEMiddleGroundCabelTip.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //    //            {
                            //    //                NewCode = SelectedEquipEMiddleGroundCabelTip.XCode;
                            //    //            }
                            //    //            else
                            //    //            {
                            //    //                throw new System.Exception("LocalUpDate failed" + Convert.ToInt32(Type).ToString());
                            //    //            }

                            //    //        }
                            //    //        //}
                            //    //    }
                            //    //    else
                            //    //    {
                            //    //        throw new System.Exception("Lack oF Data In " + Type.ToString());
                            //    //    }
                            //    //    break;



                            case Atend.Control.Enum.ProductType.GroundPost:
                                ed.WriteMessage("Sub Is : GroundPost \n");
                                DataRow[] drConvGroundPost = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvGroundPost.Length == 0)
                                {
                                    Atend.Base.Equipment.EGroundPost SelectedEquipEGroundPost = Atend.Base.Equipment.EGroundPost.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEGroundPost.Code != -1)
                                    {
                                        if (SelectedEquipEGroundPost.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEGroundPost.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEGroundPost.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in GroundPost");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in GroundPost");
                                    }
                                }

                                break;


                            case Atend.Control.Enum.ProductType.Halter:
                                ed.WriteMessage("Sub Is : Halter \n");
                                DataRow[] drConvHalter = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvHalter.Length == 0)
                                {
                                    Atend.Base.Equipment.EHalter SelectedEquipEHalter = Atend.Base.Equipment.EHalter.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEHalter.Code != -1)
                                    {
                                        if (SelectedEquipEHalter.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEHalter.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEHalter.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Halter");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Halter");
                                    }
                                }

                                break;

                            //    //case Atend.Control.Enum.ProductType.Halter:
                            //    //    Atend.Base.Equipment. SelectedEquip = Atend.Base.Equipment.EBreaker.SelectByXCode(XCode);
                            //    //    if (SelectedEquip.Code != -1)
                            //    //    {
                            //    //        if (SelectedEquip.AccessInsert(_transaction, _connection))
                            //    //        {
                            //    //            NewCode = SelectedEquip.Code;
                            //    //        }
                            //    //        else
                            //    //        {
                            //    //            throw new Exception("{0}.AccessInsert failed", ((Atend.Control.Enum.ProductType)Convert.ToInt32(dr["TableType"])).ToString());
                            //    //        }
                            //    //    }
                            //    //    break;
                            case Atend.Control.Enum.ProductType.HeaderCabel:
                                ed.WriteMessage("Sub Is : HeaderCabel \n");
                                DataRow[] drConvHeadercabel = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvHeadercabel.Length == 0)
                                {
                                    Atend.Base.Equipment.EHeaderCabel  SelectedEquipEHeaderCabel = Atend.Base.Equipment.EHeaderCabel.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEHeaderCabel.Code != -1)
                                    {
                                        if (SelectedEquipEHeaderCabel.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEHeaderCabel.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEHeaderCabel.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in HeaderCabel");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in HeaderCabel");
                                    }
                                }

                                break;
                            case Atend.Control.Enum.ProductType.Insulator:
                                ed.WriteMessage("Sub Is : Insulator \n");
                                DataRow[] drConvInsulator = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvInsulator.Length == 0)
                                {
                                    Atend.Base.Equipment.EInsulator SelectedEquipEInsulator = Atend.Base.Equipment.EInsulator.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEInsulator.Code != -1)
                                    {
                                        if (SelectedEquipEInsulator.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEInsulator.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEInsulator.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Insulator");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Insulator");
                                    }
                                }

                                break;


                            case Atend.Control.Enum.ProductType.InsulatorChain:
                                ed.WriteMessage("Sub Is : InsulatorChain \n");
                                DataRow[] drConvInsulatorChain = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvInsulatorChain.Length == 0)
                                {
                                    Atend.Base.Equipment.EInsulatorChain SelectedEquipEInsulatorChain = Atend.Base.Equipment.EInsulatorChain.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEInsulatorChain.Code != -1)
                                    {
                                        if (SelectedEquipEInsulatorChain.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEInsulatorChain.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEInsulatorChain.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in InsulatorChain");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in InsulatorChain");
                                    }
                                }

                                break;


                            case Atend.Control.Enum.ProductType.InsulatorPipe:
                                ed.WriteMessage("Sub Is : InsulatorPipe \n");
                                DataRow[] drConvInsulatorPipe = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvInsulatorPipe.Length == 0)
                                {
                                    Atend.Base.Equipment.EInsulatorPipe SelectedEquipEInsulatorPipe = Atend.Base.Equipment.EInsulatorPipe.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEInsulatorPipe.Code != -1)
                                    {
                                        if (SelectedEquipEInsulatorPipe.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEInsulatorPipe.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEInsulatorPipe.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in InsulatorPipe");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in InsulatorPipe");
                                    }
                                }

                                break;


                            //    case Atend.Control.Enum.ProductType.MiddleJackPanel:
                            //        ////ed.WriteMessage("AAA : {0} \n", new Guid(dr["XCode"].ToString()));
                            //        ed.WriteMessage("Sub Is : MiddleJackPanel \n");
                            //        Atend.Base.Equipment.EJAckPanel SelectedEquipEJAckPanel = Atend.Base.Equipment.EJAckPanel.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //        Atend.Base.Equipment.EJAckPanel LocalSelectedEJackPanel = Atend.Base.Equipment.EJAckPanel.SelectByCodeForLocal(SelectedEquipEJAckPanel.Code, LocalTransaction, LocalConnection);
                            //        if (SelectedEquipEJAckPanel.Code != -1)
                            //        {

                            //            Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.ServerSelectByCode(SelectedEquipEJAckPanel.MasterProductCode, _connection, _transaction);
                            //            Atend.Base.Equipment.EBus _LocalBus = Atend.Base.Equipment.EBus.SelectByCodeForLocal(_eBus.Code, LocalTransaction, LocalConnection);
                            //            if (_eBus.Code != -1)
                            //            {
                            //                if (_LocalBus.Code == -1)
                            //                {
                            //                    if (!_eBus.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                    {
                            //                        throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
                            //                    }

                            //                }
                            //                else
                            //                {
                            //                    _eBus.XCode = _LocalBus.XCode;

                            //                    if (!_eBus.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                    {
                            //                        throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
                            //                    }
                            //                }
                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("Lack of data in MiddleJackPanel:Bus");
                            //            }

                            //            SelectedEquipEJAckPanel.MasterProductXCode = _eBus.XCode;
                            //            if (LocalSelectedEJackPanel.Code == -1)
                            //            {

                            //                if (SelectedEquipEJAckPanel.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipEJAckPanel.XCode;


                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Local Insert Failed in MJackPanel");
                            //                }
                            //            }
                            //            else
                            //            {
                            //                SelectedEquipEJAckPanel.XCode = LocalSelectedEJackPanel.XCode;

                            //                if (SelectedEquipEJAckPanel.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipEJAckPanel.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Serevr Update Failed in MJackPanel");
                            //                }

                            //            }

                            //            //if (SelectedEquipEJAckPanel.ServerInsert(_transaction, _connection, true, false))
                            //            //{
                            //            //    NewCode = SelectedEquipEJAckPanel.Code;
                            //            DataTable _JPS = Atend.Base.Equipment.EJackPanelCell.SelectByJackPanelCode(SelectedEquipEJAckPanel.Code, _transaction, _connection);

                            //            if (!Atend.Base.Equipment.EJackPanelCell.DeleteX(LocalTransaction, LocalConnection, SelectedEquipEJAckPanel.XCode))
                            //            {
                            //                throw new System.Exception("Error In Delete JackPanelCell in SendToLocal");
                            //            }

                            //            foreach (DataRow _JPSdr in _JPS.Rows)
                            //            {
                            //                //XX2
                            //                Atend.Base.Equipment.ECell _eCell = Atend.Base.Equipment.ECell.ServerSelectByCode(Convert.ToInt32(_JPSdr["ProductCode"].ToString()), _connection, _transaction);
                            //                Atend.Base.Equipment.ECell _LocalSelectedeCell = Atend.Base.Equipment.ECell.SelectByCodeForLocal(_eCell.Code, LocalTransaction, LocalConnection);
                            //                if (_eCell.Code != -1)
                            //                {
                            //                    if (_LocalSelectedeCell.Code == -1)
                            //                    {
                            //                        if (!_eCell.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                        {
                            //                            throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Cell");
                            //                        }

                            //                    }
                            //                    else
                            //                    {
                            //                        _eCell.XCode = _LocalSelectedeCell.XCode;
                            //                        if (!_eCell.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                        {
                            //                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Cell");
                            //                        }

                            //                    }
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Lack of data in MiddleJackPanel:Cell");
                            //                }
                            //                Atend.Base.Equipment.EJackPanelCell _EJC = Atend.Base.Equipment.EJackPanelCell.ServerSelectByCode(Convert.ToInt32(_JPSdr["Code"].ToString()), _connection, _transaction);
                            //                Atend.Base.Equipment.EJackPanelCell _LocalEJC = Atend.Base.Equipment.EJackPanelCell.SelectByCodeForLocal(_EJC.Code, LocalTransaction, LocalConnection);
                            //                if (_EJC.Code != -1)
                            //                {
                            //                    _EJC.ProductXCode = _eCell.XCode;
                            //                    _EJC.JackPanelXCode = SelectedEquipEJAckPanel.XCode;
                            //                    //if (_LocalEJC.Code == -1)
                            //                    //{
                            //                    if (!_EJC.LocalInsertX(LocalTransaction, LocalConnection, false, false, _transaction, _connection))
                            //                    {
                            //                        throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":JackPanelCell");
                            //                    }

                            //                    //}
                            //                    //else
                            //                    //{
                            //                    //    _EJC.XCode = _LocalEJC.XCode;
                            //                    //    if (!_EJC.LocalUpdateX(LocalTransaction, LocalConnection, false, false, _transaction, _connection))
                            //                    //    {
                            //                    //        throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":JackPanelCell");
                            //                    //    }

                            //                    //}
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Lack of data in MiddleJackPanel:JackPanelCell");
                            //                }
                            //            }
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of DAta in MidJackPanel");
                            //        }
                            //        //}
                            //        //}
                            //        break;


                            //    case Atend.Control.Enum.ProductType.WeekJackPanel:
                            //        ed.WriteMessage("Sub Is : WeekJackPanel \n");
                            //        Atend.Base.Equipment.EJackPanelWeek SelectedEquipWeekJackPanel = Atend.Base.Equipment.EJackPanelWeek.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //        Atend.Base.Equipment.EJackPanelWeek LocalSelectedWeekJackPanel = Atend.Base.Equipment.EJackPanelWeek.SelectByCodeForLocal(SelectedEquipWeekJackPanel.Code, LocalTransaction, LocalConnection);

                            //        if (SelectedEquipWeekJackPanel.Code != -1)
                            //        {


                            //            Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.ServerSelectByCode(SelectedEquipWeekJackPanel.BusCode, _connection, _transaction);
                            //            Atend.Base.Equipment.EBus _LocalBus = Atend.Base.Equipment.EBus.SelectByCodeForLocal(_eBus.Code, LocalTransaction, LocalConnection);
                            //            if (_eBus.Code != -1)
                            //            {
                            //                if (_LocalBus.Code == -1)
                            //                {
                            //                    if (!_eBus.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                    {
                            //                        throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
                            //                    }

                            //                }
                            //                else
                            //                {
                            //                    _eBus.XCode = _LocalBus.XCode;
                            //                    if (!_eBus.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                    {
                            //                        throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Bus");
                            //                    }

                            //                }
                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("Lack of data in WeekJackPanel:Bus");
                            //            }
                            //            SelectedEquipWeekJackPanel.BusXCode = _eBus.XCode;

                            //            Atend.Base.Equipment.EAutoKey_3p _Key = Atend.Base.Equipment.EAutoKey_3p.ServerSelectByCode(SelectedEquipWeekJackPanel.AutoKey3pCode, _connection, _transaction);
                            //            Atend.Base.Equipment.EAutoKey_3p _LocalKey = Atend.Base.Equipment.EAutoKey_3p.SelectByCodeForLocal(_Key.Code, LocalTransaction, LocalConnection);
                            //            //ed.WriteMessage("1\n");

                            //            if (_Key.Code != -1)
                            //            {
                            //                //ed.WriteMessage("2\n");
                            //                if (_LocalKey.Code == -1)
                            //                {
                            //                    if (!_Key.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                    {
                            //                        //ed.WriteMessage("3\n");
                            //                        throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":EAutoKey_3p");
                            //                    }

                            //                }
                            //                else
                            //                {
                            //                    _Key.XCode = _LocalKey.XCode;
                            //                    if (!_Key.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                    {
                            //                        //ed.WriteMessage("3\n");
                            //                        throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":EAutoKey_3p");
                            //                    }

                            //                }
                            //                //ed.WriteMessage("4\n");
                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("Lack of data in WeekJackPanel:EAutoKey_3p");
                            //            }
                            //            //ed.WriteMessage("insert passed \n");
                            //            SelectedEquipWeekJackPanel.AutoKey3pXCode = _Key.XCode;
                            //            if (LocalSelectedWeekJackPanel.Code == -1)
                            //            {
                            //                if (SelectedEquipWeekJackPanel.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipWeekJackPanel.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Local Insert Failed " + dr["TableType"].ToString());
                            //                }
                            //            }
                            //            else
                            //            {
                            //                //Atend.Base.Equipment.EJackPanelWeek ServerSelectedWeekJackPanel=Atend.Base.Equipment.EJackPanelWeek.ServerSelectByXCode
                            //                SelectedEquipWeekJackPanel.XCode = LocalSelectedWeekJackPanel.XCode;
                            //                if (SelectedEquipWeekJackPanel.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipWeekJackPanel.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalUpdate failed " + dr["TableType"].ToString());
                            //                }
                            //            }
                            //            //if (SelectedEquipWeekJackPanel.ServerInsert(_transaction, _connection, true, false))
                            //            //{
                            //            //    NewCode = SelectedEquipWeekJackPanel.Code;

                            //            DataTable _WJS = Atend.Base.Equipment.EJackPanelWeekCell.ServerSelectByJackPanelWeekCode(_transaction, _connection, SelectedEquipWeekJackPanel.Code);

                            //            if (!Atend.Base.Equipment.EJackPanelWeekCell.DeleteX(LocalTransaction, LocalConnection, SelectedEquipWeekJackPanel.XCode))
                            //            {
                            //                throw new System.Exception("error in Delete EJackPanelWeekCell in SendToLocal");
                            //            }

                            //            foreach (DataRow _WJSdr in _WJS.Rows)
                            //            {
                            //                //ed.WriteMessage("go for cells \n");
                            //                Atend.Base.Equipment.EJackPanelWeekCell _WJC = Atend.Base.Equipment.EJackPanelWeekCell.ServerSelectByCode(Convert.ToInt32(_WJSdr["Code"].ToString()), _connection, _transaction);
                            //                Atend.Base.Equipment.EJackPanelWeekCell _LocalWJC = Atend.Base.Equipment.EJackPanelWeekCell.SelectByCodeForLocal(_WJC.Code, LocalTransaction, LocalConnection);
                            //                if (_WJC.Code != -1)
                            //                {
                            //                    _WJC.JackPanelWeekXCode = SelectedEquipWeekJackPanel.XCode;
                            //                    //if (_LocalWJC.Code == -1)
                            //                    //{
                            //                    if (!_WJC.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                    {
                            //                        throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":WeekJackPanelCell");
                            //                    }
                            //                    else
                            //                    {
                            //                        //if (!)
                            //                        //{
                            //                        //    throw new System.Exception("UpdateX      Failed");
                            //                        //}
                            //                    }
                            //                    //}
                            //                    //else
                            //                    //{
                            //                    //    _WJC.XCode = _LocalWJC.XCode;
                            //                    //    if (!_WJC.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                    //    {
                            //                    //        throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":WeekJackPanelCell");
                            //                    //    }

                            //                    //}
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Lack of data in WeekJackPanel:WeekJackPanelCell");
                            //                }
                            //            }

                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of Data In Week JackPanel");
                            //        }
                            //        //}
                            //        break;


                            case Atend.Control.Enum.ProductType.KablSho:
                                ed.WriteMessage("Sub Is : KablSho \n");
                                DataRow[] drConvKablsho = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvKablsho.Length == 0)
                                {
                                    Atend.Base.Equipment.EKablsho SelectedEquipEKablsho = Atend.Base.Equipment.EKablsho.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEKablsho.Code != -1)
                                    {
                                        if (SelectedEquipEKablsho.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEKablsho.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEKablsho.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Kablsho");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Kablsho");
                                    }
                                }

                                break;
                            case Atend.Control.Enum.ProductType.Kalamp:
                                ed.WriteMessage("Sub Is : Kalamp \n");
                                DataRow[] drConvKalmp= Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvKalmp.Length == 0)
                                {
                                    Atend.Base.Equipment.EClamp  SelectedEquipEKalmp = Atend.Base.Equipment.EClamp.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEKalmp.Code != -1)
                                    {
                                        if (SelectedEquipEKalmp.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEKalmp.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEKalmp.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Kalamp");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Kalamp");
                                    }
                                }

                                break;

                            case Atend.Control.Enum.ProductType.Khazan:
                                ed.WriteMessage("Sub Is : Khazan \n");
                                DataRow[] drConvKhazan = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvKhazan.Length == 0)
                                {
                                    Atend.Base.Equipment.EKhazan SelectedEquipEKhazan = Atend.Base.Equipment.EKhazan.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEKhazan.Code != -1)
                                    {
                                        if (SelectedEquipEKhazan.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEKhazan.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEKhazan.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Khazan");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Khazan");
                                    }
                                }

                                break;

                            case Atend.Control.Enum.ProductType.Light:
                                ed.WriteMessage("Sub Is : Light \n");
                                DataRow[] drConvLight = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvLight.Length == 0)
                                {
                                    Atend.Base.Equipment.ELight  SelectedEquipELight = Atend.Base.Equipment.ELight.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipELight.Code != -1)
                                    {
                                        if (SelectedEquipELight.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipELight.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipELight.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Light");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Light");
                                    }
                                }

                                break;

                            case Atend.Control.Enum.ProductType.Mafsal:
                                ed.WriteMessage("Sub Is : Mafsal \n");
                                DataRow[] drConvMafsal = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvMafsal.Length == 0)
                                {
                                    Atend.Base.Equipment.EMafsal SelectedEquipEMafsal = Atend.Base.Equipment.EMafsal.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEMafsal.Code != -1)
                                    {
                                        if (SelectedEquipEMafsal.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEMafsal.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEMafsal.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Mafsal");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Mafsal");
                                    }
                                }

                                break;

                            //    case Atend.Control.Enum.ProductType.MeasuredJackPanel:
                            //        ed.WriteMessage("Sub Is : MeasuredJackPanel \n");
                            //        Atend.Base.Equipment.EMeasuredJackPanel SelectedEquipEMeasuredJackPanel = Atend.Base.Equipment.EMeasuredJackPanel.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //        Atend.Base.Equipment.EMeasuredJackPanel LocalselectedMeasureJackPAnel = Atend.Base.Equipment.EMeasuredJackPanel.SelectByCodeForLocal(SelectedEquipEMeasuredJackPanel.Code, LocalTransaction, LocalConnection);
                            //        if (SelectedEquipEMeasuredJackPanel.Code != -1)
                            //        {

                            //            if (LocalselectedMeasureJackPAnel.Code == -1)
                            //            {
                            //                if (SelectedEquipEMeasuredJackPanel.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipEMeasuredJackPanel.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }
                            //            }
                            //            else
                            //            {
                            //                SelectedEquipEMeasuredJackPanel.XCode = LocalselectedMeasureJackPAnel.XCode;
                            //                if (SelectedEquipEMeasuredJackPanel.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipEMeasuredJackPanel.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }


                            //            }
                            //            //}
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                            //        }
                            //        break;


                            case Atend.Control.Enum.ProductType.MiniatureKey:
                                ed.WriteMessage("Sub Is : MiniatureKey \n");
                                DataRow[] drConvMiniaturKey = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvMiniaturKey.Length == 0)
                                {
                                    Atend.Base.Equipment.EMiniatorKey SelectedEquipEMiniatorKey = Atend.Base.Equipment.EMiniatorKey.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEMiniatorKey.Code != -1)
                                    {
                                        if (SelectedEquipEMiniatorKey.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEMiniatorKey.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEMiniatorKey.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Miniatorkey");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in MiniatorKey");
                                    }
                                }

                                break;
                            case Atend.Control.Enum.ProductType.PhotoCell:
                                ed.WriteMessage("Sub Is : PhotoCell \n");
                                DataRow[] drConvPhotoCell = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvPhotoCell.Length == 0)
                                {
                                    Atend.Base.Equipment.EPhotoCell SelectedEquipEPhotoCell = Atend.Base.Equipment.EPhotoCell.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEPhotoCell.Code != -1)
                                    {
                                        if (SelectedEquipEPhotoCell.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEPhotoCell.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEPhotoCell.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in PhotoCell");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in PhotoCell");
                                    }
                                }

                                break;

                            //    case Atend.Control.Enum.ProductType.Phuse:
                            //        ed.WriteMessage("Sub Is : Phuse \n");
                            //        Atend.Base.Equipment.EPhuse SelectedEquipEPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //        Atend.Base.Equipment.EPhuse LocalSelectedPhuse = Atend.Base.Equipment.EPhuse.SelectByCodeForLocal(SelectedEquipEPhuse.Code, LocalTransaction, LocalConnection);
                            //        if (SelectedEquipEPhuse.Code != -1)
                            //        {

                            //            Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(SelectedEquipEPhuse.PhusePoleCode, _connection, _transaction);
                            //            Atend.Base.Equipment.EPhusePole _LocalPhusePole = Atend.Base.Equipment.EPhusePole.SelectByCodeForLocal(_EPhusePole.Code, LocalTransaction, LocalConnection);
                            //            ed.WriteMessage("_EPhusePole={0}\n", _EPhusePole.Code);
                            //            if (_EPhusePole.Code != -1)
                            //            {
                            //                if (_LocalPhusePole.Code == -1)
                            //                {
                            //                    if (!_EPhusePole.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                    {
                            //                        throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":PhusePole");
                            //                    }

                            //                }
                            //                else
                            //                {
                            //                    _EPhusePole.XCode = _LocalPhusePole.XCode;
                            //                    if (!_EPhusePole.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                    {
                            //                        throw new System.Exception("Local Update phusePole Failed");
                            //                    }

                            //                }
                            //            }
                            //            else
                            //            {
                            //                throw new System.Exception("Lack of data in Phuse:PhusePole");
                            //            }
                            //            ed.WriteMessage("PhusePoleCode:{0}\n", _EPhusePole.Code);
                            //            SelectedEquipEPhuse.PhusePoleXCode = _EPhusePole.XCode;
                            //            if (LocalSelectedPhuse.Code == -1)
                            //            {
                            //                if (SelectedEquipEPhuse.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipEPhuse.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }
                            //            }
                            //            else
                            //            {
                            //                SelectedEquipEPhuse.XCode = LocalSelectedPhuse.XCode;
                            //                if (!SelectedEquipEPhuse.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                {
                            //                    throw new System.Exception("Local Update Failed in Phuse");
                            //                }


                            //            }


                            //            //}
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                            //        }
                            //        break;
                            case Atend.Control.Enum.ProductType.PhuseKey:
                                ed.WriteMessage("Sub Is : PhuseKey \n");
                                DataRow[] drConvPhuseKey = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvPhuseKey.Length == 0)
                                {
                                    Atend.Base.Equipment.EPhuseKey SelectedEquipEPhuseKey = Atend.Base.Equipment.EPhuseKey.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEPhuseKey.Code != -1)
                                    {
                                        if (SelectedEquipEPhuseKey.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEPhuseKey.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEPhuseKey.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in PhuseKey");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in PhuseKey");
                                    }
                                }

                                break;
                            case Atend.Control.Enum.ProductType.PhusePole:
                                ed.WriteMessage("Sub Is : PhusePole \n");
                                DataRow[] drConvPhusePole= Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvPhusePole.Length == 0)
                                {
                                    Atend.Base.Equipment.EPhusePole SelectedEquipEPhusePole = Atend.Base.Equipment.EPhusePole.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEPhusePole.Code != -1)
                                    {
                                        if (SelectedEquipEPhusePole.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEPhusePole.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEPhusePole.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in PhusePole");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in PhusePole");
                                    }
                                }

                                break;
                            case Atend.Control.Enum.ProductType.Pole:
                                ed.WriteMessage("Sub Is : Pole \n");
                                DataRow[] drConvPole = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvPole.Length == 0)
                                {
                                    Atend.Base.Equipment.EPole SelectedEquipEPole = Atend.Base.Equipment.EPole.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEPole.Code != -1)
                                    {
                                        if (SelectedEquipEPole.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEPole.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEPole.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Pole");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Pole");
                                    }
                                }

                                break;
                            //    ////case Atend.Control.Enum.ProductType.PoleTip:
                            //    ////    ed.WriteMessage("Sub Is : PoleTip \n");
                            //    ////    Atend.Base.Equipment.EPoleTip SelectedEquipEPoleTip = Atend.Base.Equipment.EPoleTip.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
                            //    ////    if (SelectedEquipEPoleTip.Code != -1)
                            //    ////    {
                            //    ////        //Atend.Base.Equipment.EPoleTip answer = Atend.Base.Equipment.EPoleTip.AccessSelectByXCode(SelectedEquipEPoleTip.XCode, _transaction, _connection);
                            //    ////        //if (answer.Code != -1)
                            //    ////        //{
                            //    ////        //    NewCode = answer.Code;
                            //    ////        //}
                            //    ////        //else
                            //    ////        //{

                            //    ////        Atend.Base.Equipment.EPole _ePole = Atend.Base.Equipment.EPole.SelectByXCode(SelectedEquipEPoleTip.PoleXCode);
                            //    ////        if (_ePole.Code != -1)
                            //    ////        {
                            //    ////            if (!_ePole.AccessInsert(_transaction, _connection, true, true))
                            //    ////            {
                            //    ////                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":POle");
                            //    ////            }
                            //    ////        }
                            //    ////        else
                            //    ////        {
                            //    ////            throw new System.Exception("Lack of data in poleTip:Pole");
                            //    ////        }

                            //    ////        Atend.Base.Equipment.EHalter _eHalter = Atend.Base.Equipment.EHalter.SelectByXCode(SelectedEquipEPoleTip.HalterXID);
                            //    ////        if (_eHalter.Code != -1)
                            //    ////        {
                            //    ////            if (!_eHalter.AccessInsert(_transaction, _connection, true, true))
                            //    ////            {
                            //    ////                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Halter");
                            //    ////            }
                            //    ////        }
                            //    ////        else
                            //    ////        {
                            //    ////            throw new System.Exception("Lack of data in poleTip:Halter");
                            //    ////        }

                            //    ////        SelectedEquipEPoleTip.PoleCode = _ePole.Code;
                            //    ////        SelectedEquipEPoleTip.HalterID = _eHalter.Code;
                            //    ////        if (SelectedEquipEPoleTip.AccessInsert(_transaction, _connection, true, false))
                            //    ////        {
                            //    ////            NewCode = SelectedEquipEPoleTip.Code;
                            //    ////        }
                            //    ////        else
                            //    ////        {
                            //    ////            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //    ////        }



                            //    ////        //}
                            //    ////    }
                            //    ////    break;
                            case Atend.Control.Enum.ProductType.Prop:
                                ed.WriteMessage("Sub Is : Prop \n");
                                DataRow[] drConvProp = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvProp.Length == 0)
                                {
                                    Atend.Base.Equipment.EProp SelectedEquipEProp = Atend.Base.Equipment.EProp.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEProp.Code != -1)
                                    {
                                        if (SelectedEquipEProp.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEProp.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEProp.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in Prop");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in Prop");
                                    }
                                }

                                break;

                            case Atend.Control.Enum.ProductType.PT:
                                ed.WriteMessage("Sub Is : PT \n");
                                DataRow[] drConvPT = Atend.Control.Common.dtConvertor.Select(string.Format("OldProductCode={0} And ProductType={1}", dr["ProductCode"].ToString(), dr["TableType"].ToString()));

                                if (drConvPT.Length == 0)
                                {
                                    Atend.Base.Equipment.EPT SelectedEquipEPT = Atend.Base.Equipment.EPT.AccessSelectByCodeForConvertor(Convert.ToInt32(dr["ProductCode"].ToString()), OldTransaction, OldConnection);
                                    if (SelectedEquipEPT.Code != -1)
                                    {
                                        if (SelectedEquipEPT.AccessInsert(OldTransaction, OldConnection, NewTransaction, NewConnection, true, true))
                                        {

                                            DataRow drNew = Atend.Control.Common.dtConvertor.NewRow();
                                            drNew["ProuctType"] = dr["TableType"].ToString();
                                            drNew["OldProductCode"] = dr["ProductCode"].ToString();
                                            drNew["NewProductCode"] = SelectedEquipEPT.Code;
                                            drNew["GroupObjID"] = "0";
                                            Atend.Control.Common.dtConvertor.Rows.Add(drNew);
                                            NewCode = SelectedEquipEPT.Code;
                                        }
                                        else
                                        {
                                            throw new System.Exception("Access Insert FAiled in PT");
                                        }
                                    }
                                    else
                                    {
                                        throw new System.Exception("Lack Of Data in PT");
                                    }
                                }

                                break;



                            //    case Atend.Control.Enum.ProductType.Ramp:
                            //        ed.WriteMessage("Sub Is : Ramp \n");
                            //        Atend.Base.Equipment.ERamp SelectedEquipERamp = Atend.Base.Equipment.ERamp.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //        Atend.Base.Equipment.ERamp LocalSelectedRamp = Atend.Base.Equipment.ERamp.SelectByCodeForLocal(SelectedEquipERamp.Code, LocalTransaction, LocalConnection);

                            //        if (SelectedEquipERamp.Code != -1)
                            //        {

                            //            if (LocalSelectedRamp.Code == -1)
                            //            {
                            //                if (SelectedEquipERamp.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipERamp.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }
                            //            }
                            //            else
                            //            {
                            //                SelectedEquipERamp.XCode = LocalSelectedRamp.XCode;

                            //                if (SelectedEquipERamp.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipERamp.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }

                            //            }
                            //            //}
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                            //        }
                            //        break;


                            //    case Atend.Control.Enum.ProductType.ReCloser:
                            //        ed.WriteMessage("Sub Is : ReCloser \n");
                            //        Atend.Base.Equipment.EReCloser SelectedEquipEReCloser = Atend.Base.Equipment.EReCloser.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //        Atend.Base.Equipment.EReCloser LocalSelectedReCloser = Atend.Base.Equipment.EReCloser.SelectByCodeForLocal(SelectedEquipEReCloser.Code, LocalTransaction, LocalConnection);
                            //        if (SelectedEquipEReCloser.Code != -1)
                            //        {

                            //            if (LocalSelectedReCloser.Code == -1)
                            //            {
                            //                if (SelectedEquipEReCloser.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipEReCloser.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }
                            //            }
                            //            else
                            //            {
                            //                SelectedEquipEReCloser.XCode = LocalSelectedReCloser.XCode;
                            //                if (SelectedEquipEReCloser.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipEReCloser.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }

                            //            }
                            //            //}
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                            //        }
                            //        break;

                            //    case Atend.Control.Enum.ProductType.Rod:
                            //        ed.WriteMessage("Sub Is : Rod \n");
                            //        Atend.Base.Equipment.ERod SelectedEquipERod = Atend.Base.Equipment.ERod.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //        Atend.Base.Equipment.ERod LocalSelectedRod = Atend.Base.Equipment.ERod.SelectByCodeForLocal(SelectedEquipERod.Code, LocalTransaction, LocalConnection);
                            //        if (SelectedEquipERod.Code != -1)
                            //        {

                            //            if (LocalSelectedRod.Code == -1)
                            //            {
                            //                if (SelectedEquipERod.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipERod.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }
                            //            }
                            //            else
                            //            {
                            //                SelectedEquipERod.XCode = SelectedEquipERod.XCode;
                            //                if (SelectedEquipERod.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipERod.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }

                            //            }
                            //            //}
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                            //        }
                            //        break;

                            //    case Atend.Control.Enum.ProductType.SectionLizer:
                            //        ed.WriteMessage("Sub Is : SectionLizer \n");
                            //        Atend.Base.Equipment.ESectionLizer SelectedEquipESectionLizer = Atend.Base.Equipment.ESectionLizer.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //        Atend.Base.Equipment.ESectionLizer LocalSelectedSectionLizer = Atend.Base.Equipment.ESectionLizer.SelectByCodeForLocal(SelectedEquipESectionLizer.Code, LocalTransaction, LocalConnection);
                            //        if (SelectedEquipESectionLizer.Code != -1)
                            //        {

                            //            if (LocalSelectedSectionLizer.Code == -1)
                            //            {
                            //                if (SelectedEquipESectionLizer.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipESectionLizer.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }
                            //            }
                            //            else
                            //            {
                            //                SelectedEquipESectionLizer.XCode = LocalSelectedSectionLizer.XCode;
                            //                if (SelectedEquipESectionLizer.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipESectionLizer.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }

                            //            }
                            //            //}
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                            //        }
                            //        break;

                            //    case Atend.Control.Enum.ProductType.SelfKeeper:
                            //        ed.WriteMessage("Sub Is : SelfKeeper \n");
                            //        Atend.Base.Equipment.ESelfKeeper SelectedEquipESelfKeeper = Atend.Base.Equipment.ESelfKeeper.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //        Atend.Base.Equipment.ESelfKeeper LocalSelectedSelfKeeper = Atend.Base.Equipment.ESelfKeeper.SelectByCodeForLocal(SelectedEquipESelfKeeper.Code, LocalTransaction, LocalConnection);
                            //        if (SelectedEquipESelfKeeper.Code != -1)
                            //        {

                            //            if (LocalSelectedSelfKeeper.Code == -1)
                            //            {
                            //                if (SelectedEquipESelfKeeper.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipESelfKeeper.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Local Insert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }
                            //            }
                            //            else
                            //            {
                            //                SelectedEquipESelfKeeper.XCode = LocalSelectedSelfKeeper.XCode;
                            //                if (SelectedEquipESelfKeeper.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipESelfKeeper.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Server Update failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //                }

                            //            }
                            //            //}
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of data in " + dr["TableType"].ToString());
                            //        }
                            //        break;
                            //    //case Atend.Control.Enum.ProductType.SelfKeeperTip:
                            //    //    ed.WriteMessage("Sub Is : SelfKeeperTip \n");
                            //    //    Atend.Base.Equipment.ESelfKeeperTip SelectedEquipESelfKeeperTip = Atend.Base.Equipment.ESelfKeeperTip.SelectByXCode(new Guid(dr["XCode"].ToString()));
                            //    //    if (SelectedEquipESelfKeeperTip.Code != -1)
                            //    //    {
                            //    //        //Atend.Base.Equipment.ESelfKeeperTip answer = Atend.Base.Equipment.ESelfKeeperTip.AccessSelectByXCode(SelectedEquipESelfKeeperTip.XCode, _transaction, _connection);
                            //    //        //if (answer.Code != -1)
                            //    //        //{
                            //    //        //    NewCode = answer.Code;
                            //    //        //}
                            //    //        //else
                            //    //        //{
                            //    //        if (SelectedEquipESelfKeeperTip.AccessInsert(_transaction, _connection))
                            //    //        {
                            //    //            NewCode = SelectedEquipESelfKeeperTip.Code;
                            //    //        }
                            //    //        else
                            //    //        {
                            //    //            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //    //        }
                            //    //        //}
                            //    //    }
                            //    //    break;

                            //    case Atend.Control.Enum.ProductType.StreetBox:
                            //        ed.WriteMessage("Sub Is : StreetBox \n");
                            //        Atend.Base.Equipment.EStreetBox SelectedEquipEStreetBox = Atend.Base.Equipment.EStreetBox.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //        Atend.Base.Equipment.EStreetBox LocalSelectedStreetBox = Atend.Base.Equipment.EStreetBox.SelectByCodeForLocal(SelectedEquipEStreetBox.Code, LocalTransaction, LocalConnection);
                            //        if (SelectedEquipEStreetBox.Code != -1)
                            //        {

                            //            if (LocalSelectedStreetBox.Code == -1)
                            //            {
                            //                if (SelectedEquipEStreetBox.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipEStreetBox.XCode;

                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Local InSert Failed " + dr["TableType"].ToString());
                            //                }
                            //            }
                            //            else
                            //            {
                            //                SelectedEquipEStreetBox.XCode = LocalSelectedStreetBox.XCode;
                            //                if (SelectedEquipEStreetBox.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                {
                            //                    NewCode = SelectedEquipEStreetBox.XCode;
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Local Update Failed " + dr["TableType"].ToString());
                            //                }


                            //            }
                            //            //if (SelectedEquipEStreetBox.ServerInsert(_transaction, _connection, true, false))
                            //            //{
                            //            //    NewCode = SelectedEquipEStreetBox.Code;
                            //            DataTable StreetBoxPhuses = Atend.Base.Equipment.EStreetBoxPhuse.ServerSelectByStreetBoxCode(Convert.ToInt32(dr["Code"].ToString()), _transaction, _connection);
                            //            if (!Atend.Base.Equipment.EStreetBoxPhuse.DeleteX(LocalTransaction, LocalConnection, SelectedEquipEStreetBox.XCode))
                            //            {
                            //                throw new System.Exception("error in Delete StreetBoxPhuse");
                            //            }
                            //            foreach (DataRow StreetBoxPhuse in StreetBoxPhuses.Rows)
                            //            {
                            //                //ed.WriteMessage("110\n");
                            //                Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.ServerSelectByCode(Convert.ToInt32(StreetBoxPhuse["PhuseCode"].ToString()), _connection, _transaction);
                            //                Atend.Base.Equipment.EPhuse _LocalPhuse = Atend.Base.Equipment.EPhuse.SelectByCodeForLocal(_EPhuse.Code, LocalTransaction, LocalConnection);
                            //                if (_EPhuse.Code != -1)
                            //                {
                            //                    //ed.WriteMessage("111\n");
                            //                    Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.ServerSelectByCode(_EPhuse.PhusePoleCode, _connection, _transaction);
                            //                    Atend.Base.Equipment.EPhusePole _LocalPhusePole = Atend.Base.Equipment.EPhusePole.SelectByCodeForLocal(_EPhusePole.Code, LocalTransaction, LocalConnection);
                            //                    if (_EPhusePole.Code != -1)
                            //                    {
                            //                        //ed.WriteMessage("112\n");
                            //                        if (_LocalPhusePole.Code == -1)
                            //                        {
                            //                            if (!_EPhusePole.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                            {
                            //                                throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":PhusePole");
                            //                            }

                            //                        }
                            //                        else
                            //                        {
                            //                            _EPhusePole.XCode = _LocalPhusePole.XCode;
                            //                            if (!_EPhusePole.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                            {
                            //                                throw new System.Exception("LocalrUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":PhusePole");
                            //                            }

                            //                        }
                            //                    }
                            //                    else
                            //                    {
                            //                        throw new System.Exception("Lack of data in StreetBox:Phuse:PhusePole");
                            //                    }
                            //                    //ed.WriteMessage("streetbox was :{0} \n", _EPhusePole.Code);
                            //                    _EPhuse.PhusePoleXCode = _EPhusePole.XCode;
                            //                    if (_LocalPhuse.Code == -1)
                            //                    {
                            //                        if (!_EPhuse.LocalInsertX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                        {
                            //                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                            //                        }

                            //                    }
                            //                    else
                            //                    {
                            //                        _EPhuse.XCode = _LocalPhuse.XCode;

                            //                        if (!_EPhuse.LocalUpdateX(LocalTransaction, LocalConnection, true, true, _transaction, _connection))
                            //                        {
                            //                            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Phuse");
                            //                        }

                            //                    }

                            //                    Atend.Base.Equipment.EStreetBoxPhuse _EStreetBoxPhuse = Atend.Base.Equipment.EStreetBoxPhuse.ServerSelectByCode(Convert.ToInt32(StreetBoxPhuse["code"].ToString()), _connection, _transaction);
                            //                    Atend.Base.Equipment.EStreetBoxPhuse _LocalStreetBoxPhuse = Atend.Base.Equipment.EStreetBoxPhuse.SelectByCodeForLocal(_EStreetBoxPhuse.Code, LocalTransaction, LocalConnection);
                            //                    if (_EStreetBoxPhuse.Code != -1)
                            //                    {
                            //                        _EStreetBoxPhuse.PhuseXCode = _EPhuse.XCode;
                            //                        _EStreetBoxPhuse.StreetBoxXCode = SelectedEquipEStreetBox.XCode;
                            //                        //if (_LocalStreetBoxPhuse.Code == -1)
                            //                        //{
                            //                        if (!_EStreetBoxPhuse.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                        {
                            //                            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":StreetBoxPhuse");
                            //                        }

                            //                        //}
                            //                        //else
                            //                        //{

                            //                        //    _EStreetBoxPhuse.XCode = _LocalStreetBoxPhuse.XCode;
                            //                        //    if (!_EStreetBoxPhuse.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //                        //    {
                            //                        //        throw new System.Exception("Local Update failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":StreetBoxPhuse");
                            //                        //    }

                            //                        //}
                            //                    }
                            //                    else
                            //                    {
                            //                        throw new System.Exception("Lack of data in StreetBox:StreetBoxPhuse");
                            //                    }
                            //                }
                            //                else
                            //                {
                            //                    throw new System.Exception("Lack of data in StreetBox:Phuse");
                            //                }
                            //            }
                            //        }
                            //        else
                            //        {
                            //            throw new System.Exception("Lack Of DAta in StreetBox");
                            //        }
                            //        //}
                            //        break;
                            //    case Atend.Control.Enum.ProductType.Transformer:
                            //        ed.WriteMessage("Sub Is : Transformer \n");
                            //        //Atend.Base.Equipment.ETransformer SelectedEquipETransformer = Atend.Base.Equipment.ETransformer.ServerSelectByCode(Convert.ToInt32(dr["ProductCode"].ToString()), _connection, _transaction);
                            //        //Atend.Base.Equipment.ETransformer LocalSelectedTransformer = Atend.Base.Equipment.ETransformer.SelectByCodeForLocal(SelectedEquipETransformer.Code, LocalTransaction, LocalConnection);
                            //        //if (SelectedEquipETransformer.Code != -1)
                            //        //{

                            //        //    if (LocalSelectedTransformer.Code == -1)
                            //        //    {
                            //        //        if (SelectedEquipETransformer.LocalInsertX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //        //        {
                            //        //            NewCode = SelectedEquipETransformer.XCode;

                            //        //        }
                            //        //        else
                            //        //        {
                            //        //            throw new System.Exception("LocalInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //        //        }
                            //        //    }
                            //        //    else
                            //        //    {
                            //        //        SelectedEquipETransformer.XCode = LocalSelectedTransformer.XCode;
                            //        //        if (SelectedEquipETransformer.LocalUpdateX(LocalTransaction, LocalConnection, true, false, _transaction, _connection))
                            //        //        {
                            //        //            NewCode = SelectedEquipETransformer.XCode;
                            //        //        }
                            //        //        else
                            //        //        {
                            //        //            throw new System.Exception("LocalUpdate failed" + Convert.ToInt32(dr["TableType"]).ToString());
                            //        //        }

                            //        //    }
                            //        //    //}
                            //        //}
                            //        break;

                        }
                        #endregion
                        if (NewCode != 0)
                        {
                            //ed.WriteMessage("NewCode:{0}\n", NewCode);
                            ed.WriteMessage("********** Send From ServerToLocal SelectedContainer.code={0}\n", SelectedContainer.Code);
                            Atend.Base.Equipment.EProductPackage _EProductPackage = new Atend.Base.Equipment.EProductPackage();
                            _EProductPackage.ContainerPackageCode = SelectedContainer.Code;
                            //_EProductPackage.ContainerPackageCode = ServerContainer.Code;
                            _EProductPackage.ProductCode = NewCode;
                            _EProductPackage.Count = Convert.ToInt32(dr["Count"]);
                            _EProductPackage.TableType = Convert.ToInt16(dr["TableType"]);
                            if (!_EProductPackage.AccessInsert(NewTransaction, NewConnection))
                            {
                                throw new System.Exception("_EProductPackage.AccessInsert failed");
                            }

                            if (!SentFromAccessToAccess(Convert.ToInt32(dr["Code"].ToString()), Convert.ToInt32(dr["TableType"]), NewCode, OldTransaction, OldConnection, NewTransaction, NewConnection))
                            {
                                throw new System.Exception("SentFromAccessToAccess inside failed");
                            }
                        }
                        else
                        {
                            //throw new System.Exception("Pro was not inserted or Pro was not in switch");
                        }
                    }
                    //}
                    //else
                    //{
                    //    throw new System.Exception("SelectedContainer.AccessInsert failed");
                    //}
                }
                else
                {
                    ed.WriteMessage("No container Package was found\n");
                    //No container Package was found
                }
            }
            catch (System.Exception ex)
            {
                ed.WriteMessage("ERROR EContainerPackage.SentFromLocalToServer :{0} \n", ex.Message);
                return false;
            }

            return true;
        }



        public static bool FindLoopNode(Guid MainContainerXCode, int MainType, Guid FindContainerXCode, int FindType)
        {
            Editor ed = Application.DocumentManager.MdiActiveDocument.Editor;
            bool Answer = false;
            //ed.WriteMessage("----------------------------\n");
            //ed.WriteMessage("main :{0}\n     :{1}\nfind :{2}\n     :{3}\n", MainContainerXCode, MainType, FindContainerXCode, FindType);
            if (MainContainerXCode == FindContainerXCode && MainType == FindType)
            {
                Answer = true;
            }
            else
            {
                Answer = false;
            }
            //////int cCode = EContainerPackage.selectByContainerXCodeAndType(MainContainerXCode, MainType).Code;
            //////DataTable Fathers = Atend.Base.Equipment.EProductPackage.SelectBycCode(cCode);    //SelectByXCodeType(MainContainerXCode, MainType);
            //////ed.WriteMessage("containerCode:{0}\ncount:{1}\n", cCode, Fathers.Rows.Count);

            ////////foreach (DataRow Father in Fathers.Rows)
            ////////{
            ////////    ed.WriteMessage("father :{0}\n       :{1}\n", Father["XCode"], Father["TAbleType"]);
            ////////    //if (Father["XCode"].ToString() == FindContainerXCode.ToString() && Convert.ToInt32(Father["TAbleType"]) == FindType)
            ////////    //{
            ////////    //    return true;
            ////////    //}
            ////////    if (Father["XCode"].ToString() == MainContainerXCode.ToString() && Convert.ToInt32(Father["TableType"]) == MainType)
            ////////    {
            ////////        return true;
            ////////    }
            ////////}
            if (!Answer)
            {
                int cCode = EContainerPackage.selectByContainerXCodeAndType(FindContainerXCode, FindType).Code;
                DataTable dtChild = Atend.Base.Equipment.EProductPackage.SelectBycCode(cCode);
                foreach (DataRow Child in dtChild.Rows)
                {
                    //ed.WriteMessage("child :{0}\n      :{1}\n", Child["XCode"], Child["TAbleType"]);
                    //Answer = FindLoopNode(new Guid(Child["XCode"].ToString()), Convert.ToInt32(Child["TableType"].ToString()), MainContainerXCode, MainType);
                    Answer = FindLoopNode(MainContainerXCode, MainType, new Guid(Child["XCode"].ToString()), Convert.ToInt32(Child["TableType"].ToString()));
                    //if (Answer)
                    //    return true;
                }
            }
            return Answer;




            //Editor ed = Application.DocumentManager.MdiActiveDocument.Editor;
            //bool Answer = false;
            //ed.WriteMessage("@@@1:Father:{0} : {1} \n", MainContainerXCode, MainType);
            //int cCode = EContainerPackage.selectByContainerXCodeAndType(MainContainerXCode, MainType).Code;
            //ed.WriteMessage("@@ Code:{0}\n", cCode);
            //DataTable Fathers = Atend.Base.Equipment.EProductPackage.SelectBycCode(cCode);    //SelectByXCodeType(MainContainerXCode, MainType);
            //ed.WriteMessage("@@@ Count:{0}\n", Fathers.Rows.Count);
            //foreach (DataRow Father in Fathers.Rows)
            //{
            //    Atend.Base.Equipment.EContainerPackage FatherInfo = Atend.Base.Equipment.EContainerPackage.selectByCode(Convert.ToInt32(Father["ContainerPackageCode"]));
            //    ed.WriteMessage("@@@2:Father:{0} : {1} \n", FatherInfo.XCode, FatherInfo.Type);
            //    if (FatherInfo.Type == FindType && FatherInfo.XCode == FindContainerXCode)
            //    {
            //        return true;
            //        //Answer = true;
            //    }
            //}
            //if (!Answer)
            //{
            //    cCode = EContainerPackage.selectByContainerXCodeAndType(FindContainerXCode, FindType).Code;
            //    ed.WriteMessage("@@ Code:{0}\n", cCode);
            //    DataTable dtChild = Atend.Base.Equipment.EProductPackage.SelectBycCode(cCode);
            //    foreach (DataRow Child in dtChild.Rows)
            //    {
            //        //Atend.Base.Equipment.EContainerPackage FatherInfo = Atend.Base.Equipment.EContainerPackage.selectByCode(Convert.ToInt32(Father["ContainerPackageCode"]));
            //        Answer = FindLoopNode(new Guid(Child["XCode"].ToString()),Convert.ToInt32(Child["TableType"].ToString()), MainContainerXCode, MainType);
            //    }
            //}
            //ed.WriteMessage("### :{0}\n", Answer);
            //return Answer;
        }



        //#region Switch
        //          int NewCode = 0;
        //          switch ((Atend.Control.Enum.ProductType)Convert.ToInt32(Type))
        //          {
        //              case Atend.Control.Enum.ProductType.AirPost:
        //                  ed.WriteMessage("Sub Is : AirPost \n");
        //                  Atend.Base.Equipment.EAirPost SelectedEquipEAirPost = Atend.Base.Equipment.EAirPost.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipEAirPost.Code != -1)
        //                  {
        //                      if (SelectedEquipEAirPost.Code == 0)
        //                      {
        //                          if (SelectedEquipEAirPost.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEAirPost.Code;
        //                              if (!SelectedEquipEAirPost.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX AirPost  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEAirPost.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEAirPost.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                  }
        //                  else
        //                  {
        //                      ed.WriteMessage(Type.ToString() + " does not exist \n");
        //                  }
        //                  break;

        //              case Atend.Control.Enum.ProductType.Arm:
        //                  ed.WriteMessage("Sub Is : Arm \n");
        //                  Atend.Base.Equipment.EArm SelectedEquipEArm = Atend.Base.Equipment.EArm.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEArm.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EProp answer = Atend.Base.Equipment.EProp.AccessSelectByXCode(SelectedEquipEProp.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEArm.Code == 0)
        //                      {
        //                          if (SelectedEquipEArm.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEArm.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("container error in AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEArm.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEArm.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("container error in AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;

        //              case Atend.Control.Enum.ProductType.AuoKey3p:
        //                  ed.WriteMessage("Sub Is : AuoKey3p \n");

        //                  Atend.Base.Equipment.EAutoKey_3p SelectedEquipEAutoKey_3p = Atend.Base.Equipment.EAutoKey_3p.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipEAutoKey_3p.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EAutoKey_3p answer = Atend.Base.Equipment.EAutoKey_3p.AccessSelectByXCode(SelectedEquipEAutoKey_3p.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEAutoKey_3p.Code == 0)
        //                      {
        //                          if (SelectedEquipEAutoKey_3p.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEAutoKey_3p.Code;
        //                              if (!SelectedEquipEAutoKey_3p.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  AutoKey3p Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEAutoKey_3p.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEAutoKey_3p.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.Breaker:
        //                  ed.WriteMessage("Sub Is : Breaker \n");
        //                  Atend.Base.Equipment.EBreaker SelectedEquipEBreaker = Atend.Base.Equipment.EBreaker.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipEBreaker.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EBreaker answer = Atend.Base.Equipment.EBreaker.AccessSelectByXCode(SelectedEquipEBreaker.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEBreaker.Code == 0)
        //                      {
        //                          if (SelectedEquipEBreaker.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEBreaker.Code;
        //                              if (!SelectedEquipEBreaker.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX Breaker  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEBreaker.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEBreaker.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.Bus:
        //                  ed.WriteMessage("Sub Is : Bus \n");
        //                  Atend.Base.Equipment.EBus SelectedEquipEBus = Atend.Base.Equipment.EBus.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEBus.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EBus answer = Atend.Base.Equipment.EBus.AccessSelectByXCode(SelectedEquipEBus.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEBus.Code == 0)
        //                      {
        //                          if (SelectedEquipEBus.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEBus.Code;
        //                              if (!SelectedEquipEBus.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  Bus Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEBus.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEBus.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.CatOut:
        //                  ed.WriteMessage("Sub Is : CatOut \n");
        //                  Atend.Base.Equipment.ECatOut SelectedEquipECatOut = Atend.Base.Equipment.ECatOut.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipECatOut.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.ECatOut answer = Atend.Base.Equipment.ECatOut.AccessSelectByXCode(SelectedEquipECatOut.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipECatOut.Code == 0)
        //                      {
        //                          if (SelectedEquipECatOut.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipECatOut.Code;
        //                              if (!SelectedEquipECatOut.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  CatOut Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipECatOut.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipECatOut.Code;

        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.Cell:
        //                  ed.WriteMessage("Sub Is : Cell \n");
        //                  Atend.Base.Equipment.ECell SelectedEquipECell = Atend.Base.Equipment.ECell.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipECell.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.ECell answer = Atend.Base.Equipment.ECell.AccessSelectByXCode(SelectedEquipECell.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipECell.Code == 0)
        //                      {
        //                          if (SelectedEquipECell.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipECell.Code;
        //                              if (!SelectedEquipECell.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  Cell Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipECell.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipECell.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.Conductor:
        //                  ed.WriteMessage("Sub Is : Conductor \n");
        //                  Atend.Base.Equipment.EConductor SelectedEquipEConductor = Atend.Base.Equipment.EConductor.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEConductor.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EConductor answer = Atend.Base.Equipment.EConductor.AccessSelectByXCode(SelectedEquipEConductor.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEConductor.Code == 0)
        //                      {
        //                          if (SelectedEquipEConductor.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEConductor.Code;
        //                              if (!SelectedEquipEConductor.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  Conductor  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEConductor.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEConductor.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.Consol:
        //                  ed.WriteMessage("Sub Is : Consol \n");
        //                  //ed.WriteMessage("**XCODE={0}\n", dr["XCode"].ToString());
        //                  Atend.Base.Equipment.EConsol SelectedEquipEConsol = Atend.Base.Equipment.EConsol.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipEConsol.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EConsol answer = Atend.Base.Equipment.EConsol.AccessSelectByXCode(SelectedEquipEConsol.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEConsol.Code == 0)
        //                      {
        //                          if (SelectedEquipEConsol.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEConsol.Code;
        //                              if (!SelectedEquipEConsol.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX Consol  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEConsol.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEConsol.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      // }
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.Countor:
        //                  ed.WriteMessage("Sub Is : Countor \n");
        //                  Atend.Base.Equipment.ECountor SelectedEquipECountor = Atend.Base.Equipment.ECountor.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipECountor.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.ECountor answer = Atend.Base.Equipment.ECountor.AccessSelectByXCode(SelectedEquipECountor.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipECountor.Code == 0)
        //                      {
        //                          if (SelectedEquipECountor.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipECountor.Code;
        //                              if (!SelectedEquipECountor.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX   Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipECountor.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipECountor.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }


        //                      // }
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.CT:
        //                  ed.WriteMessage("Sub Is : CT \n");
        //                  Atend.Base.Equipment.ECT SelectedEquipECT = Atend.Base.Equipment.ECT.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipECT.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.ECT answer = Atend.Base.Equipment.ECT.AccessSelectByXCode(SelectedEquipECT.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipECT.Code == 0)
        //                      {
        //                          if (SelectedEquipECT.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipECT.Code;
        //                              if (!SelectedEquipECT.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX CT  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipECT.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipECT.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }

        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.DB:
        //                  ed.WriteMessage("Sub Is : DB \n");
        //                  Atend.Base.Equipment.EDB SelectedEquipEDB = Atend.Base.Equipment.EDB.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipEDB.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EDB answer = Atend.Base.Equipment.EDB.AccessSelectByXCode(SelectedEquipEDB.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEDB.Code == 0)
        //                      {
        //                          if (SelectedEquipEDB.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEDB.Code;
        //                              if (!SelectedEquipEDB.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX DB  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());

        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEDB.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEDB.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());

        //                          }
        //                      }
        //                      DataTable DBPhuses = Atend.Base.Equipment.EDBPhuse.SelectByDBXCode(xCodeProduct);
        //                      foreach (DataRow DBPhuse in DBPhuses.Rows)
        //                      {
        //                          Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.SelectByXCode(new Guid(DBPhuse["PhuseXcode"].ToString()));
        //                          if (_EPhuse.Code != -1)
        //                          {
        //                              if (_EPhuse.Code == 0)
        //                              {
        //                                  if (!_EPhuse.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("AccessInsert failed" + Type.ToString() + ":Phuse");
        //                                  }
        //                                  else
        //                                  {
        //                                      if (!_EPhuse.UpdateX(LocalTransaction, LocalConnection))
        //                                      {
        //                                          throw new System.Exception("UpdateX Phuse  Failed");
        //                                      }
        //                                  }
        //                              }
        //                              else
        //                              {
        //                                  if (!_EPhuse.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("AccessInsert failed" + Type.ToString() + ":Phuse");
        //                                  }
        //                              }

        //                              Atend.Base.Equipment.EDBPhuse _edbPhuse = Atend.Base.Equipment.EDBPhuse.SelectByXCode(new Guid(DBPhuse["XCode"].ToString()));
        //                              if (_edbPhuse.Code != -1)
        //                              {
        //                                  _edbPhuse.DBCode = SelectedEquipEDB.Code;
        //                                  _edbPhuse.PhuseCode = _EPhuse.Code;
        //                                  if (_edbPhuse.Code == 0)
        //                                  {
        //                                      if (!_edbPhuse.ServerInsert(ServerTransaction, ServerConnection, false, false, LocalTransaction, LocalConnection))
        //                                      {
        //                                          throw new System.Exception("AccessInsert failed" + Type.ToString() + ":DBPhuse");
        //                                      }
        //                                      else
        //                                      {
        //                                          if (!_edbPhuse.UpdateX(LocalTransaction, LocalConnection))
        //                                          {
        //                                              throw new System.Exception("UpdateX  dbPhuse Failed");
        //                                          }
        //                                      }
        //                                  }
        //                                  else
        //                                  {
        //                                      if (!_edbPhuse.ServerUpdate(ServerTransaction, ServerConnection, false, false, LocalTransaction, LocalConnection))
        //                                      {
        //                                          throw new System.Exception("AccessInsert failed" + Type.ToString() + ":DBPhuse");
        //                                      }
        //                                  }
        //                              }
        //                              else
        //                              {
        //                                  throw new System.Exception("Lack of Data in edbPhuse");
        //                              }

        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("Lack Of Data in DBPhuse");
        //                          }

        //                      }
        //                  }
        //                  else
        //                  {
        //                      throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                  }


        //                  break;
        //              case Atend.Control.Enum.ProductType.Disconnector:
        //                  ed.WriteMessage("Sub Is : Disconnector \n");
        //                  Atend.Base.Equipment.EDisconnector SelectedEquipEDisconnector = Atend.Base.Equipment.EDisconnector.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipEDisconnector.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EDisconnector answer = Atend.Base.Equipment.EDisconnector.AccessSelectByXCode(SelectedEquipEDisconnector.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEDisconnector.Code == 0)
        //                      {
        //                          if (SelectedEquipEDisconnector.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEDisconnector.Code;
        //                              if (!SelectedEquipEDisconnector.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX Disconnector  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEDisconnector.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEDisconnector.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;

        //              case Atend.Control.Enum.ProductType.Floor:
        //                  ed.WriteMessage("Sub Is : Floor \n");
        //                  Atend.Base.Equipment.EFloor SelectedEquipEFloor = Atend.Base.Equipment.EFloor.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEFloor.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EFloor answer = Atend.Base.Equipment.EFloor.AccessSelectByXCode(SelectedEquipEFloor.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEFloor.Code == 0)
        //                      {
        //                          if (SelectedEquipEFloor.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEFloor.Code;
        //                              if (!SelectedEquipEFloor.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX Fllor  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEFloor.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEFloor.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;


        //              case Atend.Control.Enum.ProductType.Ground:
        //                  ed.WriteMessage("Sub Is : Ground \n");
        //                  Atend.Base.Equipment.EGround SelectedEquipEGround = Atend.Base.Equipment.EGround.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEGround.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EGround answer = Atend.Base.Equipment.EGround.AccessSelectByXCode(SelectedEquipEGround.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEGround.Code == 0)
        //                      {
        //                          if (SelectedEquipEGround.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEGround.Code;
        //                              if (!SelectedEquipEGround.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  Ground Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEGround.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEGround.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;


        //              case Atend.Control.Enum.ProductType.GroundCabel:
        //                  //ed.WriteMessage("Sub Is : MiddleCabel :={0}\n", dr["XCode"].ToString());
        //                  Atend.Base.Equipment.EGroundCabel SelectedEquipEMiddleGroundCabel = Atend.Base.Equipment.EGroundCabel.SelectByXCodeForDeign(xCodeProduct);
        //                  if (SelectedEquipEMiddleGroundCabel.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EGroundCabel answer = Atend.Base.Equipment.EGroundCabel.AccessSelectByXCode(SelectedEquipEMiddleGroundCabel.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEMiddleGroundCabel.Code == 0)
        //                      {
        //                          if (SelectedEquipEMiddleGroundCabel.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEMiddleGroundCabel.Code;
        //                              if (!SelectedEquipEMiddleGroundCabel.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  GroundCabel Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEMiddleGroundCabel.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEMiddleGroundCabel.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;

        //              case Atend.Control.Enum.ProductType.GroundPost:
        //                  ed.WriteMessage("Sub Is : GroundPost \n");
        //                  Atend.Base.Equipment.EGroundPost SelectedEquipEGroundPost = Atend.Base.Equipment.EGroundPost.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipEGroundPost.Code != -1)
        //                  {
        //                      if (SelectedEquipEGroundPost.Code == 0)
        //                      {
        //                          if (SelectedEquipEGroundPost.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEGroundPost.Code;
        //                              if (!SelectedEquipEGroundPost.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  GroundPost Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEGroundPost.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEGroundPost.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                  }
        //                  break;



        //              case Atend.Control.Enum.ProductType.Halter:
        //                  ed.WriteMessage("Sub Is : Halter \n");
        //                  Atend.Base.Equipment.EHalter SelectedEquipEHalter = Atend.Base.Equipment.EHalter.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEHalter.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EHalter answer = Atend.Base.Equipment.EHalter.AccessSelectByXCode(SelectedEquipEHalter.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEHalter.Code == 0)
        //                      {
        //                          if (SelectedEquipEHalter.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEHalter.Code;
        //                              if (!SelectedEquipEHalter.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX Halter  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEHalter.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEHalter.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;

        //              //case Atend.Control.Enum.ProductType.Halter:
        //              //    Atend.Base.Equipment. SelectedEquip = Atend.Base.Equipment.EBreaker.SelectByXCode(XCode);
        //              //    if (SelectedEquip.Code != -1)
        //              //    {
        //              //        if (SelectedEquip.AccessInsert(_transaction, _connection))
        //              //        {
        //              //            NewCode = SelectedEquip.Code;
        //              //        }
        //              //        else
        //              //        {
        //              //            throw new Exception("{0}.AccessInsert failed", ((Atend.Control.Enum.ProductType)Convert.ToInt32(dr["TableType"])).ToString());
        //              //        }
        //              //    }
        //              //    break;
        //              case Atend.Control.Enum.ProductType.HeaderCabel:
        //                  ed.WriteMessage("Sub Is : HeaderCabel \n");
        //                  Atend.Base.Equipment.EHeaderCabel SelectedEquipEHeaderCabel = Atend.Base.Equipment.EHeaderCabel.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipEHeaderCabel.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EHeaderCabel answer = Atend.Base.Equipment.EHeaderCabel.AccessSelectByXCode(SelectedEquipEHeaderCabel.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEHeaderCabel.Code == 0)
        //                      {
        //                          if (SelectedEquipEHeaderCabel.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEHeaderCabel.Code;
        //                              if (!SelectedEquipEHeaderCabel.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  HeaderCabel Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEHeaderCabel.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEHeaderCabel.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.Insulator:
        //                  ed.WriteMessage("Sub Is : Insulator \n");
        //                  Atend.Base.Equipment.EInsulator SelectedEquipEInsulator = Atend.Base.Equipment.EInsulator.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipEInsulator.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EInsulator answer = Atend.Base.Equipment.EInsulator.AccessSelectByXCode(SelectedEquipEInsulator.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEInsulator.Code == 0)
        //                      {
        //                          if (SelectedEquipEInsulator.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEInsulator.Code;
        //                              if (!SelectedEquipEInsulator.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX Insulator  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEInsulator.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEInsulator.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;


        //              case Atend.Control.Enum.ProductType.InsulatorChain:
        //                  ed.WriteMessage("Sub Is : InsulatorChain \n");
        //                  Atend.Base.Equipment.EInsulatorChain SelectedEquipEInsulatorChain = Atend.Base.Equipment.EInsulatorChain.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEInsulatorChain.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EInsulatorChain answer = Atend.Base.Equipment.EInsulatorChain.AccessSelectByXCode(SelectedEquipEInsulatorChain.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEInsulatorChain.Code == 0)
        //                      {
        //                          if (SelectedEquipEInsulatorChain.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEInsulatorChain.Code;
        //                              if (!SelectedEquipEInsulatorChain.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX InsulatorChain  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEInsulatorChain.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEInsulatorChain.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;

        //              case Atend.Control.Enum.ProductType.InsulatorPipe:
        //                  ed.WriteMessage("Sub Is : InsulatorPipe \n");
        //                  Atend.Base.Equipment.EInsulatorPipe SelectedEquipEInsulatorPipe = Atend.Base.Equipment.EInsulatorPipe.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEInsulatorPipe.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EInsulatorPipe answer = Atend.Base.Equipment.EInsulatorPipe.AccessSelectByXCode(SelectedEquipEInsulatorPipe.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEInsulatorPipe.Code == 0)
        //                      {
        //                          if (SelectedEquipEInsulatorPipe.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEInsulatorPipe.Code;
        //                              if (!SelectedEquipEInsulatorPipe.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX InsulatorPipe  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEInsulatorPipe.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEInsulatorPipe.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;


        //              case Atend.Control.Enum.ProductType.MiddleJackPanel:
        //                  ////ed.WriteMessage("AAA : {0} \n", new Guid(dr["XCode"].ToString()));
        //                  ed.WriteMessage("Sub Is : MiddleJackPanel \n");
        //                  Atend.Base.Equipment.EJAckPanel SelectedEquipEJAckPanel = Atend.Base.Equipment.EJAckPanel.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipEJAckPanel.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EJAckPanel answer = Atend.Base.Equipment.EJAckPanel.AccessSelectByXCode(SelectedEquipEJAckPanel.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{

        //                      Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.SelectByXCode(SelectedEquipEJAckPanel.MasterProductXCode);
        //                      if (_eBus.Code != -1)
        //                      {
        //                          if (_eBus.Code == 0)
        //                          {
        //                              if (!_eBus.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("AccessInsert failed" + Type.ToString() + ":Bus");
        //                              }
        //                              else
        //                              {
        //                                  if (!_eBus.UpdateX(LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("UpdateX  bus Failed");
        //                                  }
        //                              }
        //                          }
        //                          else
        //                          {
        //                              if (!_eBus.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("AccessInsert failed" + Type.ToString() + ":Bus");
        //                              }
        //                          }
        //                      }
        //                      else
        //                      {
        //                          throw new System.Exception("Lack of data in MiddleJackPanel:Bus");
        //                      }

        //                      SelectedEquipEJAckPanel.MasterProductCode = _eBus.Code;
        //                      if (SelectedEquipEJAckPanel.Code == 0)
        //                      {

        //                          if (SelectedEquipEJAckPanel.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEJAckPanel.Code;
        //                              if (!SelectedEquipEJAckPanel.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX JackPanel  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("Serevr Insert Failed in MJackPanel");
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEJAckPanel.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEJAckPanel.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("Serevr Update Failed in MJackPanel");
        //                          }
        //                      }

        //                      //if (SelectedEquipEJAckPanel.ServerInsert(_transaction, _connection, true, false))
        //                      //{
        //                      //    NewCode = SelectedEquipEJAckPanel.Code;
        //                      DataTable _JPS = Atend.Base.Equipment.EJackPanelCell.SelectByJackPanelXCode(SelectedEquipEJAckPanel.XCode);
        //                      foreach (DataRow _JPSdr in _JPS.Rows)
        //                      {
        //                          Atend.Base.Equipment.ECell _eCell = Atend.Base.Equipment.ECell.SelectByXCode(new Guid(_JPSdr["ProductXCode"].ToString()));
        //                          if (_eCell.Code != -1)
        //                          {
        //                              if (_eCell.Code == 0)
        //                              {
        //                                  if (!_eCell.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("AccessInsert failed" + Type.ToString() + ":Cell");
        //                                  }
        //                                  else
        //                                  {
        //                                      if (!_eCell.UpdateX(LocalTransaction, LocalConnection))
        //                                      {
        //                                          throw new System.Exception("UpdateX  ECell Failed");
        //                                      }
        //                                  }
        //                              }
        //                              else
        //                              {
        //                                  if (!_eCell.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("AccessInsert failed" + Type.ToString() + ":Cell");
        //                                  }
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("Lack of data in MiddleJackPanel:Cell");
        //                          }
        //                          Atend.Base.Equipment.EJackPanelCell _EJC = Atend.Base.Equipment.EJackPanelCell.SelectByXCode(new Guid(_JPSdr["XCode"].ToString()));
        //                          if (_EJC.Code != -1)
        //                          {
        //                              _EJC.ProductCode = _eCell.Code;
        //                              _EJC.JackPanelCode = SelectedEquipEJAckPanel.Code;
        //                              if (_EJC.Code == 0)
        //                              {
        //                                  if (!_EJC.ServerInsert(ServerTransaction, ServerConnection, false, false, LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("AccessInsert failed" + Type.ToString() + ":JackPanelCell");
        //                                  }
        //                                  else
        //                                  {
        //                                      if (!_EJC.UpdateX(LocalConnection, LocalTransaction))
        //                                      {
        //                                          throw new System.Exception("UpdateX  EJC Failed");
        //                                      }
        //                                  }
        //                              }
        //                              else
        //                              {
        //                                  if (!_EJC.ServerUpdate(ServerTransaction, ServerConnection, false, false, LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("AccessInsert failed" + Type.ToString() + ":JackPanelCell");
        //                                  }
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("Lack of data in MiddleJackPanel:JackPanelCell");
        //                          }
        //                      }
        //                  }
        //                  else
        //                  {
        //                      throw new System.Exception("Lack Of DAta in MidJackPanel");
        //                  }
        //                  //}
        //                  //}
        //                  break;


        //              case Atend.Control.Enum.ProductType.WeekJackPanel:
        //                  ed.WriteMessage("Sub Is : WeekJackPanel \n");
        //                  Atend.Base.Equipment.EJackPanelWeek SelectedEquipWeekJackPanel = Atend.Base.Equipment.EJackPanelWeek.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipWeekJackPanel.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EJackPanelWeek answer = Atend.Base.Equipment.EJackPanelWeek.AccessSelectByXCode(SelectedEquipWeekJackPanel.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{

        //                      Atend.Base.Equipment.EBus _eBus = Atend.Base.Equipment.EBus.SelectByXCode(SelectedEquipWeekJackPanel.BusXCode);
        //                      if (_eBus.Code != -1)
        //                      {
        //                          if (_eBus.Code == 0)
        //                          {
        //                              if (!_eBus.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("AccessInsert failed" + Type.ToString() + ":Bus");
        //                              }
        //                              else
        //                              {
        //                                  if (!_eBus.UpdateX(LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("UpdateX bus  Failed");
        //                                  }
        //                              }
        //                          }
        //                          else
        //                          {
        //                              if (!_eBus.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("AccessInsert failed" + Type.ToString() + ":Bus");
        //                              }
        //                          }
        //                      }
        //                      else
        //                      {
        //                          throw new System.Exception("Lack of data in WeekJackPanel:Bus");
        //                      }
        //                      SelectedEquipWeekJackPanel.BusCode = _eBus.Code;

        //                      Atend.Base.Equipment.EAutoKey_3p _Key = Atend.Base.Equipment.EAutoKey_3p.SelectByXCodeForDesign(SelectedEquipWeekJackPanel.AutoKey3pXCode);
        //                      //ed.WriteMessage("1\n");

        //                      if (_Key.Code != -1)
        //                      {
        //                          //ed.WriteMessage("2\n");
        //                          if (_Key.Code == 0)
        //                          {
        //                              if (!_Key.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                              {
        //                                  //ed.WriteMessage("3\n");
        //                                  throw new System.Exception("AccessInsert failed" + Type.ToString() + ":EAutoKey_3p");
        //                              }
        //                              else
        //                              {
        //                                  if (!_Key.UpdateX(LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("UpdateX  Key Failed");
        //                                  }
        //                              }
        //                          }
        //                          else
        //                          {
        //                              if (!_Key.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                              {
        //                                  //ed.WriteMessage("3\n");
        //                                  throw new System.Exception("AccessInsert failed" + Type.ToString() + ":EAutoKey_3p");
        //                              }
        //                          }
        //                          //ed.WriteMessage("4\n");
        //                      }
        //                      else
        //                      {
        //                          throw new System.Exception("Lack of data in WeekJackPanel:EAutoKey_3p");
        //                      }
        //                      //ed.WriteMessage("insert passed \n");
        //                      SelectedEquipWeekJackPanel.AutoKey3pCode = _Key.Code;
        //                      if (SelectedEquipWeekJackPanel.Code == 0)
        //                      {
        //                          if (SelectedEquipWeekJackPanel.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipWeekJackPanel.Code;
        //                              if (!SelectedEquipWeekJackPanel.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  WeekJackPanel Failed");
        //                              }
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipWeekJackPanel.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipWeekJackPanel.Code;
        //                          }
        //                      }
        //                      //if (SelectedEquipWeekJackPanel.ServerInsert(_transaction, _connection, true, false))
        //                      //{
        //                      //    NewCode = SelectedEquipWeekJackPanel.Code;

        //                      DataTable _WJS = Atend.Base.Equipment.EJackPanelWeekCell.SelectByJackPanelWeekXCode(SelectedEquipWeekJackPanel.XCode);
        //                      foreach (DataRow _WJSdr in _WJS.Rows)
        //                      {
        //                          //ed.WriteMessage("go for cells \n");
        //                          Atend.Base.Equipment.EJackPanelWeekCell _WJC = Atend.Base.Equipment.EJackPanelWeekCell.SelectByXCode(new Guid(_WJSdr["XCode"].ToString()));
        //                          if (_WJC.Code != -1)
        //                          {
        //                              _WJC.JackPanelWeekCode = SelectedEquipWeekJackPanel.Code;
        //                              if (_WJC.Code == 0)
        //                              {
        //                                  if (!_WJC.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("AccessInsert failed" + Type.ToString() + ":WeekJackPanelCell");
        //                                  }
        //                                  else
        //                                  {
        //                                      //     if (!_WJC.upa)
        //                                      //{
        //                                      //     throw new System.Exception("UpdateX   Failed");
        //                                      //}
        //                                  }
        //                              }
        //                              else
        //                              {
        //                                  if (!_WJC.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("AccessInsert failed" + Type.ToString() + ":WeekJackPanelCell");
        //                                  }
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("Lack of data in WeekJackPanel:WeekJackPanelCell");
        //                          }
        //                      }

        //                  }
        //                  else
        //                  {
        //                      throw new System.Exception("Lack Of Data In Week JackPanel");
        //                  }
        //                  //}
        //                  break;


        //              case Atend.Control.Enum.ProductType.KablSho:
        //                  ed.WriteMessage("Sub Is : KablSho \n");
        //                  Atend.Base.Equipment.EKablsho SelectedEquipEKablsho = Atend.Base.Equipment.EKablsho.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEKablsho.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EKablsho answer = Atend.Base.Equipment.EKablsho.AccessSelectByXCode(SelectedEquipEKablsho.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEKablsho.Code == 0)
        //                      {
        //                          if (SelectedEquipEKablsho.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEKablsho.Code;
        //                              if (!SelectedEquipEKablsho.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  KablSho Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEKablsho.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEKablsho.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.Kalamp:
        //                  ed.WriteMessage("Sub Is : Kalamp \n");
        //                  Atend.Base.Equipment.EClamp SelectedEquipEClamp = Atend.Base.Equipment.EClamp.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEClamp.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EClamp answer = Atend.Base.Equipment.EClamp.AccessSelectByXCode(SelectedEquipEClamp.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEClamp.Code == 0)
        //                      {
        //                          if (SelectedEquipEClamp.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEClamp.Code;
        //                              if (!SelectedEquipEClamp.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX Calamp  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEClamp.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEClamp.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.Khazan:
        //                  ed.WriteMessage("Sub Is : Khazan \n");
        //                  Atend.Base.Equipment.EKhazan SelectedEquipEKhazan = Atend.Base.Equipment.EKhazan.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipEKhazan.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EKhazan answer = Atend.Base.Equipment.EKhazan.AccessSelectByXCode(SelectedEquipEKhazan.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEKhazan.Code == 0)
        //                      {
        //                          if (SelectedEquipEKhazan.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEKhazan.Code;
        //                              if (!SelectedEquipEKhazan.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX Khazan Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEKhazan.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEKhazan.Code;

        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;

        //              case Atend.Control.Enum.ProductType.Light:
        //                  ed.WriteMessage("Sub Is : Light \n");
        //                  Atend.Base.Equipment.ELight SelectedEquipELight = Atend.Base.Equipment.ELight.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipELight.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.ELight answer = Atend.Base.Equipment.ELight.AccessSelectByXCode(SelectedEquipELight.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipELight.Code == 0)
        //                      {
        //                          if (SelectedEquipELight.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipELight.Code;
        //                              if (!SelectedEquipELight.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX Light  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipELight.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipELight.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;

        //              case Atend.Control.Enum.ProductType.Mafsal:
        //                  ed.WriteMessage("Sub Is : Mafsal \n");
        //                  Atend.Base.Equipment.EMafsal SelectedEquipEMafsal = Atend.Base.Equipment.EMafsal.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEMafsal.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EMafsal answer = Atend.Base.Equipment.EMafsal.AccessSelectByXCode(SelectedEquipEMafsal.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEMafsal.Code == 0)
        //                      {
        //                          if (SelectedEquipEMafsal.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEMafsal.Code;
        //                              if (!SelectedEquipEMafsal.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX Mafsal  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEMafsal.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEMafsal.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;

        //              case Atend.Control.Enum.ProductType.MeasuredJackPanel:
        //                  ed.WriteMessage("Sub Is : MeasuredJackPanel \n");
        //                  Atend.Base.Equipment.EMeasuredJackPanel SelectedEquipEMeasuredJackPanel = Atend.Base.Equipment.EMeasuredJackPanel.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEMeasuredJackPanel.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EMeasuredJackPanel answer = Atend.Base.Equipment.EMeasuredJackPanel.AccessSelectByXCode(SelectedEquipEMeasuredJackPanel.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEMeasuredJackPanel.Code == 0)
        //                      {
        //                          if (SelectedEquipEMeasuredJackPanel.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEMeasuredJackPanel.Code;
        //                              if (!SelectedEquipEMeasuredJackPanel.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX MeasureJackPanel  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEMeasuredJackPanel.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEMeasuredJackPanel.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;


        //              case Atend.Control.Enum.ProductType.MiniatureKey:
        //                  ed.WriteMessage("Sub Is : MiniatureKey \n");
        //                  Atend.Base.Equipment.EMiniatorKey SelectedEquipEMiniatorKey = Atend.Base.Equipment.EMiniatorKey.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEMiniatorKey.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EMiniatorKey answer = Atend.Base.Equipment.EMiniatorKey.AccessSelectByXCode(SelectedEquipEMiniatorKey.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEMiniatorKey.Code == 0)
        //                      {
        //                          if (SelectedEquipEMiniatorKey.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEMiniatorKey.Code;
        //                              if (!SelectedEquipEMiniatorKey.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX MiniatorKey  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEMiniatorKey.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEMiniatorKey.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.PhotoCell:
        //                  ed.WriteMessage("Sub Is : PhotoCell \n");
        //                  Atend.Base.Equipment.EPhotoCell SelectedEquipEPhotoCell = Atend.Base.Equipment.EPhotoCell.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEPhotoCell.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EPhotoCell answer = Atend.Base.Equipment.EPhotoCell.AccessSelectByXCode(SelectedEquipEPhotoCell.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEPhotoCell.Code == 0)
        //                      {
        //                          if (SelectedEquipEPhotoCell.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEPhotoCell.Code;
        //                              if (!SelectedEquipEPhotoCell.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX PhotoCell  Failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEPhotoCell.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEPhotoCell.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.Phuse:
        //                  ed.WriteMessage("Sub Is : Phuse \n");
        //                  Atend.Base.Equipment.EPhuse SelectedEquipEPhuse = Atend.Base.Equipment.EPhuse.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEPhuse.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EPhuse answer = Atend.Base.Equipment.EPhuse.AccessSelectByXCode(SelectedEquipEPhuse.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCode(SelectedEquipEPhuse.PhusePoleXCode);
        //                      if (_EPhusePole.Code != -1)
        //                      {
        //                          if (_EPhusePole.Code == 0)
        //                          {
        //                              if (!_EPhusePole.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("AccessInsert failed" + Type.ToString() + ":PhusePole");
        //                              }
        //                              else
        //                              {
        //                                  if (!_EPhusePole.UpdateX(LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("UpdateX phusePole  Failed");
        //                                  }
        //                              }
        //                          }
        //                          else
        //                          {
        //                              if (!_EPhusePole.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("AccessInsert failed" + Type.ToString() + ":PhusePole");
        //                              }
        //                          }
        //                      }
        //                      else
        //                      {
        //                          throw new System.Exception("Lack of data in Phuse:PhusePole");
        //                      }
        //                      ed.WriteMessage("PhusePoleCode:{0}\n", _EPhusePole.Code);
        //                      SelectedEquipEPhuse.PhusePoleCode = _EPhusePole.Code;
        //                      if (SelectedEquipEPhuse.Code == 0)
        //                      {
        //                          if (SelectedEquipEPhuse.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEPhuse.Code;
        //                              if (SelectedEquipEPhuse.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                              {
        //                                  NewCode = SelectedEquipEPhuse.Code;
        //                                  if (!SelectedEquipEPhuse.UpdateX(LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("UpdateX  Phuse  failed");
        //                                  }
        //                              }
        //                              else
        //                              {
        //                                  throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEPhuse.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEPhuse.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }


        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.PhuseKey:
        //                  ed.WriteMessage("Sub Is : PhuseKey \n");
        //                  Atend.Base.Equipment.EPhuseKey SelectedEquipEPhuseKey = Atend.Base.Equipment.EPhuseKey.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEPhuseKey.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EPhuseKey answer = Atend.Base.Equipment.EPhuseKey.AccessSelectByXCode(SelectedEquipEPhuseKey.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEPhuseKey.Code == 0)
        //                      {
        //                          if (SelectedEquipEPhuseKey.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEPhuseKey.Code;
        //                              if (!SelectedEquipEPhuseKey.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  PhuseKey  failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEPhuseKey.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEPhuseKey.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.PhusePole:
        //                  ed.WriteMessage("Sub Is : PhusePole \n");
        //                  Atend.Base.Equipment.EPhusePole SelectedEquipEPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEPhusePole.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EPhusePole answer = Atend.Base.Equipment.EPhusePole.AccessSelectByXCode(SelectedEquipEPhusePole.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEPhusePole.Code == 0)
        //                      {
        //                          if (SelectedEquipEPhusePole.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEPhusePole.Code;
        //                              if (!SelectedEquipEPhusePole.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  PhusePole  failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEPhusePole.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEPhusePole.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              case Atend.Control.Enum.ProductType.Pole:
        //                  ed.WriteMessage("Sub Is : Pole \n");
        //                  Atend.Base.Equipment.EPole SelectedEquipEPole = Atend.Base.Equipment.EPole.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipEPole.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EPole answer = Atend.Base.Equipment.EPole.AccessSelectByXCode(SelectedEquipEPole.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEPole.Code == 0)
        //                      {
        //                          if (SelectedEquipEPole.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEPole.Code;
        //                              if (!SelectedEquipEPole.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX   Pole failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEPole.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEPole.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              ////case Atend.Control.Enum.ProductType.PoleTip:
        //              ////    ed.WriteMessage("Sub Is : PoleTip \n");
        //              ////    Atend.Base.Equipment.EPoleTip SelectedEquipEPoleTip = Atend.Base.Equipment.EPoleTip.SelectByXCodeForDesign(new Guid(dr["XCode"].ToString()));
        //              ////    if (SelectedEquipEPoleTip.Code != -1)
        //              ////    {
        //              ////        //Atend.Base.Equipment.EPoleTip answer = Atend.Base.Equipment.EPoleTip.AccessSelectByXCode(SelectedEquipEPoleTip.XCode, _transaction, _connection);
        //              ////        //if (answer.Code != -1)
        //              ////        //{
        //              ////        //    NewCode = answer.Code;
        //              ////        //}
        //              ////        //else
        //              ////        //{

        //              ////        Atend.Base.Equipment.EPole _ePole = Atend.Base.Equipment.EPole.SelectByXCode(SelectedEquipEPoleTip.PoleXCode);
        //              ////        if (_ePole.Code != -1)
        //              ////        {
        //              ////            if (!_ePole.AccessInsert(_transaction, _connection, true, true))
        //              ////            {
        //              ////                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":POle");
        //              ////            }
        //              ////        }
        //              ////        else
        //              ////        {
        //              ////            throw new System.Exception("Lack of data in poleTip:Pole");
        //              ////        }

        //              ////        Atend.Base.Equipment.EHalter _eHalter = Atend.Base.Equipment.EHalter.SelectByXCode(SelectedEquipEPoleTip.HalterXID);
        //              ////        if (_eHalter.Code != -1)
        //              ////        {
        //              ////            if (!_eHalter.AccessInsert(_transaction, _connection, true, true))
        //              ////            {
        //              ////                throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString() + ":Halter");
        //              ////            }
        //              ////        }
        //              ////        else
        //              ////        {
        //              ////            throw new System.Exception("Lack of data in poleTip:Halter");
        //              ////        }

        //              ////        SelectedEquipEPoleTip.PoleCode = _ePole.Code;
        //              ////        SelectedEquipEPoleTip.HalterID = _eHalter.Code;
        //              ////        if (SelectedEquipEPoleTip.AccessInsert(_transaction, _connection, true, false))
        //              ////        {
        //              ////            NewCode = SelectedEquipEPoleTip.Code;
        //              ////        }
        //              ////        else
        //              ////        {
        //              ////            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
        //              ////        }



        //              ////        //}
        //              ////    }
        //              ////    break;
        //              case Atend.Control.Enum.ProductType.Prop:
        //                  ed.WriteMessage("Sub Is : Prop \n");
        //                  Atend.Base.Equipment.EProp SelectedEquipEProp = Atend.Base.Equipment.EProp.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEProp.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EProp answer = Atend.Base.Equipment.EProp.AccessSelectByXCode(SelectedEquipEProp.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEProp.Code == 0)
        //                      {
        //                          if (SelectedEquipEProp.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEProp.Code;
        //                              if (!SelectedEquipEProp.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  Prop  failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("container error in AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEProp.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEProp.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("container error in AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;

        //              case Atend.Control.Enum.ProductType.PT:
        //                  ed.WriteMessage("Sub Is : PT \n");
        //                  Atend.Base.Equipment.EPT SelectedEquipEPT = Atend.Base.Equipment.EPT.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEPT.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EPT answer = Atend.Base.Equipment.EPT.AccessSelectByXCode(SelectedEquipEPT.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEPT.Code == 0)
        //                      {
        //                          if (SelectedEquipEPT.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEPT.Code;
        //                              if (!SelectedEquipEPT.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  PT  failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEPT.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEPT.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;



        //              case Atend.Control.Enum.ProductType.Ramp:
        //                  ed.WriteMessage("Sub Is : Ramp \n");
        //                  Atend.Base.Equipment.ERamp SelectedEquipERamp = Atend.Base.Equipment.ERamp.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipERamp.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.ERamp answer = Atend.Base.Equipment.ERamp.AccessSelectByXCode(SelectedEquipERamp.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipERamp.Code == 0)
        //                      {
        //                          if (SelectedEquipERamp.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipERamp.Code;
        //                              if (!SelectedEquipERamp.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX   Ramp failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipERamp.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipERamp.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;


        //              case Atend.Control.Enum.ProductType.ReCloser:
        //                  ed.WriteMessage("Sub Is : ReCloser \n");
        //                  Atend.Base.Equipment.EReCloser SelectedEquipEReCloser = Atend.Base.Equipment.EReCloser.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipEReCloser.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EReCloser answer = Atend.Base.Equipment.EReCloser.AccessSelectByXCode(SelectedEquipEReCloser.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEReCloser.Code == 0)
        //                      {
        //                          if (SelectedEquipEReCloser.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEReCloser.Code;
        //                              if (!SelectedEquipEReCloser.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX   ReCloser failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEReCloser.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEReCloser.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;

        //              case Atend.Control.Enum.ProductType.Rod:
        //                  ed.WriteMessage("Sub Is : Rod \n");
        //                  Atend.Base.Equipment.ERod SelectedEquipERod = Atend.Base.Equipment.ERod.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipERod.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.ERod answer = Atend.Base.Equipment.ERod.AccessSelectByXCode(SelectedEquipERod.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipERod.Code == 0)
        //                      {
        //                          if (SelectedEquipERod.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipERod.Code;
        //                              if (!SelectedEquipERod.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  Rod  failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipERod.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipERod.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;

        //              case Atend.Control.Enum.ProductType.SectionLizer:
        //                  ed.WriteMessage("Sub Is : SectionLizer \n");
        //                  Atend.Base.Equipment.ESectionLizer SelectedEquipESectionLizer = Atend.Base.Equipment.ESectionLizer.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipESectionLizer.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.ESectionLizer answer = Atend.Base.Equipment.ESectionLizer.AccessSelectByXCode(SelectedEquipESectionLizer.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipESectionLizer.Code == 0)
        //                      {
        //                          if (SelectedEquipESectionLizer.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipESectionLizer.Code;
        //                              if (!SelectedEquipESectionLizer.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  SectionLizer  failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipESectionLizer.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipESectionLizer.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;

        //              case Atend.Control.Enum.ProductType.SelfKeeper:
        //                  ed.WriteMessage("Sub Is : SelfKeeper \n");
        //                  Atend.Base.Equipment.ESelfKeeper SelectedEquipESelfKeeper = Atend.Base.Equipment.ESelfKeeper.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipESelfKeeper.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.ESelfKeeper answer = Atend.Base.Equipment.ESelfKeeper.AccessSelectByXCode(SelectedEquipESelfKeeper.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipESelfKeeper.Code == 0)
        //                      {
        //                          if (SelectedEquipESelfKeeper.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipESelfKeeper.Code;
        //                              if (!SelectedEquipESelfKeeper.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  SelfKeeper  failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipESelfKeeper.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipESelfKeeper.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //              //case Atend.Control.Enum.ProductType.SelfKeeperTip:
        //              //    ed.WriteMessage("Sub Is : SelfKeeperTip \n");
        //              //    Atend.Base.Equipment.ESelfKeeperTip SelectedEquipESelfKeeperTip = Atend.Base.Equipment.ESelfKeeperTip.SelectByXCode(new Guid(dr["XCode"].ToString()));
        //              //    if (SelectedEquipESelfKeeperTip.Code != -1)
        //              //    {
        //              //        //Atend.Base.Equipment.ESelfKeeperTip answer = Atend.Base.Equipment.ESelfKeeperTip.AccessSelectByXCode(SelectedEquipESelfKeeperTip.XCode, _transaction, _connection);
        //              //        //if (answer.Code != -1)
        //              //        //{
        //              //        //    NewCode = answer.Code;
        //              //        //}
        //              //        //else
        //              //        //{
        //              //        if (SelectedEquipESelfKeeperTip.AccessInsert(_transaction, _connection))
        //              //        {
        //              //            NewCode = SelectedEquipESelfKeeperTip.Code;
        //              //        }
        //              //        else
        //              //        {
        //              //            throw new System.Exception("AccessInsert failed" + Convert.ToInt32(dr["TableType"]).ToString());
        //              //        }
        //              //        //}
        //              //    }
        //              //    break;

        //              case Atend.Control.Enum.ProductType.StreetBox:
        //                  ed.WriteMessage("Sub Is : StreetBox \n");
        //                  Atend.Base.Equipment.EStreetBox SelectedEquipEStreetBox = Atend.Base.Equipment.EStreetBox.SelectByXCodeForDesign(xCodeProduct);
        //                  if (SelectedEquipEStreetBox.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.EStreetBox answer = Atend.Base.Equipment.EStreetBox.AccessSelectByXCode(SelectedEquipEStreetBox.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipEStreetBox.Code == 0)
        //                      {
        //                          if (SelectedEquipEStreetBox.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEStreetBox.Code;
        //                              if (!SelectedEquipEStreetBox.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  StreetBox  failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("Server IinSert Failed " + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipEStreetBox.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipEStreetBox.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("Server Update Failed " + Type.ToString());
        //                          }
        //                      }
        //                      //if (SelectedEquipEStreetBox.ServerInsert(_transaction, _connection, true, false))
        //                      //{
        //                      //    NewCode = SelectedEquipEStreetBox.Code;
        //                      DataTable StreetBoxPhuses = Atend.Base.Equipment.EStreetBoxPhuse.SelectByStreetBoxXCode(xCodeProduct);
        //                      foreach (DataRow StreetBoxPhuse in StreetBoxPhuses.Rows)
        //                      {
        //                          //ed.WriteMessage("110\n");
        //                          Atend.Base.Equipment.EPhuse _EPhuse = Atend.Base.Equipment.EPhuse.SelectByXCode(new Guid(StreetBoxPhuse["PhuseXCode"].ToString()));
        //                          if (_EPhuse.Code != -1)
        //                          {
        //                              //ed.WriteMessage("111\n");
        //                              Atend.Base.Equipment.EPhusePole _EPhusePole = Atend.Base.Equipment.EPhusePole.SelectByXCode(_EPhuse.PhusePoleXCode);
        //                              if (_EPhusePole.Code != -1)
        //                              {
        //                                  //ed.WriteMessage("112\n");
        //                                  if (_EPhusePole.Code == 0)
        //                                  {
        //                                      if (!_EPhusePole.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                                      {
        //                                          throw new System.Exception("AccessInsert failed" + Type.ToString() + ":PhusePole");
        //                                      }
        //                                      else
        //                                      {
        //                                          if (!_EPhusePole.UpdateX(LocalTransaction, LocalConnection))
        //                                          {
        //                                              throw new System.Exception("UpdateX  PhusePole  failed");
        //                                          }
        //                                      }
        //                                  }
        //                                  else
        //                                  {
        //                                      if (!_EPhusePole.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                                      {
        //                                          throw new System.Exception("AccessInsert failed" + Type.ToString() + ":PhusePole");
        //                                      }
        //                                  }
        //                              }
        //                              else
        //                              {
        //                                  throw new System.Exception("Lack of data in StreetBox:Phuse:PhusePole");
        //                              }
        //                              //ed.WriteMessage("streetbox was :{0} \n", _EPhusePole.Code);
        //                              _EPhuse.PhusePoleCode = _EPhusePole.Code;
        //                              if (_EPhuse.Code == 0)
        //                              {
        //                                  if (!_EPhuse.ServerInsert(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("AccessInsert failed" + Type.ToString() + ":Phuse");
        //                                  }
        //                                  else
        //                                  {
        //                                      if (!_EPhuse.UpdateX(LocalTransaction, LocalConnection))
        //                                      {
        //                                          throw new System.Exception("UpdateX    failed");
        //                                      }
        //                                  }
        //                              }
        //                              else
        //                              {
        //                                  if (!_EPhuse.ServerUpdate(ServerTransaction, ServerConnection, true, true, LocalTransaction, LocalConnection))
        //                                  {
        //                                      throw new System.Exception("AccessInsert failed" + Type.ToString() + ":Phuse");
        //                                  }
        //                              }

        //                              Atend.Base.Equipment.EStreetBoxPhuse _EStreetBoxPhuse = Atend.Base.Equipment.EStreetBoxPhuse.SelectByXCode(new Guid(StreetBoxPhuse["Xcode"].ToString()));
        //                              if (_EStreetBoxPhuse.Code != -1)
        //                              {
        //                                  _EStreetBoxPhuse.PhuseCode = _EPhuse.Code;
        //                                  _EStreetBoxPhuse.StreetBoxCode = SelectedEquipEStreetBox.Code;
        //                                  if (_EStreetBoxPhuse.Code == 0)
        //                                  {
        //                                      if (!_EStreetBoxPhuse.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                                      {
        //                                          throw new System.Exception("AccessInsert failed" + Type.ToString() + ":StreetBoxPhuse");
        //                                      }
        //                                      else
        //                                      {
        //                                          if (!_EStreetBoxPhuse.UpdateX(LocalTransaction, LocalConnection))
        //                                          {
        //                                              throw new System.Exception("UpdateX  streetBoxPhuse  failed");
        //                                          }
        //                                      }
        //                                  }
        //                                  else
        //                                  {
        //                                      if (!_EStreetBoxPhuse.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                                      {
        //                                          throw new System.Exception("AccessInsert failed" + Type.ToString() + ":StreetBoxPhuse");
        //                                      }
        //                                  }
        //                              }
        //                              else
        //                              {
        //                                  throw new System.Exception("Lack of data in StreetBox:StreetBoxPhuse");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("Lack of data in StreetBox:Phuse");
        //                          }
        //                      }
        //                  }
        //                  else
        //                  {
        //                      throw new System.Exception("Lack Of DAta in StreetBox");
        //                  }
        //                  //}
        //                  break;
        //              case Atend.Control.Enum.ProductType.Transformer:
        //                  ed.WriteMessage("Sub Is : Transformer \n");
        //                  Atend.Base.Equipment.ETransformer SelectedEquipETransformer = Atend.Base.Equipment.ETransformer.SelectByXCode(xCodeProduct);
        //                  if (SelectedEquipETransformer.Code != -1)
        //                  {
        //                      //Atend.Base.Equipment.ETransformer answer = Atend.Base.Equipment.ETransformer.AccessSelectByXCode(SelectedEquipETransformer.XCode, _transaction, _connection);
        //                      //if (answer.Code != -1)
        //                      //{
        //                      //    NewCode = answer.Code;
        //                      //}
        //                      //else
        //                      //{
        //                      if (SelectedEquipETransformer.Code == 0)
        //                      {
        //                          if (SelectedEquipETransformer.ServerInsert(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipETransformer.Code;
        //                              if (!SelectedEquipETransformer.UpdateX(LocalTransaction, LocalConnection))
        //                              {
        //                                  throw new System.Exception("UpdateX  Transform  failed");
        //                              }
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      else
        //                      {
        //                          if (SelectedEquipETransformer.ServerUpdate(ServerTransaction, ServerConnection, true, false, LocalTransaction, LocalConnection))
        //                          {
        //                              NewCode = SelectedEquipETransformer.Code;
        //                          }
        //                          else
        //                          {
        //                              throw new System.Exception("AccessInsert failed" + Type.ToString());
        //                          }
        //                      }
        //                      //}
        //                  }
        //                  break;
        //          }
        //          #endregion

    }
}
